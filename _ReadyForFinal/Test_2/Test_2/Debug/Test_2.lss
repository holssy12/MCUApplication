
Test_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800200  00000b42  00000bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800226  00800226  00000bfc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bfc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010b2  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d1c  00000000  00000000  00001daa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006cd  00000000  00000000  00002ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00003194  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061c  00000000  00000000  00003334  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f4  00000000  00000000  00003950  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003f44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	40 c1       	rjmp	.+640    	; 0x286 <__vector_1>
   6:	00 00       	nop
   8:	97 c1       	rjmp	.+814    	; 0x338 <__vector_2>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	e8 c1       	rjmp	.+976    	; 0x3e6 <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e4       	ldi	r30, 0x42	; 66
  fc:	fb e0       	ldi	r31, 0x0B	; 11
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 32       	cpi	r26, 0x26	; 38
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e2       	ldi	r26, 0x26	; 38
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 32       	cpi	r26, 0x2A	; 42
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	9b d1       	rcall	.+822    	; 0x456 <main>
 120:	0e c5       	rjmp	.+2588   	; 0xb3e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <tx_char>:
void tx_str(unsigned char *txStr, int len) {
	int i = 0;
	for(i=0; i<len; i++) {
		tx_char(txStr[i]);
	}
}
 124:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <tx_char>
 12c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 130:	08 95       	ret

00000132 <myPrintf>:

void myPrintf(char *fmt,...) {
 132:	0f 93       	push	r16
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
 13e:	c0 58       	subi	r28, 0x80	; 128
 140:	d1 09       	sbc	r29, r1
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	de bf       	out	0x3e, r29	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	cd bf       	out	0x3d, r28	; 61
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	08 c0       	rjmp	.+16     	; 0x160 <myPrintf+0x2e>
		sText[i] = 0;
 150:	e1 e0       	ldi	r30, 0x01	; 1
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	ec 0f       	add	r30, r28
 156:	fd 1f       	adc	r31, r29
 158:	e8 0f       	add	r30, r24
 15a:	f1 1d       	adc	r31, r1
 15c:	10 82       	st	Z, r1
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 15e:	8f 5f       	subi	r24, 0xFF	; 255
 160:	88 23       	and	r24, r24
 162:	b4 f7       	brge	.-20     	; 0x150 <myPrintf+0x1e>
		sText[i] = 0;
	}
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
 164:	ae 01       	movw	r20, r28
 166:	46 57       	subi	r20, 0x76	; 118
 168:	5f 4f       	sbci	r21, 0xFF	; 255
 16a:	c8 57       	subi	r28, 0x78	; 120
 16c:	df 4f       	sbci	r29, 0xFF	; 255
 16e:	68 81       	ld	r22, Y
 170:	79 81       	ldd	r23, Y+1	; 0x01
 172:	c8 58       	subi	r28, 0x88	; 136
 174:	d0 40       	sbci	r29, 0x00	; 0
 176:	8e 01       	movw	r16, r28
 178:	0f 5f       	subi	r16, 0xFF	; 255
 17a:	1f 4f       	sbci	r17, 0xFF	; 255
 17c:	c8 01       	movw	r24, r16
 17e:	0a d2       	rcall	.+1044   	; 0x594 <vsprintf>
	va_end(arg_ptr);
	
	len = strlen(sText);
 180:	f8 01       	movw	r30, r16
 182:	01 90       	ld	r0, Z+
 184:	00 20       	and	r0, r0
 186:	e9 f7       	brne	.-6      	; 0x182 <myPrintf+0x50>
 188:	31 97       	sbiw	r30, 0x01	; 1
 18a:	8e 2f       	mov	r24, r30
 18c:	80 1b       	sub	r24, r16
 18e:	08 2f       	mov	r16, r24
	for(i=0; i<len; i++) {
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	09 c0       	rjmp	.+18     	; 0x1a6 <myPrintf+0x74>
		tx_char(sText[i]);
 194:	e1 e0       	ldi	r30, 0x01	; 1
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	ec 0f       	add	r30, r28
 19a:	fd 1f       	adc	r31, r29
 19c:	e1 0f       	add	r30, r17
 19e:	f1 1d       	adc	r31, r1
 1a0:	80 81       	ld	r24, Z
 1a2:	c0 df       	rcall	.-128    	; 0x124 <tx_char>
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
	va_end(arg_ptr);
	
	len = strlen(sText);
	for(i=0; i<len; i++) {
 1a4:	1f 5f       	subi	r17, 0xFF	; 255
 1a6:	10 17       	cp	r17, r16
 1a8:	a8 f3       	brcs	.-22     	; 0x194 <myPrintf+0x62>
		tx_char(sText[i]);
	}
}
 1aa:	c0 58       	subi	r28, 0x80	; 128
 1ac:	df 4f       	sbci	r29, 0xFF	; 255
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	08 95       	ret

000001c2 <play>:

void play(unsigned int y) {
 1c2:	ac 01       	movw	r20, r24
	unsigned int x;
	DDRB |= 0x80;
 1c4:	84 b1       	in	r24, 0x04	; 4
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	84 b9       	out	0x04, r24	; 4
	TCCR1A |= 0x04;
 1ca:	e0 e8       	ldi	r30, 0x80	; 128
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	84 60       	ori	r24, 0x04	; 4
 1d2:	80 83       	st	Z, r24
	TCCR1B |= 0x1A;
 1d4:	e1 e8       	ldi	r30, 0x81	; 129
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	8a 61       	ori	r24, 0x1A	; 26
 1dc:	80 83       	st	Z, r24
	x = FREQ(note_freq[y % 7]);
 1de:	9a 01       	movw	r18, r20
 1e0:	a3 e9       	ldi	r26, 0x93	; 147
 1e2:	b4 e2       	ldi	r27, 0x24	; 36
 1e4:	a6 d1       	rcall	.+844    	; 0x532 <__umulhisi3>
 1e6:	28 1b       	sub	r18, r24
 1e8:	39 0b       	sbc	r19, r25
 1ea:	36 95       	lsr	r19
 1ec:	27 95       	ror	r18
 1ee:	82 0f       	add	r24, r18
 1f0:	93 1f       	adc	r25, r19
 1f2:	96 95       	lsr	r25
 1f4:	87 95       	ror	r24
 1f6:	96 95       	lsr	r25
 1f8:	87 95       	ror	r24
 1fa:	9c 01       	movw	r18, r24
 1fc:	22 0f       	add	r18, r18
 1fe:	33 1f       	adc	r19, r19
 200:	22 0f       	add	r18, r18
 202:	33 1f       	adc	r19, r19
 204:	22 0f       	add	r18, r18
 206:	33 1f       	adc	r19, r19
 208:	b9 01       	movw	r22, r18
 20a:	68 1b       	sub	r22, r24
 20c:	79 0b       	sbc	r23, r25
 20e:	9a 01       	movw	r18, r20
 210:	26 1b       	sub	r18, r22
 212:	37 0b       	sbc	r19, r23
 214:	c9 01       	movw	r24, r18
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	fc 01       	movw	r30, r24
 21c:	e0 50       	subi	r30, 0x00	; 0
 21e:	fe 4f       	sbci	r31, 0xFE	; 254
 220:	20 81       	ld	r18, Z
 222:	31 81       	ldd	r19, Z+1	; 0x01
 224:	2f 5f       	subi	r18, 0xFF	; 255
 226:	3f 4f       	sbci	r19, 0xFF	; 255
 228:	22 95       	swap	r18
 22a:	32 95       	swap	r19
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	32 27       	eor	r19, r18
 230:	20 7f       	andi	r18, 0xF0	; 240
 232:	32 27       	eor	r19, r18
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	50 e0       	ldi	r21, 0x00	; 0
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	74 e2       	ldi	r23, 0x24	; 36
 23c:	84 ef       	ldi	r24, 0xF4	; 244
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	5c d1       	rcall	.+696    	; 0x4fa <__divmodsi4>
	ICR1 = x;
 242:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 246:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
	on_off = 0;
 24a:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <on_off+0x1>
 24e:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <on_off>
	PORTC &= ~0x01;
 252:	88 b1       	in	r24, 0x08	; 8
 254:	8e 7f       	andi	r24, 0xFE	; 254
 256:	88 b9       	out	0x08, r24	; 8
 258:	08 95       	ret

0000025a <stop>:
}

void stop(void) {
	TCCR1A = 0x00;
 25a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	TCCR1B = 0x00;
 25e:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
	TCNT1 = 0;
 262:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 266:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	ICR1 = 0;
 26a:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 26e:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
	DDRB = ~0x80;
 272:	8f e7       	ldi	r24, 0x7F	; 127
 274:	84 b9       	out	0x04, r24	; 4
	on_off = 0;
 276:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <on_off+0x1>
 27a:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <on_off>
	PORTC |= 0x01;
 27e:	88 b1       	in	r24, 0x08	; 8
 280:	81 60       	ori	r24, 0x01	; 1
 282:	88 b9       	out	0x08, r24	; 8
 284:	08 95       	ret

00000286 <__vector_1>:
}

ISR(INT0_vect) {
 286:	1f 92       	push	r1
 288:	0f 92       	push	r0
 28a:	0f b6       	in	r0, 0x3f	; 63
 28c:	0f 92       	push	r0
 28e:	11 24       	eor	r1, r1
 290:	0b b6       	in	r0, 0x3b	; 59
 292:	0f 92       	push	r0
 294:	2f 93       	push	r18
 296:	3f 93       	push	r19
 298:	4f 93       	push	r20
 29a:	5f 93       	push	r21
 29c:	6f 93       	push	r22
 29e:	7f 93       	push	r23
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
 2a4:	af 93       	push	r26
 2a6:	bf 93       	push	r27
 2a8:	ef 93       	push	r30
 2aa:	ff 93       	push	r31
	cli();
 2ac:	f8 94       	cli
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2ae:	84 ef       	ldi	r24, 0xF4	; 244
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	05 c0       	rjmp	.+10     	; 0x2be <__vector_1+0x38>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 2b4:	e0 e9       	ldi	r30, 0x90	; 144
 2b6:	f1 e0       	ldi	r31, 0x01	; 1
 2b8:	31 97       	sbiw	r30, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <__vector_1+0x32>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2bc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2be:	00 97       	sbiw	r24, 0x00	; 0
 2c0:	c9 f7       	brne	.-14     	; 0x2b4 <__vector_1+0x2e>
	_delay_ms(50);
	
	if(!ICR1) return;
 2c2:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 2c6:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 2ca:	89 2b       	or	r24, r25
 2cc:	11 f1       	breq	.+68     	; 0x312 <__vector_1+0x8c>
	
	if(++note > 6) {
 2ce:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
 2d2:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
 2d6:	01 96       	adiw	r24, 0x01	; 1
 2d8:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
 2dc:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
 2e0:	07 97       	sbiw	r24, 0x07	; 7
 2e2:	34 f0       	brlt	.+12     	; 0x2f0 <__vector_1+0x6a>
		note = 7;
 2e4:	87 e0       	ldi	r24, 0x07	; 7
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
 2ec:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
	}
	EIFR |= 0x01;
 2f0:	8c b3       	in	r24, 0x1c	; 28
 2f2:	81 60       	ori	r24, 0x01	; 1
 2f4:	8c bb       	out	0x1c, r24	; 28
	
	on_off = ON;
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <on_off+0x1>
 2fe:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on_off>
	
	sei();
 302:	78 94       	sei
	myPrintf("01 clicked\n");
 304:	8e e0       	ldi	r24, 0x0E	; 14
 306:	92 e0       	ldi	r25, 0x02	; 2
 308:	9f 93       	push	r25
 30a:	8f 93       	push	r24
 30c:	12 df       	rcall	.-476    	; 0x132 <myPrintf>
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
}
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	bf 91       	pop	r27
 318:	af 91       	pop	r26
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	7f 91       	pop	r23
 320:	6f 91       	pop	r22
 322:	5f 91       	pop	r21
 324:	4f 91       	pop	r20
 326:	3f 91       	pop	r19
 328:	2f 91       	pop	r18
 32a:	0f 90       	pop	r0
 32c:	0b be       	out	0x3b, r0	; 59
 32e:	0f 90       	pop	r0
 330:	0f be       	out	0x3f, r0	; 63
 332:	0f 90       	pop	r0
 334:	1f 90       	pop	r1
 336:	18 95       	reti

00000338 <__vector_2>:

ISR(INT1_vect) {
 338:	1f 92       	push	r1
 33a:	0f 92       	push	r0
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	0f 92       	push	r0
 340:	11 24       	eor	r1, r1
 342:	0b b6       	in	r0, 0x3b	; 59
 344:	0f 92       	push	r0
 346:	2f 93       	push	r18
 348:	3f 93       	push	r19
 34a:	4f 93       	push	r20
 34c:	5f 93       	push	r21
 34e:	6f 93       	push	r22
 350:	7f 93       	push	r23
 352:	8f 93       	push	r24
 354:	9f 93       	push	r25
 356:	af 93       	push	r26
 358:	bf 93       	push	r27
 35a:	ef 93       	push	r30
 35c:	ff 93       	push	r31
	cli();
 35e:	f8 94       	cli
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 360:	84 ef       	ldi	r24, 0xF4	; 244
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	05 c0       	rjmp	.+10     	; 0x370 <__vector_2+0x38>
 366:	e0 e9       	ldi	r30, 0x90	; 144
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	31 97       	sbiw	r30, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <__vector_2+0x32>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 36e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 370:	00 97       	sbiw	r24, 0x00	; 0
 372:	c9 f7       	brne	.-14     	; 0x366 <__vector_2+0x2e>
	_delay_ms(50);
	
	if(!ICR1) return;
 374:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 378:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 37c:	89 2b       	or	r24, r25
 37e:	01 f1       	breq	.+64     	; 0x3c0 <__vector_2+0x88>
	
	if(--note < 0) {
 380:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
 384:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
 388:	01 97       	sbiw	r24, 0x01	; 1
 38a:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
 38e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
 392:	99 23       	and	r25, r25
 394:	24 f4       	brge	.+8      	; 0x39e <__vector_2+0x66>
		note = 0;
 396:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <__data_end+0x1>
 39a:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__data_end>
	}
	EIFR |= 0x02;
 39e:	8c b3       	in	r24, 0x1c	; 28
 3a0:	82 60       	ori	r24, 0x02	; 2
 3a2:	8c bb       	out	0x1c, r24	; 28
	
	on_off = ON;
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <on_off+0x1>
 3ac:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on_off>
	
	sei();
 3b0:	78 94       	sei
	myPrintf("02 clicked\n");
 3b2:	8a e1       	ldi	r24, 0x1A	; 26
 3b4:	92 e0       	ldi	r25, 0x02	; 2
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	bb de       	rcall	.-650    	; 0x132 <myPrintf>
 3bc:	0f 90       	pop	r0
 3be:	0f 90       	pop	r0
}
 3c0:	ff 91       	pop	r31
 3c2:	ef 91       	pop	r30
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0b be       	out	0x3b, r0	; 59
 3dc:	0f 90       	pop	r0
 3de:	0f be       	out	0x3f, r0	; 63
 3e0:	0f 90       	pop	r0
 3e2:	1f 90       	pop	r1
 3e4:	18 95       	reti

000003e6 <__vector_5>:

ISR(INT4_vect) {
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	0b b6       	in	r0, 0x3b	; 59
 3f2:	0f 92       	push	r0
 3f4:	8f 93       	push	r24
 3f6:	9f 93       	push	r25
 3f8:	ef 93       	push	r30
 3fa:	ff 93       	push	r31
	cli();
 3fc:	f8 94       	cli
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3fe:	84 ef       	ldi	r24, 0xF4	; 244
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	05 c0       	rjmp	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	e0 e9       	ldi	r30, 0x90	; 144
 406:	f1 e0       	ldi	r31, 0x01	; 1
 408:	31 97       	sbiw	r30, 0x01	; 1
 40a:	f1 f7       	brne	.-4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 40c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 40e:	00 97       	sbiw	r24, 0x00	; 0
 410:	c9 f7       	brne	.-14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
	_delay_ms(50);
	if(ICR1) {
 412:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 416:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 41a:	89 2b       	or	r24, r25
 41c:	39 f0       	breq	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
		on_off = OFF;
 41e:	82 e0       	ldi	r24, 0x02	; 2
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <on_off+0x1>
 426:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on_off>
 42a:	06 c0       	rjmp	.+12     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
	}
	else {
		on_off = ON;
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <on_off+0x1>
 434:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <on_off>
	}
	EIFR |= 0x10;
 438:	8c b3       	in	r24, 0x1c	; 28
 43a:	80 61       	ori	r24, 0x10	; 16
 43c:	8c bb       	out	0x1c, r24	; 28
	sei();
 43e:	78 94       	sei
}
 440:	ff 91       	pop	r31
 442:	ef 91       	pop	r30
 444:	9f 91       	pop	r25
 446:	8f 91       	pop	r24
 448:	0f 90       	pop	r0
 44a:	0b be       	out	0x3b, r0	; 59
 44c:	0f 90       	pop	r0
 44e:	0f be       	out	0x3f, r0	; 63
 450:	0f 90       	pop	r0
 452:	1f 90       	pop	r1
 454:	18 95       	reti

00000456 <main>:

int main(void)
{
    /* Replace with your application code */
	
	cli();
 456:	f8 94       	cli
	DDRD = 0x00;
 458:	1a b8       	out	0x0a, r1	; 10
	DDRC = 0x01;
 45a:	91 e0       	ldi	r25, 0x01	; 1
 45c:	97 b9       	out	0x07, r25	; 7
	DDRB = 0x00;
 45e:	14 b8       	out	0x04, r1	; 4
	PORTB = 0x00;
 460:	15 b8       	out	0x05, r1	; 5
	
	EICRA = 0x0F;
 462:	8f e0       	ldi	r24, 0x0F	; 15
 464:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = 0x03;
 468:	83 e0       	ldi	r24, 0x03	; 3
 46a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	
	UBRR1H = (unsigned char)(BAUD_19200 >> 8);
 46e:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
	UBRR1L = (unsigned char)(BAUD_19200);
 472:	83 e3       	ldi	r24, 0x33	; 51
 474:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
	
	UCSR1A = 0x00;
 478:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
	
	UCSR1B = (1 << TXEN1) | (1 << RXEN1);
 47c:	e9 ec       	ldi	r30, 0xC9	; 201
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	88 e1       	ldi	r24, 0x18	; 24
 482:	80 83       	st	Z, r24
	UCSR1B |= (1 << RXCIE1);
 484:	80 81       	ld	r24, Z
 486:	80 68       	ori	r24, 0x80	; 128
 488:	80 83       	st	Z, r24
	
	UCSR1C = (1 << UCSZ11) | (1 << UCSZ10);
 48a:	ea ec       	ldi	r30, 0xCA	; 202
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	86 e0       	ldi	r24, 0x06	; 6
 490:	80 83       	st	Z, r24
	UCSR1C |= (1 << USBS1);
 492:	80 81       	ld	r24, Z
 494:	88 60       	ori	r24, 0x08	; 8
 496:	80 83       	st	Z, r24
	UCSR1C |= (1 << UPM11);
 498:	80 81       	ld	r24, Z
 49a:	80 62       	ori	r24, 0x20	; 32
 49c:	80 83       	st	Z, r24
	
	EIMSK |= 0x13;
 49e:	8d b3       	in	r24, 0x1d	; 29
 4a0:	83 61       	ori	r24, 0x13	; 19
 4a2:	8d bb       	out	0x1d, r24	; 29
	
	EIFR |= 0x13;
 4a4:	8c b3       	in	r24, 0x1c	; 28
 4a6:	83 61       	ori	r24, 0x13	; 19
 4a8:	8c bb       	out	0x1c, r24	; 28
	PORTC = 0x01;
 4aa:	98 b9       	out	0x08, r25	; 8
	
	sei();
 4ac:	78 94       	sei
	stop();
 4ae:	d5 de       	rcall	.-598    	; 0x25a <stop>
	
    while (1) 
    {
		if(on_off == ON) {
 4b0:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <on_off>
 4b4:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <on_off+0x1>
 4b8:	81 30       	cpi	r24, 0x01	; 1
 4ba:	91 05       	cpc	r25, r1
 4bc:	81 f4       	brne	.+32     	; 0x4de <main+0x88>
			play(note);
 4be:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
 4c2:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
 4c6:	7d de       	rcall	.-774    	; 0x1c2 <play>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4c8:	88 ee       	ldi	r24, 0xE8	; 232
 4ca:	93 e0       	ldi	r25, 0x03	; 3
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <main+0x82>
 4ce:	e0 e9       	ldi	r30, 0x90	; 144
 4d0:	f1 e0       	ldi	r31, 0x01	; 1
 4d2:	31 97       	sbiw	r30, 0x01	; 1
 4d4:	f1 f7       	brne	.-4      	; 0x4d2 <main+0x7c>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4d6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4d8:	00 97       	sbiw	r24, 0x00	; 0
 4da:	c9 f7       	brne	.-14     	; 0x4ce <main+0x78>
 4dc:	e9 cf       	rjmp	.-46     	; 0x4b0 <main+0x5a>
			_delay_ms(100);
		}
		else if(on_off == OFF) {
 4de:	02 97       	sbiw	r24, 0x02	; 2
			stop();
 4e0:	39 f7       	brne	.-50     	; 0x4b0 <main+0x5a>
 4e2:	bb de       	rcall	.-650    	; 0x25a <stop>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4e4:	88 ee       	ldi	r24, 0xE8	; 232
 4e6:	93 e0       	ldi	r25, 0x03	; 3
 4e8:	05 c0       	rjmp	.+10     	; 0x4f4 <main+0x9e>
 4ea:	e0 e9       	ldi	r30, 0x90	; 144
 4ec:	f1 e0       	ldi	r31, 0x01	; 1
 4ee:	31 97       	sbiw	r30, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <main+0x98>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4f2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4f4:	00 97       	sbiw	r24, 0x00	; 0
 4f6:	c9 f7       	brne	.-14     	; 0x4ea <main+0x94>
 4f8:	db cf       	rjmp	.-74     	; 0x4b0 <main+0x5a>

000004fa <__divmodsi4>:
 4fa:	05 2e       	mov	r0, r21
 4fc:	97 fb       	bst	r25, 7
 4fe:	16 f4       	brtc	.+4      	; 0x504 <__divmodsi4+0xa>
 500:	00 94       	com	r0
 502:	0f d0       	rcall	.+30     	; 0x522 <__negsi2>
 504:	57 fd       	sbrc	r21, 7
 506:	05 d0       	rcall	.+10     	; 0x512 <__divmodsi4_neg2>
 508:	23 d0       	rcall	.+70     	; 0x550 <__udivmodsi4>
 50a:	07 fc       	sbrc	r0, 7
 50c:	02 d0       	rcall	.+4      	; 0x512 <__divmodsi4_neg2>
 50e:	46 f4       	brtc	.+16     	; 0x520 <__divmodsi4_exit>
 510:	08 c0       	rjmp	.+16     	; 0x522 <__negsi2>

00000512 <__divmodsi4_neg2>:
 512:	50 95       	com	r21
 514:	40 95       	com	r20
 516:	30 95       	com	r19
 518:	21 95       	neg	r18
 51a:	3f 4f       	sbci	r19, 0xFF	; 255
 51c:	4f 4f       	sbci	r20, 0xFF	; 255
 51e:	5f 4f       	sbci	r21, 0xFF	; 255

00000520 <__divmodsi4_exit>:
 520:	08 95       	ret

00000522 <__negsi2>:
 522:	90 95       	com	r25
 524:	80 95       	com	r24
 526:	70 95       	com	r23
 528:	61 95       	neg	r22
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	08 95       	ret

00000532 <__umulhisi3>:
 532:	a2 9f       	mul	r26, r18
 534:	b0 01       	movw	r22, r0
 536:	b3 9f       	mul	r27, r19
 538:	c0 01       	movw	r24, r0
 53a:	a3 9f       	mul	r26, r19
 53c:	70 0d       	add	r23, r0
 53e:	81 1d       	adc	r24, r1
 540:	11 24       	eor	r1, r1
 542:	91 1d       	adc	r25, r1
 544:	b2 9f       	mul	r27, r18
 546:	70 0d       	add	r23, r0
 548:	81 1d       	adc	r24, r1
 54a:	11 24       	eor	r1, r1
 54c:	91 1d       	adc	r25, r1
 54e:	08 95       	ret

00000550 <__udivmodsi4>:
 550:	a1 e2       	ldi	r26, 0x21	; 33
 552:	1a 2e       	mov	r1, r26
 554:	aa 1b       	sub	r26, r26
 556:	bb 1b       	sub	r27, r27
 558:	fd 01       	movw	r30, r26
 55a:	0d c0       	rjmp	.+26     	; 0x576 <__udivmodsi4_ep>

0000055c <__udivmodsi4_loop>:
 55c:	aa 1f       	adc	r26, r26
 55e:	bb 1f       	adc	r27, r27
 560:	ee 1f       	adc	r30, r30
 562:	ff 1f       	adc	r31, r31
 564:	a2 17       	cp	r26, r18
 566:	b3 07       	cpc	r27, r19
 568:	e4 07       	cpc	r30, r20
 56a:	f5 07       	cpc	r31, r21
 56c:	20 f0       	brcs	.+8      	; 0x576 <__udivmodsi4_ep>
 56e:	a2 1b       	sub	r26, r18
 570:	b3 0b       	sbc	r27, r19
 572:	e4 0b       	sbc	r30, r20
 574:	f5 0b       	sbc	r31, r21

00000576 <__udivmodsi4_ep>:
 576:	66 1f       	adc	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	99 1f       	adc	r25, r25
 57e:	1a 94       	dec	r1
 580:	69 f7       	brne	.-38     	; 0x55c <__udivmodsi4_loop>
 582:	60 95       	com	r22
 584:	70 95       	com	r23
 586:	80 95       	com	r24
 588:	90 95       	com	r25
 58a:	9b 01       	movw	r18, r22
 58c:	ac 01       	movw	r20, r24
 58e:	bd 01       	movw	r22, r26
 590:	cf 01       	movw	r24, r30
 592:	08 95       	ret

00000594 <vsprintf>:
 594:	0f 93       	push	r16
 596:	1f 93       	push	r17
 598:	cf 93       	push	r28
 59a:	df 93       	push	r29
 59c:	cd b7       	in	r28, 0x3d	; 61
 59e:	de b7       	in	r29, 0x3e	; 62
 5a0:	2e 97       	sbiw	r28, 0x0e	; 14
 5a2:	0f b6       	in	r0, 0x3f	; 63
 5a4:	f8 94       	cli
 5a6:	de bf       	out	0x3e, r29	; 62
 5a8:	0f be       	out	0x3f, r0	; 63
 5aa:	cd bf       	out	0x3d, r28	; 61
 5ac:	8c 01       	movw	r16, r24
 5ae:	86 e0       	ldi	r24, 0x06	; 6
 5b0:	8c 83       	std	Y+4, r24	; 0x04
 5b2:	1a 83       	std	Y+2, r17	; 0x02
 5b4:	09 83       	std	Y+1, r16	; 0x01
 5b6:	8f ef       	ldi	r24, 0xFF	; 255
 5b8:	9f e7       	ldi	r25, 0x7F	; 127
 5ba:	9e 83       	std	Y+6, r25	; 0x06
 5bc:	8d 83       	std	Y+5, r24	; 0x05
 5be:	ce 01       	movw	r24, r28
 5c0:	01 96       	adiw	r24, 0x01	; 1
 5c2:	10 d0       	rcall	.+32     	; 0x5e4 <vfprintf>
 5c4:	ef 81       	ldd	r30, Y+7	; 0x07
 5c6:	f8 85       	ldd	r31, Y+8	; 0x08
 5c8:	e0 0f       	add	r30, r16
 5ca:	f1 1f       	adc	r31, r17
 5cc:	10 82       	st	Z, r1
 5ce:	2e 96       	adiw	r28, 0x0e	; 14
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	f8 94       	cli
 5d4:	de bf       	out	0x3e, r29	; 62
 5d6:	0f be       	out	0x3f, r0	; 63
 5d8:	cd bf       	out	0x3d, r28	; 61
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	1f 91       	pop	r17
 5e0:	0f 91       	pop	r16
 5e2:	08 95       	ret

000005e4 <vfprintf>:
 5e4:	2f 92       	push	r2
 5e6:	3f 92       	push	r3
 5e8:	4f 92       	push	r4
 5ea:	5f 92       	push	r5
 5ec:	6f 92       	push	r6
 5ee:	7f 92       	push	r7
 5f0:	8f 92       	push	r8
 5f2:	9f 92       	push	r9
 5f4:	af 92       	push	r10
 5f6:	bf 92       	push	r11
 5f8:	cf 92       	push	r12
 5fa:	df 92       	push	r13
 5fc:	ef 92       	push	r14
 5fe:	ff 92       	push	r15
 600:	0f 93       	push	r16
 602:	1f 93       	push	r17
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	cd b7       	in	r28, 0x3d	; 61
 60a:	de b7       	in	r29, 0x3e	; 62
 60c:	2b 97       	sbiw	r28, 0x0b	; 11
 60e:	0f b6       	in	r0, 0x3f	; 63
 610:	f8 94       	cli
 612:	de bf       	out	0x3e, r29	; 62
 614:	0f be       	out	0x3f, r0	; 63
 616:	cd bf       	out	0x3d, r28	; 61
 618:	6c 01       	movw	r12, r24
 61a:	7b 01       	movw	r14, r22
 61c:	8a 01       	movw	r16, r20
 61e:	fc 01       	movw	r30, r24
 620:	17 82       	std	Z+7, r1	; 0x07
 622:	16 82       	std	Z+6, r1	; 0x06
 624:	83 81       	ldd	r24, Z+3	; 0x03
 626:	81 ff       	sbrs	r24, 1
 628:	bf c1       	rjmp	.+894    	; 0x9a8 <vfprintf+0x3c4>
 62a:	ce 01       	movw	r24, r28
 62c:	01 96       	adiw	r24, 0x01	; 1
 62e:	3c 01       	movw	r6, r24
 630:	f6 01       	movw	r30, r12
 632:	93 81       	ldd	r25, Z+3	; 0x03
 634:	f7 01       	movw	r30, r14
 636:	93 fd       	sbrc	r25, 3
 638:	85 91       	lpm	r24, Z+
 63a:	93 ff       	sbrs	r25, 3
 63c:	81 91       	ld	r24, Z+
 63e:	7f 01       	movw	r14, r30
 640:	88 23       	and	r24, r24
 642:	09 f4       	brne	.+2      	; 0x646 <vfprintf+0x62>
 644:	ad c1       	rjmp	.+858    	; 0x9a0 <vfprintf+0x3bc>
 646:	85 32       	cpi	r24, 0x25	; 37
 648:	39 f4       	brne	.+14     	; 0x658 <vfprintf+0x74>
 64a:	93 fd       	sbrc	r25, 3
 64c:	85 91       	lpm	r24, Z+
 64e:	93 ff       	sbrs	r25, 3
 650:	81 91       	ld	r24, Z+
 652:	7f 01       	movw	r14, r30
 654:	85 32       	cpi	r24, 0x25	; 37
 656:	21 f4       	brne	.+8      	; 0x660 <vfprintf+0x7c>
 658:	b6 01       	movw	r22, r12
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	d6 d1       	rcall	.+940    	; 0xa0a <fputc>
 65e:	e8 cf       	rjmp	.-48     	; 0x630 <vfprintf+0x4c>
 660:	91 2c       	mov	r9, r1
 662:	21 2c       	mov	r2, r1
 664:	31 2c       	mov	r3, r1
 666:	ff e1       	ldi	r31, 0x1F	; 31
 668:	f3 15       	cp	r31, r3
 66a:	d8 f0       	brcs	.+54     	; 0x6a2 <vfprintf+0xbe>
 66c:	8b 32       	cpi	r24, 0x2B	; 43
 66e:	79 f0       	breq	.+30     	; 0x68e <vfprintf+0xaa>
 670:	38 f4       	brcc	.+14     	; 0x680 <vfprintf+0x9c>
 672:	80 32       	cpi	r24, 0x20	; 32
 674:	79 f0       	breq	.+30     	; 0x694 <vfprintf+0xb0>
 676:	83 32       	cpi	r24, 0x23	; 35
 678:	a1 f4       	brne	.+40     	; 0x6a2 <vfprintf+0xbe>
 67a:	23 2d       	mov	r18, r3
 67c:	20 61       	ori	r18, 0x10	; 16
 67e:	1d c0       	rjmp	.+58     	; 0x6ba <vfprintf+0xd6>
 680:	8d 32       	cpi	r24, 0x2D	; 45
 682:	61 f0       	breq	.+24     	; 0x69c <vfprintf+0xb8>
 684:	80 33       	cpi	r24, 0x30	; 48
 686:	69 f4       	brne	.+26     	; 0x6a2 <vfprintf+0xbe>
 688:	23 2d       	mov	r18, r3
 68a:	21 60       	ori	r18, 0x01	; 1
 68c:	16 c0       	rjmp	.+44     	; 0x6ba <vfprintf+0xd6>
 68e:	83 2d       	mov	r24, r3
 690:	82 60       	ori	r24, 0x02	; 2
 692:	38 2e       	mov	r3, r24
 694:	e3 2d       	mov	r30, r3
 696:	e4 60       	ori	r30, 0x04	; 4
 698:	3e 2e       	mov	r3, r30
 69a:	2a c0       	rjmp	.+84     	; 0x6f0 <vfprintf+0x10c>
 69c:	f3 2d       	mov	r31, r3
 69e:	f8 60       	ori	r31, 0x08	; 8
 6a0:	1d c0       	rjmp	.+58     	; 0x6dc <vfprintf+0xf8>
 6a2:	37 fc       	sbrc	r3, 7
 6a4:	2d c0       	rjmp	.+90     	; 0x700 <vfprintf+0x11c>
 6a6:	20 ed       	ldi	r18, 0xD0	; 208
 6a8:	28 0f       	add	r18, r24
 6aa:	2a 30       	cpi	r18, 0x0A	; 10
 6ac:	40 f0       	brcs	.+16     	; 0x6be <vfprintf+0xda>
 6ae:	8e 32       	cpi	r24, 0x2E	; 46
 6b0:	b9 f4       	brne	.+46     	; 0x6e0 <vfprintf+0xfc>
 6b2:	36 fc       	sbrc	r3, 6
 6b4:	75 c1       	rjmp	.+746    	; 0x9a0 <vfprintf+0x3bc>
 6b6:	23 2d       	mov	r18, r3
 6b8:	20 64       	ori	r18, 0x40	; 64
 6ba:	32 2e       	mov	r3, r18
 6bc:	19 c0       	rjmp	.+50     	; 0x6f0 <vfprintf+0x10c>
 6be:	36 fe       	sbrs	r3, 6
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <vfprintf+0xea>
 6c2:	8a e0       	ldi	r24, 0x0A	; 10
 6c4:	98 9e       	mul	r9, r24
 6c6:	20 0d       	add	r18, r0
 6c8:	11 24       	eor	r1, r1
 6ca:	92 2e       	mov	r9, r18
 6cc:	11 c0       	rjmp	.+34     	; 0x6f0 <vfprintf+0x10c>
 6ce:	ea e0       	ldi	r30, 0x0A	; 10
 6d0:	2e 9e       	mul	r2, r30
 6d2:	20 0d       	add	r18, r0
 6d4:	11 24       	eor	r1, r1
 6d6:	22 2e       	mov	r2, r18
 6d8:	f3 2d       	mov	r31, r3
 6da:	f0 62       	ori	r31, 0x20	; 32
 6dc:	3f 2e       	mov	r3, r31
 6de:	08 c0       	rjmp	.+16     	; 0x6f0 <vfprintf+0x10c>
 6e0:	8c 36       	cpi	r24, 0x6C	; 108
 6e2:	21 f4       	brne	.+8      	; 0x6ec <vfprintf+0x108>
 6e4:	83 2d       	mov	r24, r3
 6e6:	80 68       	ori	r24, 0x80	; 128
 6e8:	38 2e       	mov	r3, r24
 6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <vfprintf+0x10c>
 6ec:	88 36       	cpi	r24, 0x68	; 104
 6ee:	41 f4       	brne	.+16     	; 0x700 <vfprintf+0x11c>
 6f0:	f7 01       	movw	r30, r14
 6f2:	93 fd       	sbrc	r25, 3
 6f4:	85 91       	lpm	r24, Z+
 6f6:	93 ff       	sbrs	r25, 3
 6f8:	81 91       	ld	r24, Z+
 6fa:	7f 01       	movw	r14, r30
 6fc:	81 11       	cpse	r24, r1
 6fe:	b3 cf       	rjmp	.-154    	; 0x666 <vfprintf+0x82>
 700:	98 2f       	mov	r25, r24
 702:	9f 7d       	andi	r25, 0xDF	; 223
 704:	95 54       	subi	r25, 0x45	; 69
 706:	93 30       	cpi	r25, 0x03	; 3
 708:	28 f4       	brcc	.+10     	; 0x714 <vfprintf+0x130>
 70a:	0c 5f       	subi	r16, 0xFC	; 252
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	9f e3       	ldi	r25, 0x3F	; 63
 710:	99 83       	std	Y+1, r25	; 0x01
 712:	0d c0       	rjmp	.+26     	; 0x72e <vfprintf+0x14a>
 714:	83 36       	cpi	r24, 0x63	; 99
 716:	31 f0       	breq	.+12     	; 0x724 <vfprintf+0x140>
 718:	83 37       	cpi	r24, 0x73	; 115
 71a:	71 f0       	breq	.+28     	; 0x738 <vfprintf+0x154>
 71c:	83 35       	cpi	r24, 0x53	; 83
 71e:	09 f0       	breq	.+2      	; 0x722 <vfprintf+0x13e>
 720:	55 c0       	rjmp	.+170    	; 0x7cc <vfprintf+0x1e8>
 722:	20 c0       	rjmp	.+64     	; 0x764 <vfprintf+0x180>
 724:	f8 01       	movw	r30, r16
 726:	80 81       	ld	r24, Z
 728:	89 83       	std	Y+1, r24	; 0x01
 72a:	0e 5f       	subi	r16, 0xFE	; 254
 72c:	1f 4f       	sbci	r17, 0xFF	; 255
 72e:	88 24       	eor	r8, r8
 730:	83 94       	inc	r8
 732:	91 2c       	mov	r9, r1
 734:	53 01       	movw	r10, r6
 736:	12 c0       	rjmp	.+36     	; 0x75c <vfprintf+0x178>
 738:	28 01       	movw	r4, r16
 73a:	f2 e0       	ldi	r31, 0x02	; 2
 73c:	4f 0e       	add	r4, r31
 73e:	51 1c       	adc	r5, r1
 740:	f8 01       	movw	r30, r16
 742:	a0 80       	ld	r10, Z
 744:	b1 80       	ldd	r11, Z+1	; 0x01
 746:	36 fe       	sbrs	r3, 6
 748:	03 c0       	rjmp	.+6      	; 0x750 <vfprintf+0x16c>
 74a:	69 2d       	mov	r22, r9
 74c:	70 e0       	ldi	r23, 0x00	; 0
 74e:	02 c0       	rjmp	.+4      	; 0x754 <vfprintf+0x170>
 750:	6f ef       	ldi	r22, 0xFF	; 255
 752:	7f ef       	ldi	r23, 0xFF	; 255
 754:	c5 01       	movw	r24, r10
 756:	4e d1       	rcall	.+668    	; 0x9f4 <strnlen>
 758:	4c 01       	movw	r8, r24
 75a:	82 01       	movw	r16, r4
 75c:	f3 2d       	mov	r31, r3
 75e:	ff 77       	andi	r31, 0x7F	; 127
 760:	3f 2e       	mov	r3, r31
 762:	15 c0       	rjmp	.+42     	; 0x78e <vfprintf+0x1aa>
 764:	28 01       	movw	r4, r16
 766:	22 e0       	ldi	r18, 0x02	; 2
 768:	42 0e       	add	r4, r18
 76a:	51 1c       	adc	r5, r1
 76c:	f8 01       	movw	r30, r16
 76e:	a0 80       	ld	r10, Z
 770:	b1 80       	ldd	r11, Z+1	; 0x01
 772:	36 fe       	sbrs	r3, 6
 774:	03 c0       	rjmp	.+6      	; 0x77c <vfprintf+0x198>
 776:	69 2d       	mov	r22, r9
 778:	70 e0       	ldi	r23, 0x00	; 0
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0x19c>
 77c:	6f ef       	ldi	r22, 0xFF	; 255
 77e:	7f ef       	ldi	r23, 0xFF	; 255
 780:	c5 01       	movw	r24, r10
 782:	2d d1       	rcall	.+602    	; 0x9de <strnlen_P>
 784:	4c 01       	movw	r8, r24
 786:	f3 2d       	mov	r31, r3
 788:	f0 68       	ori	r31, 0x80	; 128
 78a:	3f 2e       	mov	r3, r31
 78c:	82 01       	movw	r16, r4
 78e:	33 fc       	sbrc	r3, 3
 790:	19 c0       	rjmp	.+50     	; 0x7c4 <vfprintf+0x1e0>
 792:	82 2d       	mov	r24, r2
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	88 16       	cp	r8, r24
 798:	99 06       	cpc	r9, r25
 79a:	a0 f4       	brcc	.+40     	; 0x7c4 <vfprintf+0x1e0>
 79c:	b6 01       	movw	r22, r12
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	33 d1       	rcall	.+614    	; 0xa0a <fputc>
 7a4:	2a 94       	dec	r2
 7a6:	f5 cf       	rjmp	.-22     	; 0x792 <vfprintf+0x1ae>
 7a8:	f5 01       	movw	r30, r10
 7aa:	37 fc       	sbrc	r3, 7
 7ac:	85 91       	lpm	r24, Z+
 7ae:	37 fe       	sbrs	r3, 7
 7b0:	81 91       	ld	r24, Z+
 7b2:	5f 01       	movw	r10, r30
 7b4:	b6 01       	movw	r22, r12
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	28 d1       	rcall	.+592    	; 0xa0a <fputc>
 7ba:	21 10       	cpse	r2, r1
 7bc:	2a 94       	dec	r2
 7be:	21 e0       	ldi	r18, 0x01	; 1
 7c0:	82 1a       	sub	r8, r18
 7c2:	91 08       	sbc	r9, r1
 7c4:	81 14       	cp	r8, r1
 7c6:	91 04       	cpc	r9, r1
 7c8:	79 f7       	brne	.-34     	; 0x7a8 <vfprintf+0x1c4>
 7ca:	e1 c0       	rjmp	.+450    	; 0x98e <vfprintf+0x3aa>
 7cc:	84 36       	cpi	r24, 0x64	; 100
 7ce:	11 f0       	breq	.+4      	; 0x7d4 <vfprintf+0x1f0>
 7d0:	89 36       	cpi	r24, 0x69	; 105
 7d2:	39 f5       	brne	.+78     	; 0x822 <vfprintf+0x23e>
 7d4:	f8 01       	movw	r30, r16
 7d6:	37 fe       	sbrs	r3, 7
 7d8:	07 c0       	rjmp	.+14     	; 0x7e8 <vfprintf+0x204>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	82 81       	ldd	r24, Z+2	; 0x02
 7e0:	93 81       	ldd	r25, Z+3	; 0x03
 7e2:	0c 5f       	subi	r16, 0xFC	; 252
 7e4:	1f 4f       	sbci	r17, 0xFF	; 255
 7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <vfprintf+0x214>
 7e8:	60 81       	ld	r22, Z
 7ea:	71 81       	ldd	r23, Z+1	; 0x01
 7ec:	07 2e       	mov	r0, r23
 7ee:	00 0c       	add	r0, r0
 7f0:	88 0b       	sbc	r24, r24
 7f2:	99 0b       	sbc	r25, r25
 7f4:	0e 5f       	subi	r16, 0xFE	; 254
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	f3 2d       	mov	r31, r3
 7fa:	ff 76       	andi	r31, 0x6F	; 111
 7fc:	3f 2e       	mov	r3, r31
 7fe:	97 ff       	sbrs	r25, 7
 800:	09 c0       	rjmp	.+18     	; 0x814 <vfprintf+0x230>
 802:	90 95       	com	r25
 804:	80 95       	com	r24
 806:	70 95       	com	r23
 808:	61 95       	neg	r22
 80a:	7f 4f       	sbci	r23, 0xFF	; 255
 80c:	8f 4f       	sbci	r24, 0xFF	; 255
 80e:	9f 4f       	sbci	r25, 0xFF	; 255
 810:	f0 68       	ori	r31, 0x80	; 128
 812:	3f 2e       	mov	r3, r31
 814:	2a e0       	ldi	r18, 0x0A	; 10
 816:	30 e0       	ldi	r19, 0x00	; 0
 818:	a3 01       	movw	r20, r6
 81a:	33 d1       	rcall	.+614    	; 0xa82 <__ultoa_invert>
 81c:	88 2e       	mov	r8, r24
 81e:	86 18       	sub	r8, r6
 820:	44 c0       	rjmp	.+136    	; 0x8aa <vfprintf+0x2c6>
 822:	85 37       	cpi	r24, 0x75	; 117
 824:	31 f4       	brne	.+12     	; 0x832 <vfprintf+0x24e>
 826:	23 2d       	mov	r18, r3
 828:	2f 7e       	andi	r18, 0xEF	; 239
 82a:	b2 2e       	mov	r11, r18
 82c:	2a e0       	ldi	r18, 0x0A	; 10
 82e:	30 e0       	ldi	r19, 0x00	; 0
 830:	25 c0       	rjmp	.+74     	; 0x87c <vfprintf+0x298>
 832:	93 2d       	mov	r25, r3
 834:	99 7f       	andi	r25, 0xF9	; 249
 836:	b9 2e       	mov	r11, r25
 838:	8f 36       	cpi	r24, 0x6F	; 111
 83a:	c1 f0       	breq	.+48     	; 0x86c <vfprintf+0x288>
 83c:	18 f4       	brcc	.+6      	; 0x844 <vfprintf+0x260>
 83e:	88 35       	cpi	r24, 0x58	; 88
 840:	79 f0       	breq	.+30     	; 0x860 <vfprintf+0x27c>
 842:	ae c0       	rjmp	.+348    	; 0x9a0 <vfprintf+0x3bc>
 844:	80 37       	cpi	r24, 0x70	; 112
 846:	19 f0       	breq	.+6      	; 0x84e <vfprintf+0x26a>
 848:	88 37       	cpi	r24, 0x78	; 120
 84a:	21 f0       	breq	.+8      	; 0x854 <vfprintf+0x270>
 84c:	a9 c0       	rjmp	.+338    	; 0x9a0 <vfprintf+0x3bc>
 84e:	e9 2f       	mov	r30, r25
 850:	e0 61       	ori	r30, 0x10	; 16
 852:	be 2e       	mov	r11, r30
 854:	b4 fe       	sbrs	r11, 4
 856:	0d c0       	rjmp	.+26     	; 0x872 <vfprintf+0x28e>
 858:	fb 2d       	mov	r31, r11
 85a:	f4 60       	ori	r31, 0x04	; 4
 85c:	bf 2e       	mov	r11, r31
 85e:	09 c0       	rjmp	.+18     	; 0x872 <vfprintf+0x28e>
 860:	34 fe       	sbrs	r3, 4
 862:	0a c0       	rjmp	.+20     	; 0x878 <vfprintf+0x294>
 864:	29 2f       	mov	r18, r25
 866:	26 60       	ori	r18, 0x06	; 6
 868:	b2 2e       	mov	r11, r18
 86a:	06 c0       	rjmp	.+12     	; 0x878 <vfprintf+0x294>
 86c:	28 e0       	ldi	r18, 0x08	; 8
 86e:	30 e0       	ldi	r19, 0x00	; 0
 870:	05 c0       	rjmp	.+10     	; 0x87c <vfprintf+0x298>
 872:	20 e1       	ldi	r18, 0x10	; 16
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x298>
 878:	20 e1       	ldi	r18, 0x10	; 16
 87a:	32 e0       	ldi	r19, 0x02	; 2
 87c:	f8 01       	movw	r30, r16
 87e:	b7 fe       	sbrs	r11, 7
 880:	07 c0       	rjmp	.+14     	; 0x890 <vfprintf+0x2ac>
 882:	60 81       	ld	r22, Z
 884:	71 81       	ldd	r23, Z+1	; 0x01
 886:	82 81       	ldd	r24, Z+2	; 0x02
 888:	93 81       	ldd	r25, Z+3	; 0x03
 88a:	0c 5f       	subi	r16, 0xFC	; 252
 88c:	1f 4f       	sbci	r17, 0xFF	; 255
 88e:	06 c0       	rjmp	.+12     	; 0x89c <vfprintf+0x2b8>
 890:	60 81       	ld	r22, Z
 892:	71 81       	ldd	r23, Z+1	; 0x01
 894:	80 e0       	ldi	r24, 0x00	; 0
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 5f       	subi	r16, 0xFE	; 254
 89a:	1f 4f       	sbci	r17, 0xFF	; 255
 89c:	a3 01       	movw	r20, r6
 89e:	f1 d0       	rcall	.+482    	; 0xa82 <__ultoa_invert>
 8a0:	88 2e       	mov	r8, r24
 8a2:	86 18       	sub	r8, r6
 8a4:	fb 2d       	mov	r31, r11
 8a6:	ff 77       	andi	r31, 0x7F	; 127
 8a8:	3f 2e       	mov	r3, r31
 8aa:	36 fe       	sbrs	r3, 6
 8ac:	0d c0       	rjmp	.+26     	; 0x8c8 <vfprintf+0x2e4>
 8ae:	23 2d       	mov	r18, r3
 8b0:	2e 7f       	andi	r18, 0xFE	; 254
 8b2:	a2 2e       	mov	r10, r18
 8b4:	89 14       	cp	r8, r9
 8b6:	58 f4       	brcc	.+22     	; 0x8ce <vfprintf+0x2ea>
 8b8:	34 fe       	sbrs	r3, 4
 8ba:	0b c0       	rjmp	.+22     	; 0x8d2 <vfprintf+0x2ee>
 8bc:	32 fc       	sbrc	r3, 2
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <vfprintf+0x2ee>
 8c0:	83 2d       	mov	r24, r3
 8c2:	8e 7e       	andi	r24, 0xEE	; 238
 8c4:	a8 2e       	mov	r10, r24
 8c6:	05 c0       	rjmp	.+10     	; 0x8d2 <vfprintf+0x2ee>
 8c8:	b8 2c       	mov	r11, r8
 8ca:	a3 2c       	mov	r10, r3
 8cc:	03 c0       	rjmp	.+6      	; 0x8d4 <vfprintf+0x2f0>
 8ce:	b8 2c       	mov	r11, r8
 8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <vfprintf+0x2f0>
 8d2:	b9 2c       	mov	r11, r9
 8d4:	a4 fe       	sbrs	r10, 4
 8d6:	0f c0       	rjmp	.+30     	; 0x8f6 <vfprintf+0x312>
 8d8:	fe 01       	movw	r30, r28
 8da:	e8 0d       	add	r30, r8
 8dc:	f1 1d       	adc	r31, r1
 8de:	80 81       	ld	r24, Z
 8e0:	80 33       	cpi	r24, 0x30	; 48
 8e2:	21 f4       	brne	.+8      	; 0x8ec <vfprintf+0x308>
 8e4:	9a 2d       	mov	r25, r10
 8e6:	99 7e       	andi	r25, 0xE9	; 233
 8e8:	a9 2e       	mov	r10, r25
 8ea:	09 c0       	rjmp	.+18     	; 0x8fe <vfprintf+0x31a>
 8ec:	a2 fe       	sbrs	r10, 2
 8ee:	06 c0       	rjmp	.+12     	; 0x8fc <vfprintf+0x318>
 8f0:	b3 94       	inc	r11
 8f2:	b3 94       	inc	r11
 8f4:	04 c0       	rjmp	.+8      	; 0x8fe <vfprintf+0x31a>
 8f6:	8a 2d       	mov	r24, r10
 8f8:	86 78       	andi	r24, 0x86	; 134
 8fa:	09 f0       	breq	.+2      	; 0x8fe <vfprintf+0x31a>
 8fc:	b3 94       	inc	r11
 8fe:	a3 fc       	sbrc	r10, 3
 900:	10 c0       	rjmp	.+32     	; 0x922 <vfprintf+0x33e>
 902:	a0 fe       	sbrs	r10, 0
 904:	06 c0       	rjmp	.+12     	; 0x912 <vfprintf+0x32e>
 906:	b2 14       	cp	r11, r2
 908:	80 f4       	brcc	.+32     	; 0x92a <vfprintf+0x346>
 90a:	28 0c       	add	r2, r8
 90c:	92 2c       	mov	r9, r2
 90e:	9b 18       	sub	r9, r11
 910:	0d c0       	rjmp	.+26     	; 0x92c <vfprintf+0x348>
 912:	b2 14       	cp	r11, r2
 914:	58 f4       	brcc	.+22     	; 0x92c <vfprintf+0x348>
 916:	b6 01       	movw	r22, r12
 918:	80 e2       	ldi	r24, 0x20	; 32
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	76 d0       	rcall	.+236    	; 0xa0a <fputc>
 91e:	b3 94       	inc	r11
 920:	f8 cf       	rjmp	.-16     	; 0x912 <vfprintf+0x32e>
 922:	b2 14       	cp	r11, r2
 924:	18 f4       	brcc	.+6      	; 0x92c <vfprintf+0x348>
 926:	2b 18       	sub	r2, r11
 928:	02 c0       	rjmp	.+4      	; 0x92e <vfprintf+0x34a>
 92a:	98 2c       	mov	r9, r8
 92c:	21 2c       	mov	r2, r1
 92e:	a4 fe       	sbrs	r10, 4
 930:	0f c0       	rjmp	.+30     	; 0x950 <vfprintf+0x36c>
 932:	b6 01       	movw	r22, r12
 934:	80 e3       	ldi	r24, 0x30	; 48
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	68 d0       	rcall	.+208    	; 0xa0a <fputc>
 93a:	a2 fe       	sbrs	r10, 2
 93c:	16 c0       	rjmp	.+44     	; 0x96a <vfprintf+0x386>
 93e:	a1 fc       	sbrc	r10, 1
 940:	03 c0       	rjmp	.+6      	; 0x948 <vfprintf+0x364>
 942:	88 e7       	ldi	r24, 0x78	; 120
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	02 c0       	rjmp	.+4      	; 0x94c <vfprintf+0x368>
 948:	88 e5       	ldi	r24, 0x58	; 88
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	b6 01       	movw	r22, r12
 94e:	0c c0       	rjmp	.+24     	; 0x968 <vfprintf+0x384>
 950:	8a 2d       	mov	r24, r10
 952:	86 78       	andi	r24, 0x86	; 134
 954:	51 f0       	breq	.+20     	; 0x96a <vfprintf+0x386>
 956:	a1 fe       	sbrs	r10, 1
 958:	02 c0       	rjmp	.+4      	; 0x95e <vfprintf+0x37a>
 95a:	8b e2       	ldi	r24, 0x2B	; 43
 95c:	01 c0       	rjmp	.+2      	; 0x960 <vfprintf+0x37c>
 95e:	80 e2       	ldi	r24, 0x20	; 32
 960:	a7 fc       	sbrc	r10, 7
 962:	8d e2       	ldi	r24, 0x2D	; 45
 964:	b6 01       	movw	r22, r12
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	50 d0       	rcall	.+160    	; 0xa0a <fputc>
 96a:	89 14       	cp	r8, r9
 96c:	30 f4       	brcc	.+12     	; 0x97a <vfprintf+0x396>
 96e:	b6 01       	movw	r22, r12
 970:	80 e3       	ldi	r24, 0x30	; 48
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	4a d0       	rcall	.+148    	; 0xa0a <fputc>
 976:	9a 94       	dec	r9
 978:	f8 cf       	rjmp	.-16     	; 0x96a <vfprintf+0x386>
 97a:	8a 94       	dec	r8
 97c:	f3 01       	movw	r30, r6
 97e:	e8 0d       	add	r30, r8
 980:	f1 1d       	adc	r31, r1
 982:	80 81       	ld	r24, Z
 984:	b6 01       	movw	r22, r12
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	40 d0       	rcall	.+128    	; 0xa0a <fputc>
 98a:	81 10       	cpse	r8, r1
 98c:	f6 cf       	rjmp	.-20     	; 0x97a <vfprintf+0x396>
 98e:	22 20       	and	r2, r2
 990:	09 f4       	brne	.+2      	; 0x994 <vfprintf+0x3b0>
 992:	4e ce       	rjmp	.-868    	; 0x630 <vfprintf+0x4c>
 994:	b6 01       	movw	r22, r12
 996:	80 e2       	ldi	r24, 0x20	; 32
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	37 d0       	rcall	.+110    	; 0xa0a <fputc>
 99c:	2a 94       	dec	r2
 99e:	f7 cf       	rjmp	.-18     	; 0x98e <vfprintf+0x3aa>
 9a0:	f6 01       	movw	r30, r12
 9a2:	86 81       	ldd	r24, Z+6	; 0x06
 9a4:	97 81       	ldd	r25, Z+7	; 0x07
 9a6:	02 c0       	rjmp	.+4      	; 0x9ac <vfprintf+0x3c8>
 9a8:	8f ef       	ldi	r24, 0xFF	; 255
 9aa:	9f ef       	ldi	r25, 0xFF	; 255
 9ac:	2b 96       	adiw	r28, 0x0b	; 11
 9ae:	0f b6       	in	r0, 0x3f	; 63
 9b0:	f8 94       	cli
 9b2:	de bf       	out	0x3e, r29	; 62
 9b4:	0f be       	out	0x3f, r0	; 63
 9b6:	cd bf       	out	0x3d, r28	; 61
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	1f 91       	pop	r17
 9be:	0f 91       	pop	r16
 9c0:	ff 90       	pop	r15
 9c2:	ef 90       	pop	r14
 9c4:	df 90       	pop	r13
 9c6:	cf 90       	pop	r12
 9c8:	bf 90       	pop	r11
 9ca:	af 90       	pop	r10
 9cc:	9f 90       	pop	r9
 9ce:	8f 90       	pop	r8
 9d0:	7f 90       	pop	r7
 9d2:	6f 90       	pop	r6
 9d4:	5f 90       	pop	r5
 9d6:	4f 90       	pop	r4
 9d8:	3f 90       	pop	r3
 9da:	2f 90       	pop	r2
 9dc:	08 95       	ret

000009de <strnlen_P>:
 9de:	fc 01       	movw	r30, r24
 9e0:	05 90       	lpm	r0, Z+
 9e2:	61 50       	subi	r22, 0x01	; 1
 9e4:	70 40       	sbci	r23, 0x00	; 0
 9e6:	01 10       	cpse	r0, r1
 9e8:	d8 f7       	brcc	.-10     	; 0x9e0 <strnlen_P+0x2>
 9ea:	80 95       	com	r24
 9ec:	90 95       	com	r25
 9ee:	8e 0f       	add	r24, r30
 9f0:	9f 1f       	adc	r25, r31
 9f2:	08 95       	ret

000009f4 <strnlen>:
 9f4:	fc 01       	movw	r30, r24
 9f6:	61 50       	subi	r22, 0x01	; 1
 9f8:	70 40       	sbci	r23, 0x00	; 0
 9fa:	01 90       	ld	r0, Z+
 9fc:	01 10       	cpse	r0, r1
 9fe:	d8 f7       	brcc	.-10     	; 0x9f6 <strnlen+0x2>
 a00:	80 95       	com	r24
 a02:	90 95       	com	r25
 a04:	8e 0f       	add	r24, r30
 a06:	9f 1f       	adc	r25, r31
 a08:	08 95       	ret

00000a0a <fputc>:
 a0a:	0f 93       	push	r16
 a0c:	1f 93       	push	r17
 a0e:	cf 93       	push	r28
 a10:	df 93       	push	r29
 a12:	fb 01       	movw	r30, r22
 a14:	23 81       	ldd	r18, Z+3	; 0x03
 a16:	21 fd       	sbrc	r18, 1
 a18:	03 c0       	rjmp	.+6      	; 0xa20 <fputc+0x16>
 a1a:	8f ef       	ldi	r24, 0xFF	; 255
 a1c:	9f ef       	ldi	r25, 0xFF	; 255
 a1e:	2c c0       	rjmp	.+88     	; 0xa78 <fputc+0x6e>
 a20:	22 ff       	sbrs	r18, 2
 a22:	16 c0       	rjmp	.+44     	; 0xa50 <fputc+0x46>
 a24:	46 81       	ldd	r20, Z+6	; 0x06
 a26:	57 81       	ldd	r21, Z+7	; 0x07
 a28:	24 81       	ldd	r18, Z+4	; 0x04
 a2a:	35 81       	ldd	r19, Z+5	; 0x05
 a2c:	42 17       	cp	r20, r18
 a2e:	53 07       	cpc	r21, r19
 a30:	44 f4       	brge	.+16     	; 0xa42 <fputc+0x38>
 a32:	a0 81       	ld	r26, Z
 a34:	b1 81       	ldd	r27, Z+1	; 0x01
 a36:	9d 01       	movw	r18, r26
 a38:	2f 5f       	subi	r18, 0xFF	; 255
 a3a:	3f 4f       	sbci	r19, 0xFF	; 255
 a3c:	31 83       	std	Z+1, r19	; 0x01
 a3e:	20 83       	st	Z, r18
 a40:	8c 93       	st	X, r24
 a42:	26 81       	ldd	r18, Z+6	; 0x06
 a44:	37 81       	ldd	r19, Z+7	; 0x07
 a46:	2f 5f       	subi	r18, 0xFF	; 255
 a48:	3f 4f       	sbci	r19, 0xFF	; 255
 a4a:	37 83       	std	Z+7, r19	; 0x07
 a4c:	26 83       	std	Z+6, r18	; 0x06
 a4e:	14 c0       	rjmp	.+40     	; 0xa78 <fputc+0x6e>
 a50:	8b 01       	movw	r16, r22
 a52:	ec 01       	movw	r28, r24
 a54:	fb 01       	movw	r30, r22
 a56:	00 84       	ldd	r0, Z+8	; 0x08
 a58:	f1 85       	ldd	r31, Z+9	; 0x09
 a5a:	e0 2d       	mov	r30, r0
 a5c:	19 95       	eicall
 a5e:	89 2b       	or	r24, r25
 a60:	e1 f6       	brne	.-72     	; 0xa1a <fputc+0x10>
 a62:	d8 01       	movw	r26, r16
 a64:	16 96       	adiw	r26, 0x06	; 6
 a66:	8d 91       	ld	r24, X+
 a68:	9c 91       	ld	r25, X
 a6a:	17 97       	sbiw	r26, 0x07	; 7
 a6c:	01 96       	adiw	r24, 0x01	; 1
 a6e:	17 96       	adiw	r26, 0x07	; 7
 a70:	9c 93       	st	X, r25
 a72:	8e 93       	st	-X, r24
 a74:	16 97       	sbiw	r26, 0x06	; 6
 a76:	ce 01       	movw	r24, r28
 a78:	df 91       	pop	r29
 a7a:	cf 91       	pop	r28
 a7c:	1f 91       	pop	r17
 a7e:	0f 91       	pop	r16
 a80:	08 95       	ret

00000a82 <__ultoa_invert>:
 a82:	fa 01       	movw	r30, r20
 a84:	aa 27       	eor	r26, r26
 a86:	28 30       	cpi	r18, 0x08	; 8
 a88:	51 f1       	breq	.+84     	; 0xade <__ultoa_invert+0x5c>
 a8a:	20 31       	cpi	r18, 0x10	; 16
 a8c:	81 f1       	breq	.+96     	; 0xaee <__ultoa_invert+0x6c>
 a8e:	e8 94       	clt
 a90:	6f 93       	push	r22
 a92:	6e 7f       	andi	r22, 0xFE	; 254
 a94:	6e 5f       	subi	r22, 0xFE	; 254
 a96:	7f 4f       	sbci	r23, 0xFF	; 255
 a98:	8f 4f       	sbci	r24, 0xFF	; 255
 a9a:	9f 4f       	sbci	r25, 0xFF	; 255
 a9c:	af 4f       	sbci	r26, 0xFF	; 255
 a9e:	b1 e0       	ldi	r27, 0x01	; 1
 aa0:	3e d0       	rcall	.+124    	; 0xb1e <__ultoa_invert+0x9c>
 aa2:	b4 e0       	ldi	r27, 0x04	; 4
 aa4:	3c d0       	rcall	.+120    	; 0xb1e <__ultoa_invert+0x9c>
 aa6:	67 0f       	add	r22, r23
 aa8:	78 1f       	adc	r23, r24
 aaa:	89 1f       	adc	r24, r25
 aac:	9a 1f       	adc	r25, r26
 aae:	a1 1d       	adc	r26, r1
 ab0:	68 0f       	add	r22, r24
 ab2:	79 1f       	adc	r23, r25
 ab4:	8a 1f       	adc	r24, r26
 ab6:	91 1d       	adc	r25, r1
 ab8:	a1 1d       	adc	r26, r1
 aba:	6a 0f       	add	r22, r26
 abc:	71 1d       	adc	r23, r1
 abe:	81 1d       	adc	r24, r1
 ac0:	91 1d       	adc	r25, r1
 ac2:	a1 1d       	adc	r26, r1
 ac4:	20 d0       	rcall	.+64     	; 0xb06 <__ultoa_invert+0x84>
 ac6:	09 f4       	brne	.+2      	; 0xaca <__ultoa_invert+0x48>
 ac8:	68 94       	set
 aca:	3f 91       	pop	r19
 acc:	2a e0       	ldi	r18, 0x0A	; 10
 ace:	26 9f       	mul	r18, r22
 ad0:	11 24       	eor	r1, r1
 ad2:	30 19       	sub	r19, r0
 ad4:	30 5d       	subi	r19, 0xD0	; 208
 ad6:	31 93       	st	Z+, r19
 ad8:	de f6       	brtc	.-74     	; 0xa90 <__ultoa_invert+0xe>
 ada:	cf 01       	movw	r24, r30
 adc:	08 95       	ret
 ade:	46 2f       	mov	r20, r22
 ae0:	47 70       	andi	r20, 0x07	; 7
 ae2:	40 5d       	subi	r20, 0xD0	; 208
 ae4:	41 93       	st	Z+, r20
 ae6:	b3 e0       	ldi	r27, 0x03	; 3
 ae8:	0f d0       	rcall	.+30     	; 0xb08 <__ultoa_invert+0x86>
 aea:	c9 f7       	brne	.-14     	; 0xade <__ultoa_invert+0x5c>
 aec:	f6 cf       	rjmp	.-20     	; 0xada <__ultoa_invert+0x58>
 aee:	46 2f       	mov	r20, r22
 af0:	4f 70       	andi	r20, 0x0F	; 15
 af2:	40 5d       	subi	r20, 0xD0	; 208
 af4:	4a 33       	cpi	r20, 0x3A	; 58
 af6:	18 f0       	brcs	.+6      	; 0xafe <__ultoa_invert+0x7c>
 af8:	49 5d       	subi	r20, 0xD9	; 217
 afa:	31 fd       	sbrc	r19, 1
 afc:	40 52       	subi	r20, 0x20	; 32
 afe:	41 93       	st	Z+, r20
 b00:	02 d0       	rcall	.+4      	; 0xb06 <__ultoa_invert+0x84>
 b02:	a9 f7       	brne	.-22     	; 0xaee <__ultoa_invert+0x6c>
 b04:	ea cf       	rjmp	.-44     	; 0xada <__ultoa_invert+0x58>
 b06:	b4 e0       	ldi	r27, 0x04	; 4
 b08:	a6 95       	lsr	r26
 b0a:	97 95       	ror	r25
 b0c:	87 95       	ror	r24
 b0e:	77 95       	ror	r23
 b10:	67 95       	ror	r22
 b12:	ba 95       	dec	r27
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0x86>
 b16:	00 97       	sbiw	r24, 0x00	; 0
 b18:	61 05       	cpc	r22, r1
 b1a:	71 05       	cpc	r23, r1
 b1c:	08 95       	ret
 b1e:	9b 01       	movw	r18, r22
 b20:	ac 01       	movw	r20, r24
 b22:	0a 2e       	mov	r0, r26
 b24:	06 94       	lsr	r0
 b26:	57 95       	ror	r21
 b28:	47 95       	ror	r20
 b2a:	37 95       	ror	r19
 b2c:	27 95       	ror	r18
 b2e:	ba 95       	dec	r27
 b30:	c9 f7       	brne	.-14     	; 0xb24 <__ultoa_invert+0xa2>
 b32:	62 0f       	add	r22, r18
 b34:	73 1f       	adc	r23, r19
 b36:	84 1f       	adc	r24, r20
 b38:	95 1f       	adc	r25, r21
 b3a:	a0 1d       	adc	r26, r0
 b3c:	08 95       	ret

00000b3e <_exit>:
 b3e:	f8 94       	cli

00000b40 <__stop_program>:
 b40:	ff cf       	rjmp	.-2      	; 0xb40 <__stop_program>
