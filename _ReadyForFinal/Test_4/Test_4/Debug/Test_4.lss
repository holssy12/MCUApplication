
Test_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800200  00000caa  00000d3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000caa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800240  00800240  00000d7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ddc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001952  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ebd  00000000  00000000  00002836  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b01  00000000  00000000  000036f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  000041f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ef  00000000  00000000  000043f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f07  00000000  00000000  00004be7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00005aee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	aa c1       	rjmp	.+852    	; 0x3e6 <__vector_36>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ea       	ldi	r30, 0xAA	; 170
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 34       	cpi	r26, 0x40	; 64
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e4       	ldi	r26, 0x40	; 64
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a9 38       	cpi	r26, 0x89	; 137
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	84 d2       	rcall	.+1288   	; 0x628 <main>
 120:	c2 c5       	rjmp	.+2948   	; 0xca6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <update_brightness>:
void tx_str(unsigned char *txStr, int len) {
	int i = 0;
	for(i=0; i<len; i++) {
		tx_char(txStr[i]);
	}
}
 124:	fc 01       	movw	r30, r24
 126:	81 81       	ldd	r24, Z+1	; 0x01
 128:	88 23       	and	r24, r24
 12a:	19 f0       	breq	.+6      	; 0x132 <update_brightness+0xe>
 12c:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <_brightness>
 130:	81 83       	std	Z+1, r24	; 0x01
 132:	82 81       	ldd	r24, Z+2	; 0x02
 134:	88 23       	and	r24, r24
 136:	19 f0       	breq	.+6      	; 0x13e <update_brightness+0x1a>
 138:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <_brightness>
 13c:	82 83       	std	Z+2, r24	; 0x02
 13e:	80 81       	ld	r24, Z
 140:	88 23       	and	r24, r24
 142:	19 f0       	breq	.+6      	; 0x14a <update_brightness+0x26>
 144:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <_brightness>
 148:	80 83       	st	Z, r24
 14a:	83 81       	ldd	r24, Z+3	; 0x03
 14c:	88 23       	and	r24, r24
 14e:	19 f0       	breq	.+6      	; 0x156 <update_brightness+0x32>
 150:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <_brightness>
 154:	83 83       	std	Z+3, r24	; 0x03
 156:	08 95       	ret

00000158 <led_all_on>:
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	15 c0       	rjmp	.+42     	; 0x186 <led_all_on+0x2e>
 15c:	e8 2f       	mov	r30, r24
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	e0 5c       	subi	r30, 0xC0	; 192
 16a:	fd 4f       	sbci	r31, 0xFD	; 253
 16c:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 170:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 174:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 178:	70 91 03 02 	lds	r23, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 17c:	40 83       	st	Z, r20
 17e:	51 83       	std	Z+1, r21	; 0x01
 180:	62 83       	std	Z+2, r22	; 0x02
 182:	73 83       	std	Z+3, r23	; 0x03
 184:	8f 5f       	subi	r24, 0xFF	; 255
 186:	80 31       	cpi	r24, 0x10	; 16
 188:	48 f3       	brcs	.-46     	; 0x15c <led_all_on+0x4>
 18a:	40 e1       	ldi	r20, 0x10	; 16
 18c:	50 e0       	ldi	r21, 0x00	; 0
 18e:	60 e4       	ldi	r22, 0x40	; 64
 190:	72 e0       	ldi	r23, 0x02	; 2
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	78 c2       	rjmp	.+1264   	; 0x686 <ws2812_setleds_rgbw_PB>
 196:	08 95       	ret

00000198 <led_all_off>:
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	0d c0       	rjmp	.+26     	; 0x1b6 <led_all_off+0x1e>
 19c:	e8 2f       	mov	r30, r24
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	ee 0f       	add	r30, r30
 1a2:	ff 1f       	adc	r31, r31
 1a4:	ee 0f       	add	r30, r30
 1a6:	ff 1f       	adc	r31, r31
 1a8:	e0 5c       	subi	r30, 0xC0	; 192
 1aa:	fd 4f       	sbci	r31, 0xFD	; 253
 1ac:	10 82       	st	Z, r1
 1ae:	11 82       	std	Z+1, r1	; 0x01
 1b0:	12 82       	std	Z+2, r1	; 0x02
 1b2:	13 82       	std	Z+3, r1	; 0x03
 1b4:	8f 5f       	subi	r24, 0xFF	; 255
 1b6:	80 31       	cpi	r24, 0x10	; 16
 1b8:	88 f3       	brcs	.-30     	; 0x19c <led_all_off+0x4>
 1ba:	40 e1       	ldi	r20, 0x10	; 16
 1bc:	50 e0       	ldi	r21, 0x00	; 0
 1be:	60 e4       	ldi	r22, 0x40	; 64
 1c0:	72 e0       	ldi	r23, 0x02	; 2
 1c2:	86 e0       	ldi	r24, 0x06	; 6
 1c4:	60 c2       	rjmp	.+1216   	; 0x686 <ws2812_setleds_rgbw_PB>
 1c6:	08 95       	ret

000001c8 <led_color>:
 1c8:	0f 93       	push	r16
 1ca:	1f 93       	push	r17
 1cc:	8b 01       	movw	r16, r22
 1ce:	9c 01       	movw	r18, r24
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0f c0       	rjmp	.+30     	; 0x1f4 <led_color+0x2c>
 1d6:	84 17       	cp	r24, r20
 1d8:	95 07       	cpc	r25, r21
 1da:	59 f4       	brne	.+22     	; 0x1f2 <led_color+0x2a>
 1dc:	fc 01       	movw	r30, r24
 1de:	ee 0f       	add	r30, r30
 1e0:	ff 1f       	adc	r31, r31
 1e2:	ee 0f       	add	r30, r30
 1e4:	ff 1f       	adc	r31, r31
 1e6:	e0 5c       	subi	r30, 0xC0	; 192
 1e8:	fd 4f       	sbci	r31, 0xFD	; 253
 1ea:	00 83       	st	Z, r16
 1ec:	11 83       	std	Z+1, r17	; 0x01
 1ee:	22 83       	std	Z+2, r18	; 0x02
 1f0:	33 83       	std	Z+3, r19	; 0x03
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	80 31       	cpi	r24, 0x10	; 16
 1f6:	91 05       	cpc	r25, r1
 1f8:	74 f3       	brlt	.-36     	; 0x1d6 <led_color+0xe>
 1fa:	40 e1       	ldi	r20, 0x10	; 16
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	60 e4       	ldi	r22, 0x40	; 64
 200:	72 e0       	ldi	r23, 0x02	; 2
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	40 d2       	rcall	.+1152   	; 0x686 <ws2812_setleds_rgbw_PB>
 206:	1f 91       	pop	r17
 208:	0f 91       	pop	r16
 20a:	08 95       	ret

0000020c <set_brightness>:
 20c:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <_brightness+0x1>
 210:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <_brightness>
 214:	80 e1       	ldi	r24, 0x10	; 16
 216:	92 e0       	ldi	r25, 0x02	; 2
 218:	85 df       	rcall	.-246    	; 0x124 <update_brightness>
 21a:	88 e0       	ldi	r24, 0x08	; 8
 21c:	92 e0       	ldi	r25, 0x02	; 2
 21e:	82 df       	rcall	.-252    	; 0x124 <update_brightness>
 220:	8c e0       	ldi	r24, 0x0C	; 12
 222:	92 e0       	ldi	r25, 0x02	; 2
 224:	7f df       	rcall	.-258    	; 0x124 <update_brightness>
 226:	84 e0       	ldi	r24, 0x04	; 4
 228:	92 e0       	ldi	r25, 0x02	; 2
 22a:	7c df       	rcall	.-264    	; 0x124 <update_brightness>
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	92 e0       	ldi	r25, 0x02	; 2
 230:	79 df       	rcall	.-270    	; 0x124 <update_brightness>
 232:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <is_led_on>
 236:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <is_led_on+0x1>
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	09 f0       	breq	.+2      	; 0x240 <set_brightness+0x34>
 23e:	83 c0       	rjmp	.+262    	; 0x346 <set_brightness+0x13a>
 240:	76 c0       	rjmp	.+236    	; 0x32e <set_brightness+0x122>
 242:	fc 01       	movw	r30, r24
 244:	ee 0f       	add	r30, r30
 246:	ff 1f       	adc	r31, r31
 248:	ee 0f       	add	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	e0 5c       	subi	r30, 0xC0	; 192
 24e:	fd 4f       	sbci	r31, 0xFD	; 253
 250:	21 81       	ldd	r18, Z+1	; 0x01
 252:	22 23       	and	r18, r18
 254:	99 f0       	breq	.+38     	; 0x27c <set_brightness+0x70>
 256:	fc 01       	movw	r30, r24
 258:	ee 0f       	add	r30, r30
 25a:	ff 1f       	adc	r31, r31
 25c:	ee 0f       	add	r30, r30
 25e:	ff 1f       	adc	r31, r31
 260:	e0 5c       	subi	r30, 0xC0	; 192
 262:	fd 4f       	sbci	r31, 0xFD	; 253
 264:	40 91 10 02 	lds	r20, 0x0210	; 0x800210 <redColor>
 268:	50 91 11 02 	lds	r21, 0x0211	; 0x800211 <redColor+0x1>
 26c:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <redColor+0x2>
 270:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <redColor+0x3>
 274:	40 83       	st	Z, r20
 276:	51 83       	std	Z+1, r21	; 0x01
 278:	62 83       	std	Z+2, r22	; 0x02
 27a:	73 83       	std	Z+3, r23	; 0x03
 27c:	fc 01       	movw	r30, r24
 27e:	ee 0f       	add	r30, r30
 280:	ff 1f       	adc	r31, r31
 282:	ee 0f       	add	r30, r30
 284:	ff 1f       	adc	r31, r31
 286:	e0 5c       	subi	r30, 0xC0	; 192
 288:	fd 4f       	sbci	r31, 0xFD	; 253
 28a:	20 81       	ld	r18, Z
 28c:	22 23       	and	r18, r18
 28e:	99 f0       	breq	.+38     	; 0x2b6 <set_brightness+0xaa>
 290:	fc 01       	movw	r30, r24
 292:	ee 0f       	add	r30, r30
 294:	ff 1f       	adc	r31, r31
 296:	ee 0f       	add	r30, r30
 298:	ff 1f       	adc	r31, r31
 29a:	e0 5c       	subi	r30, 0xC0	; 192
 29c:	fd 4f       	sbci	r31, 0xFD	; 253
 29e:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <greenColor>
 2a2:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <greenColor+0x1>
 2a6:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <greenColor+0x2>
 2aa:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <greenColor+0x3>
 2ae:	40 83       	st	Z, r20
 2b0:	51 83       	std	Z+1, r21	; 0x01
 2b2:	62 83       	std	Z+2, r22	; 0x02
 2b4:	73 83       	std	Z+3, r23	; 0x03
 2b6:	fc 01       	movw	r30, r24
 2b8:	ee 0f       	add	r30, r30
 2ba:	ff 1f       	adc	r31, r31
 2bc:	ee 0f       	add	r30, r30
 2be:	ff 1f       	adc	r31, r31
 2c0:	e0 5c       	subi	r30, 0xC0	; 192
 2c2:	fd 4f       	sbci	r31, 0xFD	; 253
 2c4:	22 81       	ldd	r18, Z+2	; 0x02
 2c6:	22 23       	and	r18, r18
 2c8:	99 f0       	breq	.+38     	; 0x2f0 <set_brightness+0xe4>
 2ca:	fc 01       	movw	r30, r24
 2cc:	ee 0f       	add	r30, r30
 2ce:	ff 1f       	adc	r31, r31
 2d0:	ee 0f       	add	r30, r30
 2d2:	ff 1f       	adc	r31, r31
 2d4:	e0 5c       	subi	r30, 0xC0	; 192
 2d6:	fd 4f       	sbci	r31, 0xFD	; 253
 2d8:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <blueColor>
 2dc:	50 91 0d 02 	lds	r21, 0x020D	; 0x80020d <blueColor+0x1>
 2e0:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <blueColor+0x2>
 2e4:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <blueColor+0x3>
 2e8:	40 83       	st	Z, r20
 2ea:	51 83       	std	Z+1, r21	; 0x01
 2ec:	62 83       	std	Z+2, r22	; 0x02
 2ee:	73 83       	std	Z+3, r23	; 0x03
 2f0:	fc 01       	movw	r30, r24
 2f2:	ee 0f       	add	r30, r30
 2f4:	ff 1f       	adc	r31, r31
 2f6:	ee 0f       	add	r30, r30
 2f8:	ff 1f       	adc	r31, r31
 2fa:	e0 5c       	subi	r30, 0xC0	; 192
 2fc:	fd 4f       	sbci	r31, 0xFD	; 253
 2fe:	23 81       	ldd	r18, Z+3	; 0x03
 300:	22 23       	and	r18, r18
 302:	99 f0       	breq	.+38     	; 0x32a <set_brightness+0x11e>
 304:	fc 01       	movw	r30, r24
 306:	ee 0f       	add	r30, r30
 308:	ff 1f       	adc	r31, r31
 30a:	ee 0f       	add	r30, r30
 30c:	ff 1f       	adc	r31, r31
 30e:	e0 5c       	subi	r30, 0xC0	; 192
 310:	fd 4f       	sbci	r31, 0xFD	; 253
 312:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <whiteColor>
 316:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <whiteColor+0x1>
 31a:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <whiteColor+0x2>
 31e:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <whiteColor+0x3>
 322:	40 83       	st	Z, r20
 324:	51 83       	std	Z+1, r21	; 0x01
 326:	62 83       	std	Z+2, r22	; 0x02
 328:	73 83       	std	Z+3, r23	; 0x03
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	02 c0       	rjmp	.+4      	; 0x332 <set_brightness+0x126>
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	80 31       	cpi	r24, 0x10	; 16
 334:	91 05       	cpc	r25, r1
 336:	0c f4       	brge	.+2      	; 0x33a <set_brightness+0x12e>
 338:	84 cf       	rjmp	.-248    	; 0x242 <set_brightness+0x36>
 33a:	40 e1       	ldi	r20, 0x10	; 16
 33c:	50 e0       	ldi	r21, 0x00	; 0
 33e:	60 e4       	ldi	r22, 0x40	; 64
 340:	72 e0       	ldi	r23, 0x02	; 2
 342:	86 e0       	ldi	r24, 0x06	; 6
 344:	a0 c1       	rjmp	.+832    	; 0x686 <ws2812_setleds_rgbw_PB>
 346:	08 95       	ret

00000348 <tx_char>:
 348:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 34c:	95 ff       	sbrs	r25, 5
 34e:	fc cf       	rjmp	.-8      	; 0x348 <tx_char>
 350:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 354:	08 95       	ret

00000356 <myPrintf>:

void myPrintf(char *fmt,...) {
 356:	0f 93       	push	r16
 358:	1f 93       	push	r17
 35a:	cf 93       	push	r28
 35c:	df 93       	push	r29
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62
 362:	c0 58       	subi	r28, 0x80	; 128
 364:	d1 09       	sbc	r29, r1
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	08 c0       	rjmp	.+16     	; 0x384 <myPrintf+0x2e>
		sText[i] = 0;
 374:	e1 e0       	ldi	r30, 0x01	; 1
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	ec 0f       	add	r30, r28
 37a:	fd 1f       	adc	r31, r29
 37c:	e8 0f       	add	r30, r24
 37e:	f1 1d       	adc	r31, r1
 380:	10 82       	st	Z, r1
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 382:	8f 5f       	subi	r24, 0xFF	; 255
 384:	88 23       	and	r24, r24
 386:	b4 f7       	brge	.-20     	; 0x374 <myPrintf+0x1e>
		sText[i] = 0;
	}
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
 388:	ae 01       	movw	r20, r28
 38a:	46 57       	subi	r20, 0x76	; 118
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	c8 57       	subi	r28, 0x78	; 120
 390:	df 4f       	sbci	r29, 0xFF	; 255
 392:	68 81       	ld	r22, Y
 394:	79 81       	ldd	r23, Y+1	; 0x01
 396:	c8 58       	subi	r28, 0x88	; 136
 398:	d0 40       	sbci	r29, 0x00	; 0
 39a:	8e 01       	movw	r16, r28
 39c:	0f 5f       	subi	r16, 0xFF	; 255
 39e:	1f 4f       	sbci	r17, 0xFF	; 255
 3a0:	c8 01       	movw	r24, r16
 3a2:	ac d1       	rcall	.+856    	; 0x6fc <vsprintf>
	va_end(arg_ptr);
	
	len = strlen(sText);
 3a4:	f8 01       	movw	r30, r16
 3a6:	01 90       	ld	r0, Z+
 3a8:	00 20       	and	r0, r0
 3aa:	e9 f7       	brne	.-6      	; 0x3a6 <myPrintf+0x50>
 3ac:	31 97       	sbiw	r30, 0x01	; 1
 3ae:	8e 2f       	mov	r24, r30
 3b0:	80 1b       	sub	r24, r16
 3b2:	08 2f       	mov	r16, r24
	for(i=0; i<len; i++) {
 3b4:	10 e0       	ldi	r17, 0x00	; 0
 3b6:	09 c0       	rjmp	.+18     	; 0x3ca <myPrintf+0x74>
		tx_char(sText[i]);
 3b8:	e1 e0       	ldi	r30, 0x01	; 1
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	ec 0f       	add	r30, r28
 3be:	fd 1f       	adc	r31, r29
 3c0:	e1 0f       	add	r30, r17
 3c2:	f1 1d       	adc	r31, r1
 3c4:	80 81       	ld	r24, Z
 3c6:	c0 df       	rcall	.-128    	; 0x348 <tx_char>
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
	va_end(arg_ptr);
	
	len = strlen(sText);
	for(i=0; i<len; i++) {
 3c8:	1f 5f       	subi	r17, 0xFF	; 255
 3ca:	10 17       	cp	r17, r16
 3cc:	a8 f3       	brcs	.-22     	; 0x3b8 <myPrintf+0x62>
		tx_char(sText[i]);
	}
}
 3ce:	c0 58       	subi	r28, 0x80	; 128
 3d0:	df 4f       	sbci	r29, 0xFF	; 255
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	1f 91       	pop	r17
 3e2:	0f 91       	pop	r16
 3e4:	08 95       	ret

000003e6 <__vector_36>:

/************************************************************************/

ISR(USART1_RX_vect) {
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	0b b6       	in	r0, 0x3b	; 59
 3f2:	0f 92       	push	r0
 3f4:	2f 93       	push	r18
 3f6:	3f 93       	push	r19
 3f8:	4f 93       	push	r20
 3fa:	5f 93       	push	r21
 3fc:	6f 93       	push	r22
 3fe:	7f 93       	push	r23
 400:	8f 93       	push	r24
 402:	9f 93       	push	r25
 404:	af 93       	push	r26
 406:	bf 93       	push	r27
 408:	ef 93       	push	r30
 40a:	ff 93       	push	r31
	cli();
 40c:	f8 94       	cli
	
	unsigned char _usart_rcv = 0;
	_usart_rcv = UDR1;
 40e:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
	if(decode == 0 && _usart_rcv == STX) {
 412:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <decode>
 416:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <decode+0x1>
 41a:	00 97       	sbiw	r24, 0x00	; 0
 41c:	49 f4       	brne	.+18     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41e:	22 30       	cpi	r18, 0x02	; 2
 420:	39 f4       	brne	.+14     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
		decode = 1;
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <decode+0x1>
 42a:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <decode>
 42e:	4c c0       	rjmp	.+152    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
	}
	else if(decode == 1) {
 430:	81 30       	cpi	r24, 0x01	; 1
 432:	91 05       	cpc	r25, r1
 434:	49 f4       	brne	.+18     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		_command = _usart_rcv;
 436:	20 93 80 02 	sts	0x0280, r18	; 0x800280 <_command>
		decode = 2;
 43a:	82 e0       	ldi	r24, 0x02	; 2
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <decode+0x1>
 442:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <decode>
 446:	40 c0       	rjmp	.+128    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
	}
	else if(decode == 2) {
 448:	82 30       	cpi	r24, 0x02	; 2
 44a:	91 05       	cpc	r25, r1
 44c:	39 f5       	brne	.+78     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		// _commnd가 NEOPIXEL_R/G/B일 때, _usart_rcv에 들어오는 값은 네오픽셀의 led index이다.
		// 정상적인 값이라면 _index에 _usart_rcv값을 넣어주지만,
		// index가 0 ~ 15 사이가 아닌 경우에는, -1을 넣어준다.
		if(_command == NEOPIXEL_R || _command == NEOPIXEL_G || _command == NEOPIXEL_B) {
 44e:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <_command>
 452:	86 30       	cpi	r24, 0x06	; 6
 454:	21 f0       	breq	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 456:	88 30       	cpi	r24, 0x08	; 8
 458:	11 f0       	breq	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	80 31       	cpi	r24, 0x10	; 16
 45c:	81 f4       	brne	.+32     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
			if(_usart_rcv < LED_COUNT) _index = _usart_rcv;
 45e:	20 31       	cpi	r18, 0x10	; 16
 460:	38 f4       	brcc	.+14     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 462:	82 2f       	mov	r24, r18
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	90 93 84 02 	sts	0x0284, r25	; 0x800284 <_index+0x1>
 46a:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <_index>
 46e:	0f c0       	rjmp	.+30     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
			else _index = -1;
 470:	8f ef       	ldi	r24, 0xFF	; 255
 472:	9f ef       	ldi	r25, 0xFF	; 255
 474:	90 93 84 02 	sts	0x0284, r25	; 0x800284 <_index+0x1>
 478:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <_index>
 47c:	08 c0       	rjmp	.+16     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
		}
		// _command가 NEOPIXEL_BRIGHTNESS일 때, _usart_rcv값은 밝기이다.
		else if(_command == NEOPIXEL_BRIGHTNESS) {
 47e:	84 30       	cpi	r24, 0x04	; 4
 480:	31 f4       	brne	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
			_brightness = _usart_rcv;
 482:	82 2f       	mov	r24, r18
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <_brightness+0x1>
 48a:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <_brightness>
		}
		
		decode = 3;
 48e:	83 e0       	ldi	r24, 0x03	; 3
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <decode+0x1>
 496:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <decode>
 49a:	16 c0       	rjmp	.+44     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
	}
	else if(decode == 3) {
 49c:	03 97       	sbiw	r24, 0x03	; 3
 49e:	a1 f4       	brne	.+40     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
		if(_usart_rcv == ETX) {
 4a0:	23 30       	cpi	r18, 0x03	; 3
 4a2:	39 f4       	brne	.+14     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
			sint_flag = 1;
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	90 93 86 02 	sts	0x0286, r25	; 0x800286 <sint_flag+0x1>
 4ac:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <sint_flag>
 4b0:	07 c0       	rjmp	.+14     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
		}
		else {
			myPrintf("RX error\n");
 4b2:	86 e1       	ldi	r24, 0x16	; 22
 4b4:	92 e0       	ldi	r25, 0x02	; 2
 4b6:	9f 93       	push	r25
 4b8:	8f 93       	push	r24
 4ba:	4d df       	rcall	.-358    	; 0x356 <myPrintf>
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
		}
		decode = 0;
 4c0:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <decode+0x1>
 4c4:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <decode>
	}
	
	sei();
 4c8:	78 94       	sei
}
 4ca:	ff 91       	pop	r31
 4cc:	ef 91       	pop	r30
 4ce:	bf 91       	pop	r27
 4d0:	af 91       	pop	r26
 4d2:	9f 91       	pop	r25
 4d4:	8f 91       	pop	r24
 4d6:	7f 91       	pop	r23
 4d8:	6f 91       	pop	r22
 4da:	5f 91       	pop	r21
 4dc:	4f 91       	pop	r20
 4de:	3f 91       	pop	r19
 4e0:	2f 91       	pop	r18
 4e2:	0f 90       	pop	r0
 4e4:	0b be       	out	0x3b, r0	; 59
 4e6:	0f 90       	pop	r0
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	0f 90       	pop	r0
 4ec:	1f 90       	pop	r1
 4ee:	18 95       	reti

000004f0 <hex_command>:

void hex_command(uint8_t cd) {
	
	// _index가 -1인 경우는 0 ~ 15 범위를 넘어갔다는 것이므로,
	// 에러 메시지를 출력하고 _index를 다시 0으로 바꾸고 리턴한다.
	if(_index == -1) {
 4f0:	40 91 83 02 	lds	r20, 0x0283	; 0x800283 <_index>
 4f4:	50 91 84 02 	lds	r21, 0x0284	; 0x800284 <_index+0x1>
 4f8:	4f 3f       	cpi	r20, 0xFF	; 255
 4fa:	9f ef       	ldi	r25, 0xFF	; 255
 4fc:	59 07       	cpc	r21, r25
 4fe:	61 f4       	brne	.+24     	; 0x518 <hex_command+0x28>
		myPrintf("Invalid index\n");
 500:	80 e2       	ldi	r24, 0x20	; 32
 502:	92 e0       	ldi	r25, 0x02	; 2
 504:	9f 93       	push	r25
 506:	8f 93       	push	r24
 508:	26 df       	rcall	.-436    	; 0x356 <myPrintf>
		_index = 0;
 50a:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <_index+0x1>
 50e:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <_index>
		return;
 512:	0f 90       	pop	r0
 514:	0f 90       	pop	r0
 516:	08 95       	ret
	// NEOPIXEL_OFF : 모든 led를 끄고, is_led_on을 0으로 바꿔준다.
	//
	// NEOPIXEL_BRIGHTNESS : 밝기를 업데이트 해준다.
	//
	// 그 밖의 경우인 else는 에러 메시지를 출력해준다.
	if(cd == NEOPIXEL_ON) {
 518:	81 30       	cpi	r24, 0x01	; 1
 51a:	41 f4       	brne	.+16     	; 0x52c <hex_command+0x3c>
		is_led_on = 1;
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <is_led_on+0x1>
 524:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <is_led_on>
		led_all_on();
 528:	17 ce       	rjmp	.-978    	; 0x158 <led_all_on>
 52a:	08 95       	ret
	}
	else if(cd == NEOPIXEL_OFF) {
 52c:	82 30       	cpi	r24, 0x02	; 2
 52e:	31 f4       	brne	.+12     	; 0x53c <hex_command+0x4c>
		is_led_on = 0;
 530:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <is_led_on+0x1>
 534:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <is_led_on>
		led_all_off();
 538:	2f ce       	rjmp	.-930    	; 0x198 <led_all_off>
 53a:	08 95       	ret
	}
	else if(cd == NEOPIXEL_R) {
 53c:	86 30       	cpi	r24, 0x06	; 6
 53e:	01 f5       	brne	.+64     	; 0x580 <hex_command+0x90>
		is_led_on = 1;
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <is_led_on+0x1>
 548:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <is_led_on>
		led_color(redColor, _index);
 54c:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <redColor>
 550:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <redColor+0x1>
 554:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <redColor+0x2>
 558:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <redColor+0x3>
 55c:	35 de       	rcall	.-918    	; 0x1c8 <led_color>
		selectedColor = redColor;
 55e:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <redColor>
 562:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <redColor+0x1>
 566:	a0 91 12 02 	lds	r26, 0x0212	; 0x800212 <redColor+0x2>
 56a:	b0 91 13 02 	lds	r27, 0x0213	; 0x800213 <redColor+0x3>
 56e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 572:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 576:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 57a:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 57e:	08 95       	ret
	}
	else if(cd == NEOPIXEL_G) {
 580:	88 30       	cpi	r24, 0x08	; 8
 582:	01 f5       	brne	.+64     	; 0x5c4 <hex_command+0xd4>
		is_led_on = 1;
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <is_led_on+0x1>
 58c:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <is_led_on>
		led_color(greenColor, _index);
 590:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <greenColor>
 594:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <greenColor+0x1>
 598:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <greenColor+0x2>
 59c:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <greenColor+0x3>
 5a0:	13 de       	rcall	.-986    	; 0x1c8 <led_color>
		selectedColor = greenColor;
 5a2:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <greenColor>
 5a6:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <greenColor+0x1>
 5aa:	a0 91 0a 02 	lds	r26, 0x020A	; 0x80020a <greenColor+0x2>
 5ae:	b0 91 0b 02 	lds	r27, 0x020B	; 0x80020b <greenColor+0x3>
 5b2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 5b6:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 5ba:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 5be:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 5c2:	08 95       	ret
	}
	else if(cd == NEOPIXEL_B) {
 5c4:	80 31       	cpi	r24, 0x10	; 16
 5c6:	01 f5       	brne	.+64     	; 0x608 <hex_command+0x118>
		is_led_on = 1;
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <is_led_on+0x1>
 5d0:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <is_led_on>
		led_color(blueColor, _index);
 5d4:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <blueColor>
 5d8:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <blueColor+0x1>
 5dc:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <blueColor+0x2>
 5e0:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <blueColor+0x3>
 5e4:	f1 dd       	rcall	.-1054   	; 0x1c8 <led_color>
		selectedColor = blueColor;
 5e6:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <blueColor>
 5ea:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <blueColor+0x1>
 5ee:	a0 91 0e 02 	lds	r26, 0x020E	; 0x80020e <blueColor+0x2>
 5f2:	b0 91 0f 02 	lds	r27, 0x020F	; 0x80020f <blueColor+0x3>
 5f6:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 5fa:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 5fe:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 602:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 606:	08 95       	ret
	}
	else if(cd == NEOPIXEL_BRIGHTNESS) {
 608:	84 30       	cpi	r24, 0x04	; 4
		set_brightness(_brightness);
 60a:	31 f4       	brne	.+12     	; 0x618 <hex_command+0x128>
 60c:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <_brightness>
 610:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <_brightness+0x1>
 614:	fb cd       	rjmp	.-1034   	; 0x20c <set_brightness>
	}
	else {
		myPrintf("Invalid Command\n");
 616:	08 95       	ret
 618:	8f e2       	ldi	r24, 0x2F	; 47
 61a:	92 e0       	ldi	r25, 0x02	; 2
 61c:	9f 93       	push	r25
 61e:	8f 93       	push	r24
 620:	9a de       	rcall	.-716    	; 0x356 <myPrintf>
 622:	0f 90       	pop	r0
 624:	0f 90       	pop	r0
 626:	08 95       	ret

00000628 <main>:

int main(void)
{
    /* Replace with your application code */
	
	cli();
 628:	f8 94       	cli
	DDRE &= ~(0x30);
 62a:	8d b1       	in	r24, 0x0d	; 13
 62c:	8f 7c       	andi	r24, 0xCF	; 207
 62e:	8d b9       	out	0x0d, r24	; 13
	EICRB = 0x0F;
 630:	8f e0       	ldi	r24, 0x0F	; 15
 632:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	EIMSK = 0x30;
 636:	80 e3       	ldi	r24, 0x30	; 48
 638:	8d bb       	out	0x1d, r24	; 29
	EIFR |= 0x30;
 63a:	8c b3       	in	r24, 0x1c	; 28
 63c:	80 63       	ori	r24, 0x30	; 48
 63e:	8c bb       	out	0x1c, r24	; 28
	
	UBRR1H = (unsigned char) (BAUD_9600 >> 8);
 640:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
	UBRR1L = (unsigned char) BAUD_9600;
 644:	87 e6       	ldi	r24, 0x67	; 103
 646:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
	UCSR1B = (1 << TXEN1) | (1 << RXEN1);
 64a:	e9 ec       	ldi	r30, 0xC9	; 201
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	88 e1       	ldi	r24, 0x18	; 24
 650:	80 83       	st	Z, r24
	UCSR1B |= (1<<RXCIE1);
 652:	80 81       	ld	r24, Z
 654:	80 68       	ori	r24, 0x80	; 128
 656:	80 83       	st	Z, r24
	UCSR1C = (1 << UCSZ11) | (1 << UCSZ10);
 658:	86 e0       	ldi	r24, 0x06	; 6
 65a:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
	sei();
 65e:	78 94       	sei
	
	DDRB |= 0x01 << 6;
 660:	84 b1       	in	r24, 0x04	; 4
 662:	80 64       	ori	r24, 0x40	; 64
 664:	84 b9       	out	0x04, r24	; 4
	
    while (1)
    {	
		if(sint_flag) {
 666:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <sint_flag>
 66a:	90 91 86 02 	lds	r25, 0x0286	; 0x800286 <sint_flag+0x1>
 66e:	89 2b       	or	r24, r25
 670:	d1 f3       	breq	.-12     	; 0x666 <main+0x3e>
			hex_command(_command);
 672:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <_command>
 676:	3c df       	rcall	.-392    	; 0x4f0 <hex_command>
			sint_flag = 0;
 678:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <sint_flag+0x1>
 67c:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <sint_flag>
			_command = 0;
 680:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <_command>
 684:	f0 cf       	rjmp	.-32     	; 0x666 <main+0x3e>

00000686 <ws2812_setleds_rgbw_PB>:
{
	ws2812_sendarray_mask_PA((uint8_t*)ledarray,leds<<2,0x01<<pin);
	_delay_us(ws2812_resettime);
}
void inline ws2812_setleds_rgbw_PB(uint8_t pin,rgbw_color *ledarray, uint16_t leds)
{
 686:	fb 01       	movw	r30, r22
	ws2812_sendarray_mask_PB((uint8_t*)ledarray,leds<<2,0x01<<pin);
 688:	21 e0       	ldi	r18, 0x01	; 1
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	b9 01       	movw	r22, r18
 68e:	02 c0       	rjmp	.+4      	; 0x694 <ws2812_setleds_rgbw_PB+0xe>
 690:	66 0f       	add	r22, r22
 692:	77 1f       	adc	r23, r23
 694:	8a 95       	dec	r24
 696:	e2 f7       	brpl	.-8      	; 0x690 <ws2812_setleds_rgbw_PB+0xa>
 698:	cb 01       	movw	r24, r22
 69a:	44 0f       	add	r20, r20
 69c:	55 1f       	adc	r21, r21
 69e:	44 0f       	add	r20, r20
 6a0:	55 1f       	adc	r21, r21
void inline ws2812_sendarray_mask_PB(uint8_t *data,uint16_t datlen,uint8_t maskhi)
{
	uint8_t curbyte,ctr,masklo;
	uint8_t sreg_prev;

	DDRB |= maskhi; // Enable output
 6a2:	94 b1       	in	r25, 0x04	; 4
 6a4:	98 2b       	or	r25, r24
 6a6:	94 b9       	out	0x04, r25	; 4
	masklo	=~maskhi&PORTB;
 6a8:	95 b1       	in	r25, 0x05	; 5
 6aa:	78 2f       	mov	r23, r24
 6ac:	70 95       	com	r23
 6ae:	79 23       	and	r23, r25
	maskhi |=        PORTB;
 6b0:	65 b1       	in	r22, 0x05	; 5
 6b2:	68 2b       	or	r22, r24
	
	sreg_prev=SREG;
 6b4:	af b7       	in	r26, 0x3f	; 63
 6b6:	16 c0       	rjmp	.+44     	; 0x6e4 <loop142+0x20>
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
		curbyte=*data++;
 6b8:	9f 01       	movw	r18, r30
 6ba:	2f 5f       	subi	r18, 0xFF	; 255
 6bc:	3f 4f       	sbci	r19, 0xFF	; 255
 6be:	40 81       	ld	r20, Z
		
		asm volatile(
 6c0:	58 e0       	ldi	r21, 0x08	; 8
 6c2:	e8 94       	clt

000006c4 <loop142>:
 6c4:	65 b9       	out	0x05, r22	; 5
 6c6:	00 00       	nop
 6c8:	06 f4       	brtc	.+0      	; 0x6ca <loop142+0x6>
 6ca:	47 ff       	sbrs	r20, 7
 6cc:	75 b9       	out	0x05, r23	; 5
 6ce:	44 0f       	add	r20, r20
 6d0:	00 00       	nop
 6d2:	06 f4       	brtc	.+0      	; 0x6d4 <loop142+0x10>
 6d4:	06 f4       	brtc	.+0      	; 0x6d6 <loop142+0x12>
 6d6:	06 f4       	brtc	.+0      	; 0x6d8 <loop142+0x14>
 6d8:	75 b9       	out	0x05, r23	; 5
 6da:	06 f4       	brtc	.+0      	; 0x6dc <loop142+0x18>
 6dc:	5a 95       	dec	r21
 6de:	91 f7       	brne	.-28     	; 0x6c4 <loop142>
	sreg_prev=SREG;
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
 6e0:	ac 01       	movw	r20, r24
		curbyte=*data++;
 6e2:	f9 01       	movw	r30, r18
	sreg_prev=SREG;
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
 6e4:	ca 01       	movw	r24, r20
 6e6:	01 97       	sbiw	r24, 0x01	; 1
 6e8:	45 2b       	or	r20, r21
 6ea:	31 f7       	brne	.-52     	; 0x6b8 <ws2812_setleds_rgbw_PB+0x32>
		:	"=&d" (ctr)
		:	"r" (curbyte), "I" (_SFR_IO_ADDR(PORTB)), "r" (maskhi), "r" (masklo)
		);
	}
	
	SREG=sreg_prev;
 6ec:	af bf       	out	0x3f, r26	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ee:	8f e8       	ldi	r24, 0x8F	; 143
 6f0:	91 e0       	ldi	r25, 0x01	; 1
 6f2:	01 97       	sbiw	r24, 0x01	; 1
 6f4:	f1 f7       	brne	.-4      	; 0x6f2 <loop142+0x2e>
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <loop142+0x34>
 6f8:	00 00       	nop
 6fa:	08 95       	ret

000006fc <vsprintf>:
 6fc:	0f 93       	push	r16
 6fe:	1f 93       	push	r17
 700:	cf 93       	push	r28
 702:	df 93       	push	r29
 704:	cd b7       	in	r28, 0x3d	; 61
 706:	de b7       	in	r29, 0x3e	; 62
 708:	2e 97       	sbiw	r28, 0x0e	; 14
 70a:	0f b6       	in	r0, 0x3f	; 63
 70c:	f8 94       	cli
 70e:	de bf       	out	0x3e, r29	; 62
 710:	0f be       	out	0x3f, r0	; 63
 712:	cd bf       	out	0x3d, r28	; 61
 714:	8c 01       	movw	r16, r24
 716:	86 e0       	ldi	r24, 0x06	; 6
 718:	8c 83       	std	Y+4, r24	; 0x04
 71a:	1a 83       	std	Y+2, r17	; 0x02
 71c:	09 83       	std	Y+1, r16	; 0x01
 71e:	8f ef       	ldi	r24, 0xFF	; 255
 720:	9f e7       	ldi	r25, 0x7F	; 127
 722:	9e 83       	std	Y+6, r25	; 0x06
 724:	8d 83       	std	Y+5, r24	; 0x05
 726:	ce 01       	movw	r24, r28
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	10 d0       	rcall	.+32     	; 0x74c <vfprintf>
 72c:	ef 81       	ldd	r30, Y+7	; 0x07
 72e:	f8 85       	ldd	r31, Y+8	; 0x08
 730:	e0 0f       	add	r30, r16
 732:	f1 1f       	adc	r31, r17
 734:	10 82       	st	Z, r1
 736:	2e 96       	adiw	r28, 0x0e	; 14
 738:	0f b6       	in	r0, 0x3f	; 63
 73a:	f8 94       	cli
 73c:	de bf       	out	0x3e, r29	; 62
 73e:	0f be       	out	0x3f, r0	; 63
 740:	cd bf       	out	0x3d, r28	; 61
 742:	df 91       	pop	r29
 744:	cf 91       	pop	r28
 746:	1f 91       	pop	r17
 748:	0f 91       	pop	r16
 74a:	08 95       	ret

0000074c <vfprintf>:
 74c:	2f 92       	push	r2
 74e:	3f 92       	push	r3
 750:	4f 92       	push	r4
 752:	5f 92       	push	r5
 754:	6f 92       	push	r6
 756:	7f 92       	push	r7
 758:	8f 92       	push	r8
 75a:	9f 92       	push	r9
 75c:	af 92       	push	r10
 75e:	bf 92       	push	r11
 760:	cf 92       	push	r12
 762:	df 92       	push	r13
 764:	ef 92       	push	r14
 766:	ff 92       	push	r15
 768:	0f 93       	push	r16
 76a:	1f 93       	push	r17
 76c:	cf 93       	push	r28
 76e:	df 93       	push	r29
 770:	cd b7       	in	r28, 0x3d	; 61
 772:	de b7       	in	r29, 0x3e	; 62
 774:	2b 97       	sbiw	r28, 0x0b	; 11
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
 780:	6c 01       	movw	r12, r24
 782:	7b 01       	movw	r14, r22
 784:	8a 01       	movw	r16, r20
 786:	fc 01       	movw	r30, r24
 788:	17 82       	std	Z+7, r1	; 0x07
 78a:	16 82       	std	Z+6, r1	; 0x06
 78c:	83 81       	ldd	r24, Z+3	; 0x03
 78e:	81 ff       	sbrs	r24, 1
 790:	bf c1       	rjmp	.+894    	; 0xb10 <vfprintf+0x3c4>
 792:	ce 01       	movw	r24, r28
 794:	01 96       	adiw	r24, 0x01	; 1
 796:	3c 01       	movw	r6, r24
 798:	f6 01       	movw	r30, r12
 79a:	93 81       	ldd	r25, Z+3	; 0x03
 79c:	f7 01       	movw	r30, r14
 79e:	93 fd       	sbrc	r25, 3
 7a0:	85 91       	lpm	r24, Z+
 7a2:	93 ff       	sbrs	r25, 3
 7a4:	81 91       	ld	r24, Z+
 7a6:	7f 01       	movw	r14, r30
 7a8:	88 23       	and	r24, r24
 7aa:	09 f4       	brne	.+2      	; 0x7ae <vfprintf+0x62>
 7ac:	ad c1       	rjmp	.+858    	; 0xb08 <vfprintf+0x3bc>
 7ae:	85 32       	cpi	r24, 0x25	; 37
 7b0:	39 f4       	brne	.+14     	; 0x7c0 <vfprintf+0x74>
 7b2:	93 fd       	sbrc	r25, 3
 7b4:	85 91       	lpm	r24, Z+
 7b6:	93 ff       	sbrs	r25, 3
 7b8:	81 91       	ld	r24, Z+
 7ba:	7f 01       	movw	r14, r30
 7bc:	85 32       	cpi	r24, 0x25	; 37
 7be:	21 f4       	brne	.+8      	; 0x7c8 <vfprintf+0x7c>
 7c0:	b6 01       	movw	r22, r12
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	d6 d1       	rcall	.+940    	; 0xb72 <fputc>
 7c6:	e8 cf       	rjmp	.-48     	; 0x798 <vfprintf+0x4c>
 7c8:	91 2c       	mov	r9, r1
 7ca:	21 2c       	mov	r2, r1
 7cc:	31 2c       	mov	r3, r1
 7ce:	ff e1       	ldi	r31, 0x1F	; 31
 7d0:	f3 15       	cp	r31, r3
 7d2:	d8 f0       	brcs	.+54     	; 0x80a <vfprintf+0xbe>
 7d4:	8b 32       	cpi	r24, 0x2B	; 43
 7d6:	79 f0       	breq	.+30     	; 0x7f6 <vfprintf+0xaa>
 7d8:	38 f4       	brcc	.+14     	; 0x7e8 <vfprintf+0x9c>
 7da:	80 32       	cpi	r24, 0x20	; 32
 7dc:	79 f0       	breq	.+30     	; 0x7fc <vfprintf+0xb0>
 7de:	83 32       	cpi	r24, 0x23	; 35
 7e0:	a1 f4       	brne	.+40     	; 0x80a <vfprintf+0xbe>
 7e2:	23 2d       	mov	r18, r3
 7e4:	20 61       	ori	r18, 0x10	; 16
 7e6:	1d c0       	rjmp	.+58     	; 0x822 <vfprintf+0xd6>
 7e8:	8d 32       	cpi	r24, 0x2D	; 45
 7ea:	61 f0       	breq	.+24     	; 0x804 <vfprintf+0xb8>
 7ec:	80 33       	cpi	r24, 0x30	; 48
 7ee:	69 f4       	brne	.+26     	; 0x80a <vfprintf+0xbe>
 7f0:	23 2d       	mov	r18, r3
 7f2:	21 60       	ori	r18, 0x01	; 1
 7f4:	16 c0       	rjmp	.+44     	; 0x822 <vfprintf+0xd6>
 7f6:	83 2d       	mov	r24, r3
 7f8:	82 60       	ori	r24, 0x02	; 2
 7fa:	38 2e       	mov	r3, r24
 7fc:	e3 2d       	mov	r30, r3
 7fe:	e4 60       	ori	r30, 0x04	; 4
 800:	3e 2e       	mov	r3, r30
 802:	2a c0       	rjmp	.+84     	; 0x858 <vfprintf+0x10c>
 804:	f3 2d       	mov	r31, r3
 806:	f8 60       	ori	r31, 0x08	; 8
 808:	1d c0       	rjmp	.+58     	; 0x844 <vfprintf+0xf8>
 80a:	37 fc       	sbrc	r3, 7
 80c:	2d c0       	rjmp	.+90     	; 0x868 <vfprintf+0x11c>
 80e:	20 ed       	ldi	r18, 0xD0	; 208
 810:	28 0f       	add	r18, r24
 812:	2a 30       	cpi	r18, 0x0A	; 10
 814:	40 f0       	brcs	.+16     	; 0x826 <vfprintf+0xda>
 816:	8e 32       	cpi	r24, 0x2E	; 46
 818:	b9 f4       	brne	.+46     	; 0x848 <vfprintf+0xfc>
 81a:	36 fc       	sbrc	r3, 6
 81c:	75 c1       	rjmp	.+746    	; 0xb08 <vfprintf+0x3bc>
 81e:	23 2d       	mov	r18, r3
 820:	20 64       	ori	r18, 0x40	; 64
 822:	32 2e       	mov	r3, r18
 824:	19 c0       	rjmp	.+50     	; 0x858 <vfprintf+0x10c>
 826:	36 fe       	sbrs	r3, 6
 828:	06 c0       	rjmp	.+12     	; 0x836 <vfprintf+0xea>
 82a:	8a e0       	ldi	r24, 0x0A	; 10
 82c:	98 9e       	mul	r9, r24
 82e:	20 0d       	add	r18, r0
 830:	11 24       	eor	r1, r1
 832:	92 2e       	mov	r9, r18
 834:	11 c0       	rjmp	.+34     	; 0x858 <vfprintf+0x10c>
 836:	ea e0       	ldi	r30, 0x0A	; 10
 838:	2e 9e       	mul	r2, r30
 83a:	20 0d       	add	r18, r0
 83c:	11 24       	eor	r1, r1
 83e:	22 2e       	mov	r2, r18
 840:	f3 2d       	mov	r31, r3
 842:	f0 62       	ori	r31, 0x20	; 32
 844:	3f 2e       	mov	r3, r31
 846:	08 c0       	rjmp	.+16     	; 0x858 <vfprintf+0x10c>
 848:	8c 36       	cpi	r24, 0x6C	; 108
 84a:	21 f4       	brne	.+8      	; 0x854 <vfprintf+0x108>
 84c:	83 2d       	mov	r24, r3
 84e:	80 68       	ori	r24, 0x80	; 128
 850:	38 2e       	mov	r3, r24
 852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x10c>
 854:	88 36       	cpi	r24, 0x68	; 104
 856:	41 f4       	brne	.+16     	; 0x868 <vfprintf+0x11c>
 858:	f7 01       	movw	r30, r14
 85a:	93 fd       	sbrc	r25, 3
 85c:	85 91       	lpm	r24, Z+
 85e:	93 ff       	sbrs	r25, 3
 860:	81 91       	ld	r24, Z+
 862:	7f 01       	movw	r14, r30
 864:	81 11       	cpse	r24, r1
 866:	b3 cf       	rjmp	.-154    	; 0x7ce <vfprintf+0x82>
 868:	98 2f       	mov	r25, r24
 86a:	9f 7d       	andi	r25, 0xDF	; 223
 86c:	95 54       	subi	r25, 0x45	; 69
 86e:	93 30       	cpi	r25, 0x03	; 3
 870:	28 f4       	brcc	.+10     	; 0x87c <vfprintf+0x130>
 872:	0c 5f       	subi	r16, 0xFC	; 252
 874:	1f 4f       	sbci	r17, 0xFF	; 255
 876:	9f e3       	ldi	r25, 0x3F	; 63
 878:	99 83       	std	Y+1, r25	; 0x01
 87a:	0d c0       	rjmp	.+26     	; 0x896 <vfprintf+0x14a>
 87c:	83 36       	cpi	r24, 0x63	; 99
 87e:	31 f0       	breq	.+12     	; 0x88c <vfprintf+0x140>
 880:	83 37       	cpi	r24, 0x73	; 115
 882:	71 f0       	breq	.+28     	; 0x8a0 <vfprintf+0x154>
 884:	83 35       	cpi	r24, 0x53	; 83
 886:	09 f0       	breq	.+2      	; 0x88a <vfprintf+0x13e>
 888:	55 c0       	rjmp	.+170    	; 0x934 <vfprintf+0x1e8>
 88a:	20 c0       	rjmp	.+64     	; 0x8cc <vfprintf+0x180>
 88c:	f8 01       	movw	r30, r16
 88e:	80 81       	ld	r24, Z
 890:	89 83       	std	Y+1, r24	; 0x01
 892:	0e 5f       	subi	r16, 0xFE	; 254
 894:	1f 4f       	sbci	r17, 0xFF	; 255
 896:	88 24       	eor	r8, r8
 898:	83 94       	inc	r8
 89a:	91 2c       	mov	r9, r1
 89c:	53 01       	movw	r10, r6
 89e:	12 c0       	rjmp	.+36     	; 0x8c4 <vfprintf+0x178>
 8a0:	28 01       	movw	r4, r16
 8a2:	f2 e0       	ldi	r31, 0x02	; 2
 8a4:	4f 0e       	add	r4, r31
 8a6:	51 1c       	adc	r5, r1
 8a8:	f8 01       	movw	r30, r16
 8aa:	a0 80       	ld	r10, Z
 8ac:	b1 80       	ldd	r11, Z+1	; 0x01
 8ae:	36 fe       	sbrs	r3, 6
 8b0:	03 c0       	rjmp	.+6      	; 0x8b8 <vfprintf+0x16c>
 8b2:	69 2d       	mov	r22, r9
 8b4:	70 e0       	ldi	r23, 0x00	; 0
 8b6:	02 c0       	rjmp	.+4      	; 0x8bc <vfprintf+0x170>
 8b8:	6f ef       	ldi	r22, 0xFF	; 255
 8ba:	7f ef       	ldi	r23, 0xFF	; 255
 8bc:	c5 01       	movw	r24, r10
 8be:	4e d1       	rcall	.+668    	; 0xb5c <strnlen>
 8c0:	4c 01       	movw	r8, r24
 8c2:	82 01       	movw	r16, r4
 8c4:	f3 2d       	mov	r31, r3
 8c6:	ff 77       	andi	r31, 0x7F	; 127
 8c8:	3f 2e       	mov	r3, r31
 8ca:	15 c0       	rjmp	.+42     	; 0x8f6 <vfprintf+0x1aa>
 8cc:	28 01       	movw	r4, r16
 8ce:	22 e0       	ldi	r18, 0x02	; 2
 8d0:	42 0e       	add	r4, r18
 8d2:	51 1c       	adc	r5, r1
 8d4:	f8 01       	movw	r30, r16
 8d6:	a0 80       	ld	r10, Z
 8d8:	b1 80       	ldd	r11, Z+1	; 0x01
 8da:	36 fe       	sbrs	r3, 6
 8dc:	03 c0       	rjmp	.+6      	; 0x8e4 <vfprintf+0x198>
 8de:	69 2d       	mov	r22, r9
 8e0:	70 e0       	ldi	r23, 0x00	; 0
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <vfprintf+0x19c>
 8e4:	6f ef       	ldi	r22, 0xFF	; 255
 8e6:	7f ef       	ldi	r23, 0xFF	; 255
 8e8:	c5 01       	movw	r24, r10
 8ea:	2d d1       	rcall	.+602    	; 0xb46 <strnlen_P>
 8ec:	4c 01       	movw	r8, r24
 8ee:	f3 2d       	mov	r31, r3
 8f0:	f0 68       	ori	r31, 0x80	; 128
 8f2:	3f 2e       	mov	r3, r31
 8f4:	82 01       	movw	r16, r4
 8f6:	33 fc       	sbrc	r3, 3
 8f8:	19 c0       	rjmp	.+50     	; 0x92c <vfprintf+0x1e0>
 8fa:	82 2d       	mov	r24, r2
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	88 16       	cp	r8, r24
 900:	99 06       	cpc	r9, r25
 902:	a0 f4       	brcc	.+40     	; 0x92c <vfprintf+0x1e0>
 904:	b6 01       	movw	r22, r12
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	33 d1       	rcall	.+614    	; 0xb72 <fputc>
 90c:	2a 94       	dec	r2
 90e:	f5 cf       	rjmp	.-22     	; 0x8fa <vfprintf+0x1ae>
 910:	f5 01       	movw	r30, r10
 912:	37 fc       	sbrc	r3, 7
 914:	85 91       	lpm	r24, Z+
 916:	37 fe       	sbrs	r3, 7
 918:	81 91       	ld	r24, Z+
 91a:	5f 01       	movw	r10, r30
 91c:	b6 01       	movw	r22, r12
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	28 d1       	rcall	.+592    	; 0xb72 <fputc>
 922:	21 10       	cpse	r2, r1
 924:	2a 94       	dec	r2
 926:	21 e0       	ldi	r18, 0x01	; 1
 928:	82 1a       	sub	r8, r18
 92a:	91 08       	sbc	r9, r1
 92c:	81 14       	cp	r8, r1
 92e:	91 04       	cpc	r9, r1
 930:	79 f7       	brne	.-34     	; 0x910 <vfprintf+0x1c4>
 932:	e1 c0       	rjmp	.+450    	; 0xaf6 <vfprintf+0x3aa>
 934:	84 36       	cpi	r24, 0x64	; 100
 936:	11 f0       	breq	.+4      	; 0x93c <vfprintf+0x1f0>
 938:	89 36       	cpi	r24, 0x69	; 105
 93a:	39 f5       	brne	.+78     	; 0x98a <vfprintf+0x23e>
 93c:	f8 01       	movw	r30, r16
 93e:	37 fe       	sbrs	r3, 7
 940:	07 c0       	rjmp	.+14     	; 0x950 <vfprintf+0x204>
 942:	60 81       	ld	r22, Z
 944:	71 81       	ldd	r23, Z+1	; 0x01
 946:	82 81       	ldd	r24, Z+2	; 0x02
 948:	93 81       	ldd	r25, Z+3	; 0x03
 94a:	0c 5f       	subi	r16, 0xFC	; 252
 94c:	1f 4f       	sbci	r17, 0xFF	; 255
 94e:	08 c0       	rjmp	.+16     	; 0x960 <vfprintf+0x214>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	07 2e       	mov	r0, r23
 956:	00 0c       	add	r0, r0
 958:	88 0b       	sbc	r24, r24
 95a:	99 0b       	sbc	r25, r25
 95c:	0e 5f       	subi	r16, 0xFE	; 254
 95e:	1f 4f       	sbci	r17, 0xFF	; 255
 960:	f3 2d       	mov	r31, r3
 962:	ff 76       	andi	r31, 0x6F	; 111
 964:	3f 2e       	mov	r3, r31
 966:	97 ff       	sbrs	r25, 7
 968:	09 c0       	rjmp	.+18     	; 0x97c <vfprintf+0x230>
 96a:	90 95       	com	r25
 96c:	80 95       	com	r24
 96e:	70 95       	com	r23
 970:	61 95       	neg	r22
 972:	7f 4f       	sbci	r23, 0xFF	; 255
 974:	8f 4f       	sbci	r24, 0xFF	; 255
 976:	9f 4f       	sbci	r25, 0xFF	; 255
 978:	f0 68       	ori	r31, 0x80	; 128
 97a:	3f 2e       	mov	r3, r31
 97c:	2a e0       	ldi	r18, 0x0A	; 10
 97e:	30 e0       	ldi	r19, 0x00	; 0
 980:	a3 01       	movw	r20, r6
 982:	33 d1       	rcall	.+614    	; 0xbea <__ultoa_invert>
 984:	88 2e       	mov	r8, r24
 986:	86 18       	sub	r8, r6
 988:	44 c0       	rjmp	.+136    	; 0xa12 <vfprintf+0x2c6>
 98a:	85 37       	cpi	r24, 0x75	; 117
 98c:	31 f4       	brne	.+12     	; 0x99a <vfprintf+0x24e>
 98e:	23 2d       	mov	r18, r3
 990:	2f 7e       	andi	r18, 0xEF	; 239
 992:	b2 2e       	mov	r11, r18
 994:	2a e0       	ldi	r18, 0x0A	; 10
 996:	30 e0       	ldi	r19, 0x00	; 0
 998:	25 c0       	rjmp	.+74     	; 0x9e4 <vfprintf+0x298>
 99a:	93 2d       	mov	r25, r3
 99c:	99 7f       	andi	r25, 0xF9	; 249
 99e:	b9 2e       	mov	r11, r25
 9a0:	8f 36       	cpi	r24, 0x6F	; 111
 9a2:	c1 f0       	breq	.+48     	; 0x9d4 <vfprintf+0x288>
 9a4:	18 f4       	brcc	.+6      	; 0x9ac <vfprintf+0x260>
 9a6:	88 35       	cpi	r24, 0x58	; 88
 9a8:	79 f0       	breq	.+30     	; 0x9c8 <vfprintf+0x27c>
 9aa:	ae c0       	rjmp	.+348    	; 0xb08 <vfprintf+0x3bc>
 9ac:	80 37       	cpi	r24, 0x70	; 112
 9ae:	19 f0       	breq	.+6      	; 0x9b6 <vfprintf+0x26a>
 9b0:	88 37       	cpi	r24, 0x78	; 120
 9b2:	21 f0       	breq	.+8      	; 0x9bc <vfprintf+0x270>
 9b4:	a9 c0       	rjmp	.+338    	; 0xb08 <vfprintf+0x3bc>
 9b6:	e9 2f       	mov	r30, r25
 9b8:	e0 61       	ori	r30, 0x10	; 16
 9ba:	be 2e       	mov	r11, r30
 9bc:	b4 fe       	sbrs	r11, 4
 9be:	0d c0       	rjmp	.+26     	; 0x9da <vfprintf+0x28e>
 9c0:	fb 2d       	mov	r31, r11
 9c2:	f4 60       	ori	r31, 0x04	; 4
 9c4:	bf 2e       	mov	r11, r31
 9c6:	09 c0       	rjmp	.+18     	; 0x9da <vfprintf+0x28e>
 9c8:	34 fe       	sbrs	r3, 4
 9ca:	0a c0       	rjmp	.+20     	; 0x9e0 <vfprintf+0x294>
 9cc:	29 2f       	mov	r18, r25
 9ce:	26 60       	ori	r18, 0x06	; 6
 9d0:	b2 2e       	mov	r11, r18
 9d2:	06 c0       	rjmp	.+12     	; 0x9e0 <vfprintf+0x294>
 9d4:	28 e0       	ldi	r18, 0x08	; 8
 9d6:	30 e0       	ldi	r19, 0x00	; 0
 9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <vfprintf+0x298>
 9da:	20 e1       	ldi	r18, 0x10	; 16
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	02 c0       	rjmp	.+4      	; 0x9e4 <vfprintf+0x298>
 9e0:	20 e1       	ldi	r18, 0x10	; 16
 9e2:	32 e0       	ldi	r19, 0x02	; 2
 9e4:	f8 01       	movw	r30, r16
 9e6:	b7 fe       	sbrs	r11, 7
 9e8:	07 c0       	rjmp	.+14     	; 0x9f8 <vfprintf+0x2ac>
 9ea:	60 81       	ld	r22, Z
 9ec:	71 81       	ldd	r23, Z+1	; 0x01
 9ee:	82 81       	ldd	r24, Z+2	; 0x02
 9f0:	93 81       	ldd	r25, Z+3	; 0x03
 9f2:	0c 5f       	subi	r16, 0xFC	; 252
 9f4:	1f 4f       	sbci	r17, 0xFF	; 255
 9f6:	06 c0       	rjmp	.+12     	; 0xa04 <vfprintf+0x2b8>
 9f8:	60 81       	ld	r22, Z
 9fa:	71 81       	ldd	r23, Z+1	; 0x01
 9fc:	80 e0       	ldi	r24, 0x00	; 0
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 5f       	subi	r16, 0xFE	; 254
 a02:	1f 4f       	sbci	r17, 0xFF	; 255
 a04:	a3 01       	movw	r20, r6
 a06:	f1 d0       	rcall	.+482    	; 0xbea <__ultoa_invert>
 a08:	88 2e       	mov	r8, r24
 a0a:	86 18       	sub	r8, r6
 a0c:	fb 2d       	mov	r31, r11
 a0e:	ff 77       	andi	r31, 0x7F	; 127
 a10:	3f 2e       	mov	r3, r31
 a12:	36 fe       	sbrs	r3, 6
 a14:	0d c0       	rjmp	.+26     	; 0xa30 <vfprintf+0x2e4>
 a16:	23 2d       	mov	r18, r3
 a18:	2e 7f       	andi	r18, 0xFE	; 254
 a1a:	a2 2e       	mov	r10, r18
 a1c:	89 14       	cp	r8, r9
 a1e:	58 f4       	brcc	.+22     	; 0xa36 <vfprintf+0x2ea>
 a20:	34 fe       	sbrs	r3, 4
 a22:	0b c0       	rjmp	.+22     	; 0xa3a <vfprintf+0x2ee>
 a24:	32 fc       	sbrc	r3, 2
 a26:	09 c0       	rjmp	.+18     	; 0xa3a <vfprintf+0x2ee>
 a28:	83 2d       	mov	r24, r3
 a2a:	8e 7e       	andi	r24, 0xEE	; 238
 a2c:	a8 2e       	mov	r10, r24
 a2e:	05 c0       	rjmp	.+10     	; 0xa3a <vfprintf+0x2ee>
 a30:	b8 2c       	mov	r11, r8
 a32:	a3 2c       	mov	r10, r3
 a34:	03 c0       	rjmp	.+6      	; 0xa3c <vfprintf+0x2f0>
 a36:	b8 2c       	mov	r11, r8
 a38:	01 c0       	rjmp	.+2      	; 0xa3c <vfprintf+0x2f0>
 a3a:	b9 2c       	mov	r11, r9
 a3c:	a4 fe       	sbrs	r10, 4
 a3e:	0f c0       	rjmp	.+30     	; 0xa5e <vfprintf+0x312>
 a40:	fe 01       	movw	r30, r28
 a42:	e8 0d       	add	r30, r8
 a44:	f1 1d       	adc	r31, r1
 a46:	80 81       	ld	r24, Z
 a48:	80 33       	cpi	r24, 0x30	; 48
 a4a:	21 f4       	brne	.+8      	; 0xa54 <vfprintf+0x308>
 a4c:	9a 2d       	mov	r25, r10
 a4e:	99 7e       	andi	r25, 0xE9	; 233
 a50:	a9 2e       	mov	r10, r25
 a52:	09 c0       	rjmp	.+18     	; 0xa66 <vfprintf+0x31a>
 a54:	a2 fe       	sbrs	r10, 2
 a56:	06 c0       	rjmp	.+12     	; 0xa64 <vfprintf+0x318>
 a58:	b3 94       	inc	r11
 a5a:	b3 94       	inc	r11
 a5c:	04 c0       	rjmp	.+8      	; 0xa66 <vfprintf+0x31a>
 a5e:	8a 2d       	mov	r24, r10
 a60:	86 78       	andi	r24, 0x86	; 134
 a62:	09 f0       	breq	.+2      	; 0xa66 <vfprintf+0x31a>
 a64:	b3 94       	inc	r11
 a66:	a3 fc       	sbrc	r10, 3
 a68:	10 c0       	rjmp	.+32     	; 0xa8a <vfprintf+0x33e>
 a6a:	a0 fe       	sbrs	r10, 0
 a6c:	06 c0       	rjmp	.+12     	; 0xa7a <vfprintf+0x32e>
 a6e:	b2 14       	cp	r11, r2
 a70:	80 f4       	brcc	.+32     	; 0xa92 <vfprintf+0x346>
 a72:	28 0c       	add	r2, r8
 a74:	92 2c       	mov	r9, r2
 a76:	9b 18       	sub	r9, r11
 a78:	0d c0       	rjmp	.+26     	; 0xa94 <vfprintf+0x348>
 a7a:	b2 14       	cp	r11, r2
 a7c:	58 f4       	brcc	.+22     	; 0xa94 <vfprintf+0x348>
 a7e:	b6 01       	movw	r22, r12
 a80:	80 e2       	ldi	r24, 0x20	; 32
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	76 d0       	rcall	.+236    	; 0xb72 <fputc>
 a86:	b3 94       	inc	r11
 a88:	f8 cf       	rjmp	.-16     	; 0xa7a <vfprintf+0x32e>
 a8a:	b2 14       	cp	r11, r2
 a8c:	18 f4       	brcc	.+6      	; 0xa94 <vfprintf+0x348>
 a8e:	2b 18       	sub	r2, r11
 a90:	02 c0       	rjmp	.+4      	; 0xa96 <vfprintf+0x34a>
 a92:	98 2c       	mov	r9, r8
 a94:	21 2c       	mov	r2, r1
 a96:	a4 fe       	sbrs	r10, 4
 a98:	0f c0       	rjmp	.+30     	; 0xab8 <vfprintf+0x36c>
 a9a:	b6 01       	movw	r22, r12
 a9c:	80 e3       	ldi	r24, 0x30	; 48
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	68 d0       	rcall	.+208    	; 0xb72 <fputc>
 aa2:	a2 fe       	sbrs	r10, 2
 aa4:	16 c0       	rjmp	.+44     	; 0xad2 <vfprintf+0x386>
 aa6:	a1 fc       	sbrc	r10, 1
 aa8:	03 c0       	rjmp	.+6      	; 0xab0 <vfprintf+0x364>
 aaa:	88 e7       	ldi	r24, 0x78	; 120
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	02 c0       	rjmp	.+4      	; 0xab4 <vfprintf+0x368>
 ab0:	88 e5       	ldi	r24, 0x58	; 88
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	b6 01       	movw	r22, r12
 ab6:	0c c0       	rjmp	.+24     	; 0xad0 <vfprintf+0x384>
 ab8:	8a 2d       	mov	r24, r10
 aba:	86 78       	andi	r24, 0x86	; 134
 abc:	51 f0       	breq	.+20     	; 0xad2 <vfprintf+0x386>
 abe:	a1 fe       	sbrs	r10, 1
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x37a>
 ac2:	8b e2       	ldi	r24, 0x2B	; 43
 ac4:	01 c0       	rjmp	.+2      	; 0xac8 <vfprintf+0x37c>
 ac6:	80 e2       	ldi	r24, 0x20	; 32
 ac8:	a7 fc       	sbrc	r10, 7
 aca:	8d e2       	ldi	r24, 0x2D	; 45
 acc:	b6 01       	movw	r22, r12
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	50 d0       	rcall	.+160    	; 0xb72 <fputc>
 ad2:	89 14       	cp	r8, r9
 ad4:	30 f4       	brcc	.+12     	; 0xae2 <vfprintf+0x396>
 ad6:	b6 01       	movw	r22, r12
 ad8:	80 e3       	ldi	r24, 0x30	; 48
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	4a d0       	rcall	.+148    	; 0xb72 <fputc>
 ade:	9a 94       	dec	r9
 ae0:	f8 cf       	rjmp	.-16     	; 0xad2 <vfprintf+0x386>
 ae2:	8a 94       	dec	r8
 ae4:	f3 01       	movw	r30, r6
 ae6:	e8 0d       	add	r30, r8
 ae8:	f1 1d       	adc	r31, r1
 aea:	80 81       	ld	r24, Z
 aec:	b6 01       	movw	r22, r12
 aee:	90 e0       	ldi	r25, 0x00	; 0
 af0:	40 d0       	rcall	.+128    	; 0xb72 <fputc>
 af2:	81 10       	cpse	r8, r1
 af4:	f6 cf       	rjmp	.-20     	; 0xae2 <vfprintf+0x396>
 af6:	22 20       	and	r2, r2
 af8:	09 f4       	brne	.+2      	; 0xafc <vfprintf+0x3b0>
 afa:	4e ce       	rjmp	.-868    	; 0x798 <vfprintf+0x4c>
 afc:	b6 01       	movw	r22, r12
 afe:	80 e2       	ldi	r24, 0x20	; 32
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	37 d0       	rcall	.+110    	; 0xb72 <fputc>
 b04:	2a 94       	dec	r2
 b06:	f7 cf       	rjmp	.-18     	; 0xaf6 <vfprintf+0x3aa>
 b08:	f6 01       	movw	r30, r12
 b0a:	86 81       	ldd	r24, Z+6	; 0x06
 b0c:	97 81       	ldd	r25, Z+7	; 0x07
 b0e:	02 c0       	rjmp	.+4      	; 0xb14 <vfprintf+0x3c8>
 b10:	8f ef       	ldi	r24, 0xFF	; 255
 b12:	9f ef       	ldi	r25, 0xFF	; 255
 b14:	2b 96       	adiw	r28, 0x0b	; 11
 b16:	0f b6       	in	r0, 0x3f	; 63
 b18:	f8 94       	cli
 b1a:	de bf       	out	0x3e, r29	; 62
 b1c:	0f be       	out	0x3f, r0	; 63
 b1e:	cd bf       	out	0x3d, r28	; 61
 b20:	df 91       	pop	r29
 b22:	cf 91       	pop	r28
 b24:	1f 91       	pop	r17
 b26:	0f 91       	pop	r16
 b28:	ff 90       	pop	r15
 b2a:	ef 90       	pop	r14
 b2c:	df 90       	pop	r13
 b2e:	cf 90       	pop	r12
 b30:	bf 90       	pop	r11
 b32:	af 90       	pop	r10
 b34:	9f 90       	pop	r9
 b36:	8f 90       	pop	r8
 b38:	7f 90       	pop	r7
 b3a:	6f 90       	pop	r6
 b3c:	5f 90       	pop	r5
 b3e:	4f 90       	pop	r4
 b40:	3f 90       	pop	r3
 b42:	2f 90       	pop	r2
 b44:	08 95       	ret

00000b46 <strnlen_P>:
 b46:	fc 01       	movw	r30, r24
 b48:	05 90       	lpm	r0, Z+
 b4a:	61 50       	subi	r22, 0x01	; 1
 b4c:	70 40       	sbci	r23, 0x00	; 0
 b4e:	01 10       	cpse	r0, r1
 b50:	d8 f7       	brcc	.-10     	; 0xb48 <strnlen_P+0x2>
 b52:	80 95       	com	r24
 b54:	90 95       	com	r25
 b56:	8e 0f       	add	r24, r30
 b58:	9f 1f       	adc	r25, r31
 b5a:	08 95       	ret

00000b5c <strnlen>:
 b5c:	fc 01       	movw	r30, r24
 b5e:	61 50       	subi	r22, 0x01	; 1
 b60:	70 40       	sbci	r23, 0x00	; 0
 b62:	01 90       	ld	r0, Z+
 b64:	01 10       	cpse	r0, r1
 b66:	d8 f7       	brcc	.-10     	; 0xb5e <strnlen+0x2>
 b68:	80 95       	com	r24
 b6a:	90 95       	com	r25
 b6c:	8e 0f       	add	r24, r30
 b6e:	9f 1f       	adc	r25, r31
 b70:	08 95       	ret

00000b72 <fputc>:
 b72:	0f 93       	push	r16
 b74:	1f 93       	push	r17
 b76:	cf 93       	push	r28
 b78:	df 93       	push	r29
 b7a:	fb 01       	movw	r30, r22
 b7c:	23 81       	ldd	r18, Z+3	; 0x03
 b7e:	21 fd       	sbrc	r18, 1
 b80:	03 c0       	rjmp	.+6      	; 0xb88 <fputc+0x16>
 b82:	8f ef       	ldi	r24, 0xFF	; 255
 b84:	9f ef       	ldi	r25, 0xFF	; 255
 b86:	2c c0       	rjmp	.+88     	; 0xbe0 <fputc+0x6e>
 b88:	22 ff       	sbrs	r18, 2
 b8a:	16 c0       	rjmp	.+44     	; 0xbb8 <fputc+0x46>
 b8c:	46 81       	ldd	r20, Z+6	; 0x06
 b8e:	57 81       	ldd	r21, Z+7	; 0x07
 b90:	24 81       	ldd	r18, Z+4	; 0x04
 b92:	35 81       	ldd	r19, Z+5	; 0x05
 b94:	42 17       	cp	r20, r18
 b96:	53 07       	cpc	r21, r19
 b98:	44 f4       	brge	.+16     	; 0xbaa <fputc+0x38>
 b9a:	a0 81       	ld	r26, Z
 b9c:	b1 81       	ldd	r27, Z+1	; 0x01
 b9e:	9d 01       	movw	r18, r26
 ba0:	2f 5f       	subi	r18, 0xFF	; 255
 ba2:	3f 4f       	sbci	r19, 0xFF	; 255
 ba4:	31 83       	std	Z+1, r19	; 0x01
 ba6:	20 83       	st	Z, r18
 ba8:	8c 93       	st	X, r24
 baa:	26 81       	ldd	r18, Z+6	; 0x06
 bac:	37 81       	ldd	r19, Z+7	; 0x07
 bae:	2f 5f       	subi	r18, 0xFF	; 255
 bb0:	3f 4f       	sbci	r19, 0xFF	; 255
 bb2:	37 83       	std	Z+7, r19	; 0x07
 bb4:	26 83       	std	Z+6, r18	; 0x06
 bb6:	14 c0       	rjmp	.+40     	; 0xbe0 <fputc+0x6e>
 bb8:	8b 01       	movw	r16, r22
 bba:	ec 01       	movw	r28, r24
 bbc:	fb 01       	movw	r30, r22
 bbe:	00 84       	ldd	r0, Z+8	; 0x08
 bc0:	f1 85       	ldd	r31, Z+9	; 0x09
 bc2:	e0 2d       	mov	r30, r0
 bc4:	19 95       	eicall
 bc6:	89 2b       	or	r24, r25
 bc8:	e1 f6       	brne	.-72     	; 0xb82 <fputc+0x10>
 bca:	d8 01       	movw	r26, r16
 bcc:	16 96       	adiw	r26, 0x06	; 6
 bce:	8d 91       	ld	r24, X+
 bd0:	9c 91       	ld	r25, X
 bd2:	17 97       	sbiw	r26, 0x07	; 7
 bd4:	01 96       	adiw	r24, 0x01	; 1
 bd6:	17 96       	adiw	r26, 0x07	; 7
 bd8:	9c 93       	st	X, r25
 bda:	8e 93       	st	-X, r24
 bdc:	16 97       	sbiw	r26, 0x06	; 6
 bde:	ce 01       	movw	r24, r28
 be0:	df 91       	pop	r29
 be2:	cf 91       	pop	r28
 be4:	1f 91       	pop	r17
 be6:	0f 91       	pop	r16
 be8:	08 95       	ret

00000bea <__ultoa_invert>:
 bea:	fa 01       	movw	r30, r20
 bec:	aa 27       	eor	r26, r26
 bee:	28 30       	cpi	r18, 0x08	; 8
 bf0:	51 f1       	breq	.+84     	; 0xc46 <__ultoa_invert+0x5c>
 bf2:	20 31       	cpi	r18, 0x10	; 16
 bf4:	81 f1       	breq	.+96     	; 0xc56 <__ultoa_invert+0x6c>
 bf6:	e8 94       	clt
 bf8:	6f 93       	push	r22
 bfa:	6e 7f       	andi	r22, 0xFE	; 254
 bfc:	6e 5f       	subi	r22, 0xFE	; 254
 bfe:	7f 4f       	sbci	r23, 0xFF	; 255
 c00:	8f 4f       	sbci	r24, 0xFF	; 255
 c02:	9f 4f       	sbci	r25, 0xFF	; 255
 c04:	af 4f       	sbci	r26, 0xFF	; 255
 c06:	b1 e0       	ldi	r27, 0x01	; 1
 c08:	3e d0       	rcall	.+124    	; 0xc86 <__ultoa_invert+0x9c>
 c0a:	b4 e0       	ldi	r27, 0x04	; 4
 c0c:	3c d0       	rcall	.+120    	; 0xc86 <__ultoa_invert+0x9c>
 c0e:	67 0f       	add	r22, r23
 c10:	78 1f       	adc	r23, r24
 c12:	89 1f       	adc	r24, r25
 c14:	9a 1f       	adc	r25, r26
 c16:	a1 1d       	adc	r26, r1
 c18:	68 0f       	add	r22, r24
 c1a:	79 1f       	adc	r23, r25
 c1c:	8a 1f       	adc	r24, r26
 c1e:	91 1d       	adc	r25, r1
 c20:	a1 1d       	adc	r26, r1
 c22:	6a 0f       	add	r22, r26
 c24:	71 1d       	adc	r23, r1
 c26:	81 1d       	adc	r24, r1
 c28:	91 1d       	adc	r25, r1
 c2a:	a1 1d       	adc	r26, r1
 c2c:	20 d0       	rcall	.+64     	; 0xc6e <__ultoa_invert+0x84>
 c2e:	09 f4       	brne	.+2      	; 0xc32 <__ultoa_invert+0x48>
 c30:	68 94       	set
 c32:	3f 91       	pop	r19
 c34:	2a e0       	ldi	r18, 0x0A	; 10
 c36:	26 9f       	mul	r18, r22
 c38:	11 24       	eor	r1, r1
 c3a:	30 19       	sub	r19, r0
 c3c:	30 5d       	subi	r19, 0xD0	; 208
 c3e:	31 93       	st	Z+, r19
 c40:	de f6       	brtc	.-74     	; 0xbf8 <__ultoa_invert+0xe>
 c42:	cf 01       	movw	r24, r30
 c44:	08 95       	ret
 c46:	46 2f       	mov	r20, r22
 c48:	47 70       	andi	r20, 0x07	; 7
 c4a:	40 5d       	subi	r20, 0xD0	; 208
 c4c:	41 93       	st	Z+, r20
 c4e:	b3 e0       	ldi	r27, 0x03	; 3
 c50:	0f d0       	rcall	.+30     	; 0xc70 <__ultoa_invert+0x86>
 c52:	c9 f7       	brne	.-14     	; 0xc46 <__ultoa_invert+0x5c>
 c54:	f6 cf       	rjmp	.-20     	; 0xc42 <__ultoa_invert+0x58>
 c56:	46 2f       	mov	r20, r22
 c58:	4f 70       	andi	r20, 0x0F	; 15
 c5a:	40 5d       	subi	r20, 0xD0	; 208
 c5c:	4a 33       	cpi	r20, 0x3A	; 58
 c5e:	18 f0       	brcs	.+6      	; 0xc66 <__ultoa_invert+0x7c>
 c60:	49 5d       	subi	r20, 0xD9	; 217
 c62:	31 fd       	sbrc	r19, 1
 c64:	40 52       	subi	r20, 0x20	; 32
 c66:	41 93       	st	Z+, r20
 c68:	02 d0       	rcall	.+4      	; 0xc6e <__ultoa_invert+0x84>
 c6a:	a9 f7       	brne	.-22     	; 0xc56 <__ultoa_invert+0x6c>
 c6c:	ea cf       	rjmp	.-44     	; 0xc42 <__ultoa_invert+0x58>
 c6e:	b4 e0       	ldi	r27, 0x04	; 4
 c70:	a6 95       	lsr	r26
 c72:	97 95       	ror	r25
 c74:	87 95       	ror	r24
 c76:	77 95       	ror	r23
 c78:	67 95       	ror	r22
 c7a:	ba 95       	dec	r27
 c7c:	c9 f7       	brne	.-14     	; 0xc70 <__ultoa_invert+0x86>
 c7e:	00 97       	sbiw	r24, 0x00	; 0
 c80:	61 05       	cpc	r22, r1
 c82:	71 05       	cpc	r23, r1
 c84:	08 95       	ret
 c86:	9b 01       	movw	r18, r22
 c88:	ac 01       	movw	r20, r24
 c8a:	0a 2e       	mov	r0, r26
 c8c:	06 94       	lsr	r0
 c8e:	57 95       	ror	r21
 c90:	47 95       	ror	r20
 c92:	37 95       	ror	r19
 c94:	27 95       	ror	r18
 c96:	ba 95       	dec	r27
 c98:	c9 f7       	brne	.-14     	; 0xc8c <__ultoa_invert+0xa2>
 c9a:	62 0f       	add	r22, r18
 c9c:	73 1f       	adc	r23, r19
 c9e:	84 1f       	adc	r24, r20
 ca0:	95 1f       	adc	r25, r21
 ca2:	a0 1d       	adc	r26, r0
 ca4:	08 95       	ret

00000ca6 <_exit>:
 ca6:	f8 94       	cli

00000ca8 <__stop_program>:
 ca8:	ff cf       	rjmp	.-2      	; 0xca8 <__stop_program>
