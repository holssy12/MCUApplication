
projectADCNeoPixel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800200  00000906  0000099a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000906  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  0080020e  0080020e  000009a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017fb  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4d  00000000  00000000  000022df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000929  00000000  00000000  0000322c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00003b58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a5  00000000  00000000  00003cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d5a  00000000  00000000  00004461  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000051bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e0       	ldi	r30, 0x06	; 6
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 30       	cpi	r26, 0x0E	; 14
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e0       	ldi	r26, 0x0E	; 14
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 34       	cpi	r26, 0x4E	; 78
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	bb d0       	rcall	.+374    	; 0x296 <main>
 120:	f0 c3       	rjmp	.+2016   	; 0x902 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <GetADCData>:
void tx_str(unsigned char *txStr, int len) {
	int i = 0;
	for(i=0; i<len; i++) {
		tx_char(txStr[i]);
	}
}
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	1f 92       	push	r1
 12a:	1f 92       	push	r1
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 83       	st	Z, r24
 136:	80 81       	ld	r24, Z
 138:	80 64       	ori	r24, 0x40	; 64
 13a:	80 83       	st	Z, r24
 13c:	ea e7       	ldi	r30, 0x7A	; 122
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	87 e8       	ldi	r24, 0x87	; 135
 142:	80 83       	st	Z, r24
 144:	80 81       	ld	r24, Z
 146:	80 64       	ori	r24, 0x40	; 64
 148:	80 83       	st	Z, r24
 14a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 14e:	84 ff       	sbrs	r24, 4
 150:	fc cf       	rjmp	.-8      	; 0x14a <GetADCData+0x26>
 152:	80 eb       	ldi	r24, 0xB0	; 176
 154:	94 e0       	ldi	r25, 0x04	; 4
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <GetADCData+0x32>
 15a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 15e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	98 2f       	mov	r25, r24
 166:	88 27       	eor	r24, r24
 168:	82 0f       	add	r24, r18
 16a:	91 1d       	adc	r25, r1
 16c:	9a 83       	std	Y+2, r25	; 0x02
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 174:	89 81       	ldd	r24, Y+1	; 0x01
 176:	9a 81       	ldd	r25, Y+2	; 0x02
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <neo_shift>:
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	2e c0       	rjmp	.+92     	; 0x1e4 <neo_shift+0x62>
 188:	ac 01       	movw	r20, r24
 18a:	00 24       	eor	r0, r0
 18c:	44 0f       	add	r20, r20
 18e:	55 1f       	adc	r21, r21
 190:	00 1c       	adc	r0, r0
 192:	44 0f       	add	r20, r20
 194:	55 1f       	adc	r21, r21
 196:	00 1c       	adc	r0, r0
 198:	45 2f       	mov	r20, r21
 19a:	50 2d       	mov	r21, r0
 19c:	42 17       	cp	r20, r18
 19e:	53 07       	cpc	r21, r19
 1a0:	a0 f0       	brcs	.+40     	; 0x1ca <neo_shift+0x48>
 1a2:	f9 01       	movw	r30, r18
 1a4:	ee 0f       	add	r30, r30
 1a6:	ff 1f       	adc	r31, r31
 1a8:	ee 0f       	add	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	e2 5f       	subi	r30, 0xF2	; 242
 1ae:	fd 4f       	sbci	r31, 0xFD	; 253
 1b0:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1b4:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 1b8:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 1bc:	70 91 03 02 	lds	r23, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 1c0:	40 83       	st	Z, r20
 1c2:	51 83       	std	Z+1, r21	; 0x01
 1c4:	62 83       	std	Z+2, r22	; 0x02
 1c6:	73 83       	std	Z+3, r23	; 0x03
 1c8:	0b c0       	rjmp	.+22     	; 0x1e0 <neo_shift+0x5e>
 1ca:	f9 01       	movw	r30, r18
 1cc:	ee 0f       	add	r30, r30
 1ce:	ff 1f       	adc	r31, r31
 1d0:	ee 0f       	add	r30, r30
 1d2:	ff 1f       	adc	r31, r31
 1d4:	e2 5f       	subi	r30, 0xF2	; 242
 1d6:	fd 4f       	sbci	r31, 0xFD	; 253
 1d8:	10 82       	st	Z, r1
 1da:	11 82       	std	Z+1, r1	; 0x01
 1dc:	12 82       	std	Z+2, r1	; 0x02
 1de:	13 82       	std	Z+3, r1	; 0x03
 1e0:	2f 5f       	subi	r18, 0xFF	; 255
 1e2:	3f 4f       	sbci	r19, 0xFF	; 255
 1e4:	20 31       	cpi	r18, 0x10	; 16
 1e6:	31 05       	cpc	r19, r1
 1e8:	7c f2       	brlt	.-98     	; 0x188 <neo_shift+0x6>
 1ea:	40 e1       	ldi	r20, 0x10	; 16
 1ec:	50 e0       	ldi	r21, 0x00	; 0
 1ee:	6e e0       	ldi	r22, 0x0E	; 14
 1f0:	72 e0       	ldi	r23, 0x02	; 2
 1f2:	86 e0       	ldi	r24, 0x06	; 6
 1f4:	76 c0       	rjmp	.+236    	; 0x2e2 <ws2812_setleds_rgbw_PB>
 1f6:	08 95       	ret

000001f8 <tx_char>:
 1f8:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 1fc:	95 ff       	sbrs	r25, 5
 1fe:	fc cf       	rjmp	.-8      	; 0x1f8 <tx_char>
 200:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 204:	08 95       	ret

00000206 <myPrintf>:

void myPrintf(char *fmt,...) {
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	c0 58       	subi	r28, 0x80	; 128
 214:	d1 09       	sbc	r29, r1
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	cd bf       	out	0x3d, r28	; 61
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	08 c0       	rjmp	.+16     	; 0x234 <myPrintf+0x2e>
		sText[i] = 0;
 224:	e1 e0       	ldi	r30, 0x01	; 1
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	ec 0f       	add	r30, r28
 22a:	fd 1f       	adc	r31, r29
 22c:	e8 0f       	add	r30, r24
 22e:	f1 1d       	adc	r31, r1
 230:	10 82       	st	Z, r1
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 232:	8f 5f       	subi	r24, 0xFF	; 255
 234:	88 23       	and	r24, r24
 236:	b4 f7       	brge	.-20     	; 0x224 <myPrintf+0x1e>
		sText[i] = 0;
	}
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
 238:	ae 01       	movw	r20, r28
 23a:	46 57       	subi	r20, 0x76	; 118
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	c8 57       	subi	r28, 0x78	; 120
 240:	df 4f       	sbci	r29, 0xFF	; 255
 242:	68 81       	ld	r22, Y
 244:	79 81       	ldd	r23, Y+1	; 0x01
 246:	c8 58       	subi	r28, 0x88	; 136
 248:	d0 40       	sbci	r29, 0x00	; 0
 24a:	8e 01       	movw	r16, r28
 24c:	0f 5f       	subi	r16, 0xFF	; 255
 24e:	1f 4f       	sbci	r17, 0xFF	; 255
 250:	c8 01       	movw	r24, r16
 252:	82 d0       	rcall	.+260    	; 0x358 <vsprintf>
	va_end(arg_ptr);
	
	len = strlen(sText);
 254:	f8 01       	movw	r30, r16
 256:	01 90       	ld	r0, Z+
 258:	00 20       	and	r0, r0
 25a:	e9 f7       	brne	.-6      	; 0x256 <myPrintf+0x50>
 25c:	31 97       	sbiw	r30, 0x01	; 1
 25e:	8e 2f       	mov	r24, r30
 260:	80 1b       	sub	r24, r16
 262:	08 2f       	mov	r16, r24
	for(i=0; i<len; i++) {
 264:	10 e0       	ldi	r17, 0x00	; 0
 266:	09 c0       	rjmp	.+18     	; 0x27a <myPrintf+0x74>
		tx_char(sText[i]);
 268:	e1 e0       	ldi	r30, 0x01	; 1
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	ec 0f       	add	r30, r28
 26e:	fd 1f       	adc	r31, r29
 270:	e1 0f       	add	r30, r17
 272:	f1 1d       	adc	r31, r1
 274:	80 81       	ld	r24, Z
 276:	c0 df       	rcall	.-128    	; 0x1f8 <tx_char>
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
	va_end(arg_ptr);
	
	len = strlen(sText);
	for(i=0; i<len; i++) {
 278:	1f 5f       	subi	r17, 0xFF	; 255
 27a:	10 17       	cp	r17, r16
 27c:	a8 f3       	brcs	.-22     	; 0x268 <myPrintf+0x62>
		tx_char(sText[i]);
	}
}
 27e:	c0 58       	subi	r28, 0x80	; 128
 280:	df 4f       	sbci	r29, 0xFF	; 255
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	1f 91       	pop	r17
 292:	0f 91       	pop	r16
 294:	08 95       	ret

00000296 <main>:

int main(void)
{
    /* Replace with your application code */
	
	UBRR1H = (unsigned char) (BAUD_9600 >> 8);
 296:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
	UBRR1L = (unsigned char) BAUD_9600;
 29a:	87 e6       	ldi	r24, 0x67	; 103
 29c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
	UCSR1B = (1 << TXEN1) | (1 << RXEN1);
 2a0:	88 e1       	ldi	r24, 0x18	; 24
 2a2:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
	UCSR1C = (1 << UCSZ11) | (1 << UCSZ10);
 2a6:	86 e0       	ldi	r24, 0x06	; 6
 2a8:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
	
    while (1)
    {	
		unsigned int adc_value = GetADCData(0);	
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	3a df       	rcall	.-396    	; 0x124 <GetADCData>
 2b0:	c8 2f       	mov	r28, r24
 2b2:	d9 2f       	mov	r29, r25
		neo_shift(adc_value);
 2b4:	66 df       	rcall	.-308    	; 0x182 <neo_shift>
 2b6:	88 ee       	ldi	r24, 0xE8	; 232
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2b8:	93 e0       	ldi	r25, 0x03	; 3
 2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <main+0x30>
 2bc:	e0 e9       	ldi	r30, 0x90	; 144
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	31 97       	sbiw	r30, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <main+0x2a>
 2c4:	01 97       	sbiw	r24, 0x01	; 1
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2c6:	00 97       	sbiw	r24, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2c8:	c9 f7       	brne	.-14     	; 0x2bc <main+0x26>
 2ca:	df 93       	push	r29
		
		_delay_ms(100);
		
		myPrintf("ADC : %d\n", adc_value);
 2cc:	cf 93       	push	r28
 2ce:	84 e0       	ldi	r24, 0x04	; 4
 2d0:	92 e0       	ldi	r25, 0x02	; 2
 2d2:	9f 93       	push	r25
 2d4:	8f 93       	push	r24
 2d6:	97 df       	rcall	.-210    	; 0x206 <myPrintf>
 2d8:	0f 90       	pop	r0
    }
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	e5 cf       	rjmp	.-54     	; 0x2ac <main+0x16>

000002e2 <ws2812_setleds_rgbw_PB>:
 2e2:	fb 01       	movw	r30, r22
	ws2812_sendarray_mask_PA((uint8_t*)ledarray,leds<<2,0x01<<pin);
	_delay_us(ws2812_resettime);
}
void inline ws2812_setleds_rgbw_PB(uint8_t pin,rgbw_color *ledarray, uint16_t leds)
{
	ws2812_sendarray_mask_PB((uint8_t*)ledarray,leds<<2,0x01<<pin);
 2e4:	21 e0       	ldi	r18, 0x01	; 1
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	b9 01       	movw	r22, r18
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <ws2812_setleds_rgbw_PB+0xe>
 2ec:	66 0f       	add	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	8a 95       	dec	r24
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <ws2812_setleds_rgbw_PB+0xa>
 2f4:	cb 01       	movw	r24, r22
 2f6:	44 0f       	add	r20, r20
 2f8:	55 1f       	adc	r21, r21
 2fa:	44 0f       	add	r20, r20
 2fc:	55 1f       	adc	r21, r21
void inline ws2812_sendarray_mask_PB(uint8_t *data,uint16_t datlen,uint8_t maskhi)
{
	uint8_t curbyte,ctr,masklo;
	uint8_t sreg_prev;

	DDRB |= maskhi; // Enable output
 2fe:	94 b1       	in	r25, 0x04	; 4
 300:	98 2b       	or	r25, r24
 302:	94 b9       	out	0x04, r25	; 4
	masklo	=~maskhi&PORTB;
 304:	95 b1       	in	r25, 0x05	; 5
 306:	78 2f       	mov	r23, r24
 308:	70 95       	com	r23
 30a:	79 23       	and	r23, r25
	maskhi |=        PORTB;
 30c:	65 b1       	in	r22, 0x05	; 5
 30e:	68 2b       	or	r22, r24
	
	sreg_prev=SREG;
 310:	af b7       	in	r26, 0x3f	; 63
 312:	16 c0       	rjmp	.+44     	; 0x340 <loop142+0x20>
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
		curbyte=*data++;
 314:	9f 01       	movw	r18, r30
 316:	2f 5f       	subi	r18, 0xFF	; 255
 318:	3f 4f       	sbci	r19, 0xFF	; 255
 31a:	40 81       	ld	r20, Z
		
		asm volatile(
 31c:	58 e0       	ldi	r21, 0x08	; 8
 31e:	e8 94       	clt

00000320 <loop142>:
 320:	65 b9       	out	0x05, r22	; 5
 322:	00 00       	nop
 324:	06 f4       	brtc	.+0      	; 0x326 <loop142+0x6>
 326:	47 ff       	sbrs	r20, 7
 328:	75 b9       	out	0x05, r23	; 5
 32a:	44 0f       	add	r20, r20
 32c:	00 00       	nop
 32e:	06 f4       	brtc	.+0      	; 0x330 <loop142+0x10>
 330:	06 f4       	brtc	.+0      	; 0x332 <loop142+0x12>
 332:	06 f4       	brtc	.+0      	; 0x334 <loop142+0x14>
 334:	75 b9       	out	0x05, r23	; 5
 336:	06 f4       	brtc	.+0      	; 0x338 <loop142+0x18>
 338:	5a 95       	dec	r21
 33a:	91 f7       	brne	.-28     	; 0x320 <loop142>
	sreg_prev=SREG;
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
 33c:	ac 01       	movw	r20, r24
		curbyte=*data++;
 33e:	f9 01       	movw	r30, r18
	sreg_prev=SREG;
	#ifdef interrupt_is_disabled
	cli();
	#endif

	while (datlen--) {
 340:	ca 01       	movw	r24, r20
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	45 2b       	or	r20, r21
 346:	31 f7       	brne	.-52     	; 0x314 <ws2812_setleds_rgbw_PB+0x32>
		:	"=&d" (ctr)
		:	"r" (curbyte), "I" (_SFR_IO_ADDR(PORTB)), "r" (maskhi), "r" (masklo)
		);
	}
	
	SREG=sreg_prev;
 348:	af bf       	out	0x3f, r26	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	8f e8       	ldi	r24, 0x8F	; 143
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <loop142+0x2e>
 352:	00 c0       	rjmp	.+0      	; 0x354 <loop142+0x34>
 354:	00 00       	nop
 356:	08 95       	ret

00000358 <vsprintf>:
 358:	0f 93       	push	r16
 35a:	1f 93       	push	r17
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	cd b7       	in	r28, 0x3d	; 61
 362:	de b7       	in	r29, 0x3e	; 62
 364:	2e 97       	sbiw	r28, 0x0e	; 14
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
 370:	8c 01       	movw	r16, r24
 372:	86 e0       	ldi	r24, 0x06	; 6
 374:	8c 83       	std	Y+4, r24	; 0x04
 376:	1a 83       	std	Y+2, r17	; 0x02
 378:	09 83       	std	Y+1, r16	; 0x01
 37a:	8f ef       	ldi	r24, 0xFF	; 255
 37c:	9f e7       	ldi	r25, 0x7F	; 127
 37e:	9e 83       	std	Y+6, r25	; 0x06
 380:	8d 83       	std	Y+5, r24	; 0x05
 382:	ce 01       	movw	r24, r28
 384:	01 96       	adiw	r24, 0x01	; 1
 386:	10 d0       	rcall	.+32     	; 0x3a8 <vfprintf>
 388:	ef 81       	ldd	r30, Y+7	; 0x07
 38a:	f8 85       	ldd	r31, Y+8	; 0x08
 38c:	e0 0f       	add	r30, r16
 38e:	f1 1f       	adc	r31, r17
 390:	10 82       	st	Z, r1
 392:	2e 96       	adiw	r28, 0x0e	; 14
 394:	0f b6       	in	r0, 0x3f	; 63
 396:	f8 94       	cli
 398:	de bf       	out	0x3e, r29	; 62
 39a:	0f be       	out	0x3f, r0	; 63
 39c:	cd bf       	out	0x3d, r28	; 61
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	08 95       	ret

000003a8 <vfprintf>:
 3a8:	2f 92       	push	r2
 3aa:	3f 92       	push	r3
 3ac:	4f 92       	push	r4
 3ae:	5f 92       	push	r5
 3b0:	6f 92       	push	r6
 3b2:	7f 92       	push	r7
 3b4:	8f 92       	push	r8
 3b6:	9f 92       	push	r9
 3b8:	af 92       	push	r10
 3ba:	bf 92       	push	r11
 3bc:	cf 92       	push	r12
 3be:	df 92       	push	r13
 3c0:	ef 92       	push	r14
 3c2:	ff 92       	push	r15
 3c4:	0f 93       	push	r16
 3c6:	1f 93       	push	r17
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	cd b7       	in	r28, 0x3d	; 61
 3ce:	de b7       	in	r29, 0x3e	; 62
 3d0:	2b 97       	sbiw	r28, 0x0b	; 11
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	6c 01       	movw	r12, r24
 3de:	7b 01       	movw	r14, r22
 3e0:	8a 01       	movw	r16, r20
 3e2:	fc 01       	movw	r30, r24
 3e4:	17 82       	std	Z+7, r1	; 0x07
 3e6:	16 82       	std	Z+6, r1	; 0x06
 3e8:	83 81       	ldd	r24, Z+3	; 0x03
 3ea:	81 ff       	sbrs	r24, 1
 3ec:	bf c1       	rjmp	.+894    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	3c 01       	movw	r6, r24
 3f4:	f6 01       	movw	r30, r12
 3f6:	93 81       	ldd	r25, Z+3	; 0x03
 3f8:	f7 01       	movw	r30, r14
 3fa:	93 fd       	sbrc	r25, 3
 3fc:	85 91       	lpm	r24, Z+
 3fe:	93 ff       	sbrs	r25, 3
 400:	81 91       	ld	r24, Z+
 402:	7f 01       	movw	r14, r30
 404:	88 23       	and	r24, r24
 406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	ad c1       	rjmp	.+858    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 40a:	85 32       	cpi	r24, 0x25	; 37
 40c:	39 f4       	brne	.+14     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40e:	93 fd       	sbrc	r25, 3
 410:	85 91       	lpm	r24, Z+
 412:	93 ff       	sbrs	r25, 3
 414:	81 91       	ld	r24, Z+
 416:	7f 01       	movw	r14, r30
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	21 f4       	brne	.+8      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41c:	b6 01       	movw	r22, r12
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	d6 d1       	rcall	.+940    	; 0x7ce <fputc>
 422:	e8 cf       	rjmp	.-48     	; 0x3f4 <vfprintf+0x4c>
 424:	91 2c       	mov	r9, r1
 426:	21 2c       	mov	r2, r1
 428:	31 2c       	mov	r3, r1
 42a:	ff e1       	ldi	r31, 0x1F	; 31
 42c:	f3 15       	cp	r31, r3
 42e:	d8 f0       	brcs	.+54     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 430:	8b 32       	cpi	r24, 0x2B	; 43
 432:	79 f0       	breq	.+30     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 434:	38 f4       	brcc	.+14     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 436:	80 32       	cpi	r24, 0x20	; 32
 438:	79 f0       	breq	.+30     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 43a:	83 32       	cpi	r24, 0x23	; 35
 43c:	a1 f4       	brne	.+40     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 43e:	23 2d       	mov	r18, r3
 440:	20 61       	ori	r18, 0x10	; 16
 442:	1d c0       	rjmp	.+58     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 444:	8d 32       	cpi	r24, 0x2D	; 45
 446:	61 f0       	breq	.+24     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 448:	80 33       	cpi	r24, 0x30	; 48
 44a:	69 f4       	brne	.+26     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 44c:	23 2d       	mov	r18, r3
 44e:	21 60       	ori	r18, 0x01	; 1
 450:	16 c0       	rjmp	.+44     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 452:	83 2d       	mov	r24, r3
 454:	82 60       	ori	r24, 0x02	; 2
 456:	38 2e       	mov	r3, r24
 458:	e3 2d       	mov	r30, r3
 45a:	e4 60       	ori	r30, 0x04	; 4
 45c:	3e 2e       	mov	r3, r30
 45e:	2a c0       	rjmp	.+84     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 460:	f3 2d       	mov	r31, r3
 462:	f8 60       	ori	r31, 0x08	; 8
 464:	1d c0       	rjmp	.+58     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 466:	37 fc       	sbrc	r3, 7
 468:	2d c0       	rjmp	.+90     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 46a:	20 ed       	ldi	r18, 0xD0	; 208
 46c:	28 0f       	add	r18, r24
 46e:	2a 30       	cpi	r18, 0x0A	; 10
 470:	40 f0       	brcs	.+16     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 472:	8e 32       	cpi	r24, 0x2E	; 46
 474:	b9 f4       	brne	.+46     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 476:	36 fc       	sbrc	r3, 6
 478:	75 c1       	rjmp	.+746    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 47a:	23 2d       	mov	r18, r3
 47c:	20 64       	ori	r18, 0x40	; 64
 47e:	32 2e       	mov	r3, r18
 480:	19 c0       	rjmp	.+50     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 482:	36 fe       	sbrs	r3, 6
 484:	06 c0       	rjmp	.+12     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 486:	8a e0       	ldi	r24, 0x0A	; 10
 488:	98 9e       	mul	r9, r24
 48a:	20 0d       	add	r18, r0
 48c:	11 24       	eor	r1, r1
 48e:	92 2e       	mov	r9, r18
 490:	11 c0       	rjmp	.+34     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 492:	ea e0       	ldi	r30, 0x0A	; 10
 494:	2e 9e       	mul	r2, r30
 496:	20 0d       	add	r18, r0
 498:	11 24       	eor	r1, r1
 49a:	22 2e       	mov	r2, r18
 49c:	f3 2d       	mov	r31, r3
 49e:	f0 62       	ori	r31, 0x20	; 32
 4a0:	3f 2e       	mov	r3, r31
 4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a4:	8c 36       	cpi	r24, 0x6C	; 108
 4a6:	21 f4       	brne	.+8      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a8:	83 2d       	mov	r24, r3
 4aa:	80 68       	ori	r24, 0x80	; 128
 4ac:	38 2e       	mov	r3, r24
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b0:	88 36       	cpi	r24, 0x68	; 104
 4b2:	41 f4       	brne	.+16     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b4:	f7 01       	movw	r30, r14
 4b6:	93 fd       	sbrc	r25, 3
 4b8:	85 91       	lpm	r24, Z+
 4ba:	93 ff       	sbrs	r25, 3
 4bc:	81 91       	ld	r24, Z+
 4be:	7f 01       	movw	r14, r30
 4c0:	81 11       	cpse	r24, r1
 4c2:	b3 cf       	rjmp	.-154    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 4c4:	98 2f       	mov	r25, r24
 4c6:	9f 7d       	andi	r25, 0xDF	; 223
 4c8:	95 54       	subi	r25, 0x45	; 69
 4ca:	93 30       	cpi	r25, 0x03	; 3
 4cc:	28 f4       	brcc	.+10     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ce:	0c 5f       	subi	r16, 0xFC	; 252
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	9f e3       	ldi	r25, 0x3F	; 63
 4d4:	99 83       	std	Y+1, r25	; 0x01
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d8:	83 36       	cpi	r24, 0x63	; 99
 4da:	31 f0       	breq	.+12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4dc:	83 37       	cpi	r24, 0x73	; 115
 4de:	71 f0       	breq	.+28     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4e0:	83 35       	cpi	r24, 0x53	; 83
 4e2:	09 f0       	breq	.+2      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e4:	55 c0       	rjmp	.+170    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 4e6:	20 c0       	rjmp	.+64     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 4e8:	f8 01       	movw	r30, r16
 4ea:	80 81       	ld	r24, Z
 4ec:	89 83       	std	Y+1, r24	; 0x01
 4ee:	0e 5f       	subi	r16, 0xFE	; 254
 4f0:	1f 4f       	sbci	r17, 0xFF	; 255
 4f2:	88 24       	eor	r8, r8
 4f4:	83 94       	inc	r8
 4f6:	91 2c       	mov	r9, r1
 4f8:	53 01       	movw	r10, r6
 4fa:	12 c0       	rjmp	.+36     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4fc:	28 01       	movw	r4, r16
 4fe:	f2 e0       	ldi	r31, 0x02	; 2
 500:	4f 0e       	add	r4, r31
 502:	51 1c       	adc	r5, r1
 504:	f8 01       	movw	r30, r16
 506:	a0 80       	ld	r10, Z
 508:	b1 80       	ldd	r11, Z+1	; 0x01
 50a:	36 fe       	sbrs	r3, 6
 50c:	03 c0       	rjmp	.+6      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 50e:	69 2d       	mov	r22, r9
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	02 c0       	rjmp	.+4      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 514:	6f ef       	ldi	r22, 0xFF	; 255
 516:	7f ef       	ldi	r23, 0xFF	; 255
 518:	c5 01       	movw	r24, r10
 51a:	4e d1       	rcall	.+668    	; 0x7b8 <strnlen>
 51c:	4c 01       	movw	r8, r24
 51e:	82 01       	movw	r16, r4
 520:	f3 2d       	mov	r31, r3
 522:	ff 77       	andi	r31, 0x7F	; 127
 524:	3f 2e       	mov	r3, r31
 526:	15 c0       	rjmp	.+42     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 528:	28 01       	movw	r4, r16
 52a:	22 e0       	ldi	r18, 0x02	; 2
 52c:	42 0e       	add	r4, r18
 52e:	51 1c       	adc	r5, r1
 530:	f8 01       	movw	r30, r16
 532:	a0 80       	ld	r10, Z
 534:	b1 80       	ldd	r11, Z+1	; 0x01
 536:	36 fe       	sbrs	r3, 6
 538:	03 c0       	rjmp	.+6      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53a:	69 2d       	mov	r22, r9
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 540:	6f ef       	ldi	r22, 0xFF	; 255
 542:	7f ef       	ldi	r23, 0xFF	; 255
 544:	c5 01       	movw	r24, r10
 546:	2d d1       	rcall	.+602    	; 0x7a2 <strnlen_P>
 548:	4c 01       	movw	r8, r24
 54a:	f3 2d       	mov	r31, r3
 54c:	f0 68       	ori	r31, 0x80	; 128
 54e:	3f 2e       	mov	r3, r31
 550:	82 01       	movw	r16, r4
 552:	33 fc       	sbrc	r3, 3
 554:	19 c0       	rjmp	.+50     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 556:	82 2d       	mov	r24, r2
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	88 16       	cp	r8, r24
 55c:	99 06       	cpc	r9, r25
 55e:	a0 f4       	brcc	.+40     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 560:	b6 01       	movw	r22, r12
 562:	80 e2       	ldi	r24, 0x20	; 32
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	33 d1       	rcall	.+614    	; 0x7ce <fputc>
 568:	2a 94       	dec	r2
 56a:	f5 cf       	rjmp	.-22     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 56c:	f5 01       	movw	r30, r10
 56e:	37 fc       	sbrc	r3, 7
 570:	85 91       	lpm	r24, Z+
 572:	37 fe       	sbrs	r3, 7
 574:	81 91       	ld	r24, Z+
 576:	5f 01       	movw	r10, r30
 578:	b6 01       	movw	r22, r12
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	28 d1       	rcall	.+592    	; 0x7ce <fputc>
 57e:	21 10       	cpse	r2, r1
 580:	2a 94       	dec	r2
 582:	21 e0       	ldi	r18, 0x01	; 1
 584:	82 1a       	sub	r8, r18
 586:	91 08       	sbc	r9, r1
 588:	81 14       	cp	r8, r1
 58a:	91 04       	cpc	r9, r1
 58c:	79 f7       	brne	.-34     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 58e:	e1 c0       	rjmp	.+450    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 590:	84 36       	cpi	r24, 0x64	; 100
 592:	11 f0       	breq	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 594:	89 36       	cpi	r24, 0x69	; 105
 596:	39 f5       	brne	.+78     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 598:	f8 01       	movw	r30, r16
 59a:	37 fe       	sbrs	r3, 7
 59c:	07 c0       	rjmp	.+14     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59e:	60 81       	ld	r22, Z
 5a0:	71 81       	ldd	r23, Z+1	; 0x01
 5a2:	82 81       	ldd	r24, Z+2	; 0x02
 5a4:	93 81       	ldd	r25, Z+3	; 0x03
 5a6:	0c 5f       	subi	r16, 0xFC	; 252
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	08 c0       	rjmp	.+16     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ac:	60 81       	ld	r22, Z
 5ae:	71 81       	ldd	r23, Z+1	; 0x01
 5b0:	07 2e       	mov	r0, r23
 5b2:	00 0c       	add	r0, r0
 5b4:	88 0b       	sbc	r24, r24
 5b6:	99 0b       	sbc	r25, r25
 5b8:	0e 5f       	subi	r16, 0xFE	; 254
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	f3 2d       	mov	r31, r3
 5be:	ff 76       	andi	r31, 0x6F	; 111
 5c0:	3f 2e       	mov	r3, r31
 5c2:	97 ff       	sbrs	r25, 7
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c6:	90 95       	com	r25
 5c8:	80 95       	com	r24
 5ca:	70 95       	com	r23
 5cc:	61 95       	neg	r22
 5ce:	7f 4f       	sbci	r23, 0xFF	; 255
 5d0:	8f 4f       	sbci	r24, 0xFF	; 255
 5d2:	9f 4f       	sbci	r25, 0xFF	; 255
 5d4:	f0 68       	ori	r31, 0x80	; 128
 5d6:	3f 2e       	mov	r3, r31
 5d8:	2a e0       	ldi	r18, 0x0A	; 10
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	a3 01       	movw	r20, r6
 5de:	33 d1       	rcall	.+614    	; 0x846 <__ultoa_invert>
 5e0:	88 2e       	mov	r8, r24
 5e2:	86 18       	sub	r8, r6
 5e4:	44 c0       	rjmp	.+136    	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 5e6:	85 37       	cpi	r24, 0x75	; 117
 5e8:	31 f4       	brne	.+12     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5ea:	23 2d       	mov	r18, r3
 5ec:	2f 7e       	andi	r18, 0xEF	; 239
 5ee:	b2 2e       	mov	r11, r18
 5f0:	2a e0       	ldi	r18, 0x0A	; 10
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	25 c0       	rjmp	.+74     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 5f6:	93 2d       	mov	r25, r3
 5f8:	99 7f       	andi	r25, 0xF9	; 249
 5fa:	b9 2e       	mov	r11, r25
 5fc:	8f 36       	cpi	r24, 0x6F	; 111
 5fe:	c1 f0       	breq	.+48     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 600:	18 f4       	brcc	.+6      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 602:	88 35       	cpi	r24, 0x58	; 88
 604:	79 f0       	breq	.+30     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 606:	ae c0       	rjmp	.+348    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 608:	80 37       	cpi	r24, 0x70	; 112
 60a:	19 f0       	breq	.+6      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 60c:	88 37       	cpi	r24, 0x78	; 120
 60e:	21 f0       	breq	.+8      	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 610:	a9 c0       	rjmp	.+338    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 612:	e9 2f       	mov	r30, r25
 614:	e0 61       	ori	r30, 0x10	; 16
 616:	be 2e       	mov	r11, r30
 618:	b4 fe       	sbrs	r11, 4
 61a:	0d c0       	rjmp	.+26     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 61c:	fb 2d       	mov	r31, r11
 61e:	f4 60       	ori	r31, 0x04	; 4
 620:	bf 2e       	mov	r11, r31
 622:	09 c0       	rjmp	.+18     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 624:	34 fe       	sbrs	r3, 4
 626:	0a c0       	rjmp	.+20     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 628:	29 2f       	mov	r18, r25
 62a:	26 60       	ori	r18, 0x06	; 6
 62c:	b2 2e       	mov	r11, r18
 62e:	06 c0       	rjmp	.+12     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 630:	28 e0       	ldi	r18, 0x08	; 8
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	05 c0       	rjmp	.+10     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 636:	20 e1       	ldi	r18, 0x10	; 16
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63c:	20 e1       	ldi	r18, 0x10	; 16
 63e:	32 e0       	ldi	r19, 0x02	; 2
 640:	f8 01       	movw	r30, r16
 642:	b7 fe       	sbrs	r11, 7
 644:	07 c0       	rjmp	.+14     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 646:	60 81       	ld	r22, Z
 648:	71 81       	ldd	r23, Z+1	; 0x01
 64a:	82 81       	ldd	r24, Z+2	; 0x02
 64c:	93 81       	ldd	r25, Z+3	; 0x03
 64e:	0c 5f       	subi	r16, 0xFC	; 252
 650:	1f 4f       	sbci	r17, 0xFF	; 255
 652:	06 c0       	rjmp	.+12     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 654:	60 81       	ld	r22, Z
 656:	71 81       	ldd	r23, Z+1	; 0x01
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0e 5f       	subi	r16, 0xFE	; 254
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	a3 01       	movw	r20, r6
 662:	f1 d0       	rcall	.+482    	; 0x846 <__ultoa_invert>
 664:	88 2e       	mov	r8, r24
 666:	86 18       	sub	r8, r6
 668:	fb 2d       	mov	r31, r11
 66a:	ff 77       	andi	r31, 0x7F	; 127
 66c:	3f 2e       	mov	r3, r31
 66e:	36 fe       	sbrs	r3, 6
 670:	0d c0       	rjmp	.+26     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 672:	23 2d       	mov	r18, r3
 674:	2e 7f       	andi	r18, 0xFE	; 254
 676:	a2 2e       	mov	r10, r18
 678:	89 14       	cp	r8, r9
 67a:	58 f4       	brcc	.+22     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 67c:	34 fe       	sbrs	r3, 4
 67e:	0b c0       	rjmp	.+22     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 680:	32 fc       	sbrc	r3, 2
 682:	09 c0       	rjmp	.+18     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 684:	83 2d       	mov	r24, r3
 686:	8e 7e       	andi	r24, 0xEE	; 238
 688:	a8 2e       	mov	r10, r24
 68a:	05 c0       	rjmp	.+10     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 68c:	b8 2c       	mov	r11, r8
 68e:	a3 2c       	mov	r10, r3
 690:	03 c0       	rjmp	.+6      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 692:	b8 2c       	mov	r11, r8
 694:	01 c0       	rjmp	.+2      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 696:	b9 2c       	mov	r11, r9
 698:	a4 fe       	sbrs	r10, 4
 69a:	0f c0       	rjmp	.+30     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 69c:	fe 01       	movw	r30, r28
 69e:	e8 0d       	add	r30, r8
 6a0:	f1 1d       	adc	r31, r1
 6a2:	80 81       	ld	r24, Z
 6a4:	80 33       	cpi	r24, 0x30	; 48
 6a6:	21 f4       	brne	.+8      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6a8:	9a 2d       	mov	r25, r10
 6aa:	99 7e       	andi	r25, 0xE9	; 233
 6ac:	a9 2e       	mov	r10, r25
 6ae:	09 c0       	rjmp	.+18     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6b0:	a2 fe       	sbrs	r10, 2
 6b2:	06 c0       	rjmp	.+12     	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6b4:	b3 94       	inc	r11
 6b6:	b3 94       	inc	r11
 6b8:	04 c0       	rjmp	.+8      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6ba:	8a 2d       	mov	r24, r10
 6bc:	86 78       	andi	r24, 0x86	; 134
 6be:	09 f0       	breq	.+2      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6c0:	b3 94       	inc	r11
 6c2:	a3 fc       	sbrc	r10, 3
 6c4:	10 c0       	rjmp	.+32     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6c6:	a0 fe       	sbrs	r10, 0
 6c8:	06 c0       	rjmp	.+12     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6ca:	b2 14       	cp	r11, r2
 6cc:	80 f4       	brcc	.+32     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ce:	28 0c       	add	r2, r8
 6d0:	92 2c       	mov	r9, r2
 6d2:	9b 18       	sub	r9, r11
 6d4:	0d c0       	rjmp	.+26     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6d6:	b2 14       	cp	r11, r2
 6d8:	58 f4       	brcc	.+22     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6da:	b6 01       	movw	r22, r12
 6dc:	80 e2       	ldi	r24, 0x20	; 32
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	76 d0       	rcall	.+236    	; 0x7ce <fputc>
 6e2:	b3 94       	inc	r11
 6e4:	f8 cf       	rjmp	.-16     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6e6:	b2 14       	cp	r11, r2
 6e8:	18 f4       	brcc	.+6      	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6ea:	2b 18       	sub	r2, r11
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6ee:	98 2c       	mov	r9, r8
 6f0:	21 2c       	mov	r2, r1
 6f2:	a4 fe       	sbrs	r10, 4
 6f4:	0f c0       	rjmp	.+30     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 6f6:	b6 01       	movw	r22, r12
 6f8:	80 e3       	ldi	r24, 0x30	; 48
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	68 d0       	rcall	.+208    	; 0x7ce <fputc>
 6fe:	a2 fe       	sbrs	r10, 2
 700:	16 c0       	rjmp	.+44     	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 702:	a1 fc       	sbrc	r10, 1
 704:	03 c0       	rjmp	.+6      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 706:	88 e7       	ldi	r24, 0x78	; 120
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	02 c0       	rjmp	.+4      	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 70c:	88 e5       	ldi	r24, 0x58	; 88
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	b6 01       	movw	r22, r12
 712:	0c c0       	rjmp	.+24     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 714:	8a 2d       	mov	r24, r10
 716:	86 78       	andi	r24, 0x86	; 134
 718:	51 f0       	breq	.+20     	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 71a:	a1 fe       	sbrs	r10, 1
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 71e:	8b e2       	ldi	r24, 0x2B	; 43
 720:	01 c0       	rjmp	.+2      	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
 722:	80 e2       	ldi	r24, 0x20	; 32
 724:	a7 fc       	sbrc	r10, 7
 726:	8d e2       	ldi	r24, 0x2D	; 45
 728:	b6 01       	movw	r22, r12
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	50 d0       	rcall	.+160    	; 0x7ce <fputc>
 72e:	89 14       	cp	r8, r9
 730:	30 f4       	brcc	.+12     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 732:	b6 01       	movw	r22, r12
 734:	80 e3       	ldi	r24, 0x30	; 48
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	4a d0       	rcall	.+148    	; 0x7ce <fputc>
 73a:	9a 94       	dec	r9
 73c:	f8 cf       	rjmp	.-16     	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 73e:	8a 94       	dec	r8
 740:	f3 01       	movw	r30, r6
 742:	e8 0d       	add	r30, r8
 744:	f1 1d       	adc	r31, r1
 746:	80 81       	ld	r24, Z
 748:	b6 01       	movw	r22, r12
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	40 d0       	rcall	.+128    	; 0x7ce <fputc>
 74e:	81 10       	cpse	r8, r1
 750:	f6 cf       	rjmp	.-20     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 752:	22 20       	and	r2, r2
 754:	09 f4       	brne	.+2      	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 756:	4e ce       	rjmp	.-868    	; 0x3f4 <vfprintf+0x4c>
 758:	b6 01       	movw	r22, r12
 75a:	80 e2       	ldi	r24, 0x20	; 32
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	37 d0       	rcall	.+110    	; 0x7ce <fputc>
 760:	2a 94       	dec	r2
 762:	f7 cf       	rjmp	.-18     	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 764:	f6 01       	movw	r30, r12
 766:	86 81       	ldd	r24, Z+6	; 0x06
 768:	97 81       	ldd	r25, Z+7	; 0x07
 76a:	02 c0       	rjmp	.+4      	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 76c:	8f ef       	ldi	r24, 0xFF	; 255
 76e:	9f ef       	ldi	r25, 0xFF	; 255
 770:	2b 96       	adiw	r28, 0x0b	; 11
 772:	0f b6       	in	r0, 0x3f	; 63
 774:	f8 94       	cli
 776:	de bf       	out	0x3e, r29	; 62
 778:	0f be       	out	0x3f, r0	; 63
 77a:	cd bf       	out	0x3d, r28	; 61
 77c:	df 91       	pop	r29
 77e:	cf 91       	pop	r28
 780:	1f 91       	pop	r17
 782:	0f 91       	pop	r16
 784:	ff 90       	pop	r15
 786:	ef 90       	pop	r14
 788:	df 90       	pop	r13
 78a:	cf 90       	pop	r12
 78c:	bf 90       	pop	r11
 78e:	af 90       	pop	r10
 790:	9f 90       	pop	r9
 792:	8f 90       	pop	r8
 794:	7f 90       	pop	r7
 796:	6f 90       	pop	r6
 798:	5f 90       	pop	r5
 79a:	4f 90       	pop	r4
 79c:	3f 90       	pop	r3
 79e:	2f 90       	pop	r2
 7a0:	08 95       	ret

000007a2 <strnlen_P>:
 7a2:	fc 01       	movw	r30, r24
 7a4:	05 90       	lpm	r0, Z+
 7a6:	61 50       	subi	r22, 0x01	; 1
 7a8:	70 40       	sbci	r23, 0x00	; 0
 7aa:	01 10       	cpse	r0, r1
 7ac:	d8 f7       	brcc	.-10     	; 0x7a4 <strnlen_P+0x2>
 7ae:	80 95       	com	r24
 7b0:	90 95       	com	r25
 7b2:	8e 0f       	add	r24, r30
 7b4:	9f 1f       	adc	r25, r31
 7b6:	08 95       	ret

000007b8 <strnlen>:
 7b8:	fc 01       	movw	r30, r24
 7ba:	61 50       	subi	r22, 0x01	; 1
 7bc:	70 40       	sbci	r23, 0x00	; 0
 7be:	01 90       	ld	r0, Z+
 7c0:	01 10       	cpse	r0, r1
 7c2:	d8 f7       	brcc	.-10     	; 0x7ba <strnlen+0x2>
 7c4:	80 95       	com	r24
 7c6:	90 95       	com	r25
 7c8:	8e 0f       	add	r24, r30
 7ca:	9f 1f       	adc	r25, r31
 7cc:	08 95       	ret

000007ce <fputc>:
 7ce:	0f 93       	push	r16
 7d0:	1f 93       	push	r17
 7d2:	cf 93       	push	r28
 7d4:	df 93       	push	r29
 7d6:	fb 01       	movw	r30, r22
 7d8:	23 81       	ldd	r18, Z+3	; 0x03
 7da:	21 fd       	sbrc	r18, 1
 7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <fputc+0x16>
 7de:	8f ef       	ldi	r24, 0xFF	; 255
 7e0:	9f ef       	ldi	r25, 0xFF	; 255
 7e2:	2c c0       	rjmp	.+88     	; 0x83c <fputc+0x6e>
 7e4:	22 ff       	sbrs	r18, 2
 7e6:	16 c0       	rjmp	.+44     	; 0x814 <fputc+0x46>
 7e8:	46 81       	ldd	r20, Z+6	; 0x06
 7ea:	57 81       	ldd	r21, Z+7	; 0x07
 7ec:	24 81       	ldd	r18, Z+4	; 0x04
 7ee:	35 81       	ldd	r19, Z+5	; 0x05
 7f0:	42 17       	cp	r20, r18
 7f2:	53 07       	cpc	r21, r19
 7f4:	44 f4       	brge	.+16     	; 0x806 <fputc+0x38>
 7f6:	a0 81       	ld	r26, Z
 7f8:	b1 81       	ldd	r27, Z+1	; 0x01
 7fa:	9d 01       	movw	r18, r26
 7fc:	2f 5f       	subi	r18, 0xFF	; 255
 7fe:	3f 4f       	sbci	r19, 0xFF	; 255
 800:	31 83       	std	Z+1, r19	; 0x01
 802:	20 83       	st	Z, r18
 804:	8c 93       	st	X, r24
 806:	26 81       	ldd	r18, Z+6	; 0x06
 808:	37 81       	ldd	r19, Z+7	; 0x07
 80a:	2f 5f       	subi	r18, 0xFF	; 255
 80c:	3f 4f       	sbci	r19, 0xFF	; 255
 80e:	37 83       	std	Z+7, r19	; 0x07
 810:	26 83       	std	Z+6, r18	; 0x06
 812:	14 c0       	rjmp	.+40     	; 0x83c <fputc+0x6e>
 814:	8b 01       	movw	r16, r22
 816:	ec 01       	movw	r28, r24
 818:	fb 01       	movw	r30, r22
 81a:	00 84       	ldd	r0, Z+8	; 0x08
 81c:	f1 85       	ldd	r31, Z+9	; 0x09
 81e:	e0 2d       	mov	r30, r0
 820:	19 95       	eicall
 822:	89 2b       	or	r24, r25
 824:	e1 f6       	brne	.-72     	; 0x7de <fputc+0x10>
 826:	d8 01       	movw	r26, r16
 828:	16 96       	adiw	r26, 0x06	; 6
 82a:	8d 91       	ld	r24, X+
 82c:	9c 91       	ld	r25, X
 82e:	17 97       	sbiw	r26, 0x07	; 7
 830:	01 96       	adiw	r24, 0x01	; 1
 832:	17 96       	adiw	r26, 0x07	; 7
 834:	9c 93       	st	X, r25
 836:	8e 93       	st	-X, r24
 838:	16 97       	sbiw	r26, 0x06	; 6
 83a:	ce 01       	movw	r24, r28
 83c:	df 91       	pop	r29
 83e:	cf 91       	pop	r28
 840:	1f 91       	pop	r17
 842:	0f 91       	pop	r16
 844:	08 95       	ret

00000846 <__ultoa_invert>:
 846:	fa 01       	movw	r30, r20
 848:	aa 27       	eor	r26, r26
 84a:	28 30       	cpi	r18, 0x08	; 8
 84c:	51 f1       	breq	.+84     	; 0x8a2 <__ultoa_invert+0x5c>
 84e:	20 31       	cpi	r18, 0x10	; 16
 850:	81 f1       	breq	.+96     	; 0x8b2 <__ultoa_invert+0x6c>
 852:	e8 94       	clt
 854:	6f 93       	push	r22
 856:	6e 7f       	andi	r22, 0xFE	; 254
 858:	6e 5f       	subi	r22, 0xFE	; 254
 85a:	7f 4f       	sbci	r23, 0xFF	; 255
 85c:	8f 4f       	sbci	r24, 0xFF	; 255
 85e:	9f 4f       	sbci	r25, 0xFF	; 255
 860:	af 4f       	sbci	r26, 0xFF	; 255
 862:	b1 e0       	ldi	r27, 0x01	; 1
 864:	3e d0       	rcall	.+124    	; 0x8e2 <__ultoa_invert+0x9c>
 866:	b4 e0       	ldi	r27, 0x04	; 4
 868:	3c d0       	rcall	.+120    	; 0x8e2 <__ultoa_invert+0x9c>
 86a:	67 0f       	add	r22, r23
 86c:	78 1f       	adc	r23, r24
 86e:	89 1f       	adc	r24, r25
 870:	9a 1f       	adc	r25, r26
 872:	a1 1d       	adc	r26, r1
 874:	68 0f       	add	r22, r24
 876:	79 1f       	adc	r23, r25
 878:	8a 1f       	adc	r24, r26
 87a:	91 1d       	adc	r25, r1
 87c:	a1 1d       	adc	r26, r1
 87e:	6a 0f       	add	r22, r26
 880:	71 1d       	adc	r23, r1
 882:	81 1d       	adc	r24, r1
 884:	91 1d       	adc	r25, r1
 886:	a1 1d       	adc	r26, r1
 888:	20 d0       	rcall	.+64     	; 0x8ca <__ultoa_invert+0x84>
 88a:	09 f4       	brne	.+2      	; 0x88e <__ultoa_invert+0x48>
 88c:	68 94       	set
 88e:	3f 91       	pop	r19
 890:	2a e0       	ldi	r18, 0x0A	; 10
 892:	26 9f       	mul	r18, r22
 894:	11 24       	eor	r1, r1
 896:	30 19       	sub	r19, r0
 898:	30 5d       	subi	r19, 0xD0	; 208
 89a:	31 93       	st	Z+, r19
 89c:	de f6       	brtc	.-74     	; 0x854 <__ultoa_invert+0xe>
 89e:	cf 01       	movw	r24, r30
 8a0:	08 95       	ret
 8a2:	46 2f       	mov	r20, r22
 8a4:	47 70       	andi	r20, 0x07	; 7
 8a6:	40 5d       	subi	r20, 0xD0	; 208
 8a8:	41 93       	st	Z+, r20
 8aa:	b3 e0       	ldi	r27, 0x03	; 3
 8ac:	0f d0       	rcall	.+30     	; 0x8cc <__ultoa_invert+0x86>
 8ae:	c9 f7       	brne	.-14     	; 0x8a2 <__ultoa_invert+0x5c>
 8b0:	f6 cf       	rjmp	.-20     	; 0x89e <__ultoa_invert+0x58>
 8b2:	46 2f       	mov	r20, r22
 8b4:	4f 70       	andi	r20, 0x0F	; 15
 8b6:	40 5d       	subi	r20, 0xD0	; 208
 8b8:	4a 33       	cpi	r20, 0x3A	; 58
 8ba:	18 f0       	brcs	.+6      	; 0x8c2 <__ultoa_invert+0x7c>
 8bc:	49 5d       	subi	r20, 0xD9	; 217
 8be:	31 fd       	sbrc	r19, 1
 8c0:	40 52       	subi	r20, 0x20	; 32
 8c2:	41 93       	st	Z+, r20
 8c4:	02 d0       	rcall	.+4      	; 0x8ca <__ultoa_invert+0x84>
 8c6:	a9 f7       	brne	.-22     	; 0x8b2 <__ultoa_invert+0x6c>
 8c8:	ea cf       	rjmp	.-44     	; 0x89e <__ultoa_invert+0x58>
 8ca:	b4 e0       	ldi	r27, 0x04	; 4
 8cc:	a6 95       	lsr	r26
 8ce:	97 95       	ror	r25
 8d0:	87 95       	ror	r24
 8d2:	77 95       	ror	r23
 8d4:	67 95       	ror	r22
 8d6:	ba 95       	dec	r27
 8d8:	c9 f7       	brne	.-14     	; 0x8cc <__ultoa_invert+0x86>
 8da:	00 97       	sbiw	r24, 0x00	; 0
 8dc:	61 05       	cpc	r22, r1
 8de:	71 05       	cpc	r23, r1
 8e0:	08 95       	ret
 8e2:	9b 01       	movw	r18, r22
 8e4:	ac 01       	movw	r20, r24
 8e6:	0a 2e       	mov	r0, r26
 8e8:	06 94       	lsr	r0
 8ea:	57 95       	ror	r21
 8ec:	47 95       	ror	r20
 8ee:	37 95       	ror	r19
 8f0:	27 95       	ror	r18
 8f2:	ba 95       	dec	r27
 8f4:	c9 f7       	brne	.-14     	; 0x8e8 <__ultoa_invert+0xa2>
 8f6:	62 0f       	add	r22, r18
 8f8:	73 1f       	adc	r23, r19
 8fa:	84 1f       	adc	r24, r20
 8fc:	95 1f       	adc	r25, r21
 8fe:	a0 1d       	adc	r26, r0
 900:	08 95       	ret

00000902 <_exit>:
 902:	f8 94       	cli

00000904 <__stop_program>:
 904:	ff cf       	rjmp	.-2      	; 0x904 <__stop_program>
