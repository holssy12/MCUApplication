
1206.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800200  00000b62  00000bf6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800236  00800236  00000c2c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c2c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010c1  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d1c  00000000  00000000  00001de9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c7  00000000  00000000  00002b05  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d0  00000000  00000000  000031cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000609  00000000  00000000  0000339c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000653  00000000  00000000  000039a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003ff8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	40 c1       	rjmp	.+640    	; 0x286 <__vector_1>
   6:	00 00       	nop
   8:	97 c1       	rjmp	.+814    	; 0x338 <__vector_2>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	e8 c1       	rjmp	.+976    	; 0x3e6 <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e6       	ldi	r30, 0x62	; 98
  fc:	fb e0       	ldi	r31, 0x0B	; 11
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 33       	cpi	r26, 0x36	; 54
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e3       	ldi	r26, 0x36	; 54
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 33       	cpi	r26, 0x3A	; 58
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	b2 d1       	rcall	.+868    	; 0x484 <main>
 120:	1e c5       	rjmp	.+2620   	; 0xb5e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <tx_char>:
void tx_str(unsigned char *txStr, int len) {
	int i = 0;
	for(i=0; i<len; i++) {
		tx_char(txStr[i]);
	}
}
 124:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <tx_char>
 12c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 130:	08 95       	ret

00000132 <myPrintf>:

void myPrintf(char *fmt,...) {
 132:	0f 93       	push	r16
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
 13e:	c0 58       	subi	r28, 0x80	; 128
 140:	d1 09       	sbc	r29, r1
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	de bf       	out	0x3e, r29	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	cd bf       	out	0x3d, r28	; 61
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	08 c0       	rjmp	.+16     	; 0x160 <myPrintf+0x2e>
		sText[i] = 0;
 150:	e1 e0       	ldi	r30, 0x01	; 1
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	ec 0f       	add	r30, r28
 156:	fd 1f       	adc	r31, r29
 158:	e8 0f       	add	r30, r24
 15a:	f1 1d       	adc	r31, r1
 15c:	10 82       	st	Z, r1
	va_list arg_ptr;
	uint8_t i, len;
	char sText[128];
	
	/* text buffer */
	for (i=0; i<128; i++) {
 15e:	8f 5f       	subi	r24, 0xFF	; 255
 160:	88 23       	and	r24, r24
 162:	b4 f7       	brge	.-20     	; 0x150 <myPrintf+0x1e>
		sText[i] = 0;
	}
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
 164:	ae 01       	movw	r20, r28
 166:	46 57       	subi	r20, 0x76	; 118
 168:	5f 4f       	sbci	r21, 0xFF	; 255
 16a:	c8 57       	subi	r28, 0x78	; 120
 16c:	df 4f       	sbci	r29, 0xFF	; 255
 16e:	68 81       	ld	r22, Y
 170:	79 81       	ldd	r23, Y+1	; 0x01
 172:	c8 58       	subi	r28, 0x88	; 136
 174:	d0 40       	sbci	r29, 0x00	; 0
 176:	8e 01       	movw	r16, r28
 178:	0f 5f       	subi	r16, 0xFF	; 255
 17a:	1f 4f       	sbci	r17, 0xFF	; 255
 17c:	c8 01       	movw	r24, r16
 17e:	1a d2       	rcall	.+1076   	; 0x5b4 <vsprintf>
	va_end(arg_ptr);
	
	len = strlen(sText);
 180:	f8 01       	movw	r30, r16
 182:	01 90       	ld	r0, Z+
 184:	00 20       	and	r0, r0
 186:	e9 f7       	brne	.-6      	; 0x182 <myPrintf+0x50>
 188:	31 97       	sbiw	r30, 0x01	; 1
 18a:	8e 2f       	mov	r24, r30
 18c:	80 1b       	sub	r24, r16
 18e:	08 2f       	mov	r16, r24
	for(i=0; i<len; i++) {
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	09 c0       	rjmp	.+18     	; 0x1a6 <myPrintf+0x74>
		tx_char(sText[i]);
 194:	e1 e0       	ldi	r30, 0x01	; 1
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	ec 0f       	add	r30, r28
 19a:	fd 1f       	adc	r31, r29
 19c:	e1 0f       	add	r30, r17
 19e:	f1 1d       	adc	r31, r1
 1a0:	80 81       	ld	r24, Z
 1a2:	c0 df       	rcall	.-128    	; 0x124 <tx_char>
	va_start(arg_ptr, fmt);
	vsprintf(sText, fmt, arg_ptr);
	va_end(arg_ptr);
	
	len = strlen(sText);
	for(i=0; i<len; i++) {
 1a4:	1f 5f       	subi	r17, 0xFF	; 255
 1a6:	10 17       	cp	r17, r16
 1a8:	a8 f3       	brcs	.-22     	; 0x194 <myPrintf+0x62>
		tx_char(sText[i]);
	}
}
 1aa:	c0 58       	subi	r28, 0x80	; 128
 1ac:	df 4f       	sbci	r29, 0xFF	; 255
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	08 95       	ret

000001c2 <play>:

void play(unsigned int y) {
 1c2:	ac 01       	movw	r20, r24
	unsigned int x;
	DDRB |= 0x80;
 1c4:	84 b1       	in	r24, 0x04	; 4
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	84 b9       	out	0x04, r24	; 4
	TCCR1A |= 0x04;
 1ca:	e0 e8       	ldi	r30, 0x80	; 128
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	84 60       	ori	r24, 0x04	; 4
 1d2:	80 83       	st	Z, r24
	TCCR1B |= 0x1A;
 1d4:	e1 e8       	ldi	r30, 0x81	; 129
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	8a 61       	ori	r24, 0x1A	; 26
 1dc:	80 83       	st	Z, r24
	x = FREQ(note_freq[y % 7]);
 1de:	9a 01       	movw	r18, r20
 1e0:	a3 e9       	ldi	r26, 0x93	; 147
 1e2:	b4 e2       	ldi	r27, 0x24	; 36
 1e4:	b6 d1       	rcall	.+876    	; 0x552 <__umulhisi3>
 1e6:	28 1b       	sub	r18, r24
 1e8:	39 0b       	sbc	r19, r25
 1ea:	36 95       	lsr	r19
 1ec:	27 95       	ror	r18
 1ee:	82 0f       	add	r24, r18
 1f0:	93 1f       	adc	r25, r19
 1f2:	96 95       	lsr	r25
 1f4:	87 95       	ror	r24
 1f6:	96 95       	lsr	r25
 1f8:	87 95       	ror	r24
 1fa:	9c 01       	movw	r18, r24
 1fc:	22 0f       	add	r18, r18
 1fe:	33 1f       	adc	r19, r19
 200:	22 0f       	add	r18, r18
 202:	33 1f       	adc	r19, r19
 204:	22 0f       	add	r18, r18
 206:	33 1f       	adc	r19, r19
 208:	b9 01       	movw	r22, r18
 20a:	68 1b       	sub	r22, r24
 20c:	79 0b       	sbc	r23, r25
 20e:	9a 01       	movw	r18, r20
 210:	26 1b       	sub	r18, r22
 212:	37 0b       	sbc	r19, r23
 214:	c9 01       	movw	r24, r18
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	fc 01       	movw	r30, r24
 21c:	e0 50       	subi	r30, 0x00	; 0
 21e:	fe 4f       	sbci	r31, 0xFE	; 254
 220:	20 81       	ld	r18, Z
 222:	31 81       	ldd	r19, Z+1	; 0x01
 224:	2f 5f       	subi	r18, 0xFF	; 255
 226:	3f 4f       	sbci	r19, 0xFF	; 255
 228:	22 95       	swap	r18
 22a:	32 95       	swap	r19
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	32 27       	eor	r19, r18
 230:	20 7f       	andi	r18, 0xF0	; 240
 232:	32 27       	eor	r19, r18
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	50 e0       	ldi	r21, 0x00	; 0
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	74 e2       	ldi	r23, 0x24	; 36
 23c:	84 ef       	ldi	r24, 0xF4	; 244
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	6c d1       	rcall	.+728    	; 0x51a <__divmodsi4>
	ICR1 = x;
 242:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 246:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
	on_off = 0;
 24a:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <on_off+0x1>
 24e:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <on_off>
	PORTC &= ~0x01;
 252:	88 b1       	in	r24, 0x08	; 8
 254:	8e 7f       	andi	r24, 0xFE	; 254
 256:	88 b9       	out	0x08, r24	; 8
 258:	08 95       	ret

0000025a <stop>:
}

void stop(void) {
	TCCR1A = 0x00;
 25a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	TCCR1B = 0x00;
 25e:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
	TCNT1 = 0;
 262:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 266:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	ICR1 = 0;
 26a:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 26e:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
	DDRB = ~0x80;
 272:	8f e7       	ldi	r24, 0x7F	; 127
 274:	84 b9       	out	0x04, r24	; 4
	on_off = 0;
 276:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <on_off+0x1>
 27a:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <on_off>
	PORTC |= 0x01;
 27e:	88 b1       	in	r24, 0x08	; 8
 280:	81 60       	ori	r24, 0x01	; 1
 282:	88 b9       	out	0x08, r24	; 8
 284:	08 95       	ret

00000286 <__vector_1>:
}

ISR(INT0_vect) {
 286:	1f 92       	push	r1
 288:	0f 92       	push	r0
 28a:	0f b6       	in	r0, 0x3f	; 63
 28c:	0f 92       	push	r0
 28e:	11 24       	eor	r1, r1
 290:	0b b6       	in	r0, 0x3b	; 59
 292:	0f 92       	push	r0
 294:	2f 93       	push	r18
 296:	3f 93       	push	r19
 298:	4f 93       	push	r20
 29a:	5f 93       	push	r21
 29c:	6f 93       	push	r22
 29e:	7f 93       	push	r23
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
 2a4:	af 93       	push	r26
 2a6:	bf 93       	push	r27
 2a8:	ef 93       	push	r30
 2aa:	ff 93       	push	r31
	cli();
 2ac:	f8 94       	cli
	
	if(!ICR1) return;
 2ae:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 2b2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 2b6:	89 2b       	or	r24, r25
 2b8:	61 f1       	breq	.+88     	; 0x312 <__vector_1+0x8c>
	
	if(++note > 6) {
 2ba:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <__data_end>
 2be:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <__data_end+0x1>
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <__data_end+0x1>
 2c8:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <__data_end>
 2cc:	07 97       	sbiw	r24, 0x07	; 7
 2ce:	34 f0       	brlt	.+12     	; 0x2dc <__vector_1+0x56>
		note = 6;
 2d0:	86 e0       	ldi	r24, 0x06	; 6
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <__data_end+0x1>
 2d8:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <__data_end>
	}
	EIFR |= 0x01;	
 2dc:	8c b3       	in	r24, 0x1c	; 28
 2de:	81 60       	ori	r24, 0x01	; 1
 2e0:	8c bb       	out	0x1c, r24	; 28
	
	on_off = ON;
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <on_off+0x1>
 2ea:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <on_off>

	sei();
 2ee:	78 94       	sei
	myPrintf("01 Clicked \n");
 2f0:	8e e0       	ldi	r24, 0x0E	; 14
 2f2:	92 e0       	ldi	r25, 0x02	; 2
 2f4:	9f 93       	push	r25
 2f6:	8f 93       	push	r24
 2f8:	1c df       	rcall	.-456    	; 0x132 <myPrintf>
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2fe:	88 ee       	ldi	r24, 0xE8	; 232
 300:	93 e0       	ldi	r25, 0x03	; 3
 302:	05 c0       	rjmp	.+10     	; 0x30e <__vector_1+0x88>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 304:	e0 e9       	ldi	r30, 0x90	; 144
 306:	f1 e0       	ldi	r31, 0x01	; 1
 308:	31 97       	sbiw	r30, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <__vector_1+0x82>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 30c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 30e:	00 97       	sbiw	r24, 0x00	; 0
 310:	c9 f7       	brne	.-14     	; 0x304 <__vector_1+0x7e>
	_delay_ms(100);
}
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	bf 91       	pop	r27
 318:	af 91       	pop	r26
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	7f 91       	pop	r23
 320:	6f 91       	pop	r22
 322:	5f 91       	pop	r21
 324:	4f 91       	pop	r20
 326:	3f 91       	pop	r19
 328:	2f 91       	pop	r18
 32a:	0f 90       	pop	r0
 32c:	0b be       	out	0x3b, r0	; 59
 32e:	0f 90       	pop	r0
 330:	0f be       	out	0x3f, r0	; 63
 332:	0f 90       	pop	r0
 334:	1f 90       	pop	r1
 336:	18 95       	reti

00000338 <__vector_2>:

ISR(INT1_vect) {
 338:	1f 92       	push	r1
 33a:	0f 92       	push	r0
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	0f 92       	push	r0
 340:	11 24       	eor	r1, r1
 342:	0b b6       	in	r0, 0x3b	; 59
 344:	0f 92       	push	r0
 346:	2f 93       	push	r18
 348:	3f 93       	push	r19
 34a:	4f 93       	push	r20
 34c:	5f 93       	push	r21
 34e:	6f 93       	push	r22
 350:	7f 93       	push	r23
 352:	8f 93       	push	r24
 354:	9f 93       	push	r25
 356:	af 93       	push	r26
 358:	bf 93       	push	r27
 35a:	ef 93       	push	r30
 35c:	ff 93       	push	r31
	cli();
 35e:	f8 94       	cli
	if(!ICR1) return;
 360:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 364:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 368:	89 2b       	or	r24, r25
 36a:	51 f1       	breq	.+84     	; 0x3c0 <__vector_2+0x88>
	
	if(--note < 0) {
 36c:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <__data_end>
 370:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <__data_end+0x1>
 374:	01 97       	sbiw	r24, 0x01	; 1
 376:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <__data_end+0x1>
 37a:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <__data_end>
 37e:	99 23       	and	r25, r25
 380:	24 f4       	brge	.+8      	; 0x38a <__vector_2+0x52>
		note = 0;
 382:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__data_end+0x1>
 386:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__data_end>
	}
	EIFR |= 0x02;
 38a:	8c b3       	in	r24, 0x1c	; 28
 38c:	82 60       	ori	r24, 0x02	; 2
 38e:	8c bb       	out	0x1c, r24	; 28
	
	on_off = ON;
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <on_off+0x1>
 398:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <on_off>
	
	sei();
 39c:	78 94       	sei
	myPrintf("02 Clicked \n");
 39e:	8b e1       	ldi	r24, 0x1B	; 27
 3a0:	92 e0       	ldi	r25, 0x02	; 2
 3a2:	9f 93       	push	r25
 3a4:	8f 93       	push	r24
 3a6:	c5 de       	rcall	.-630    	; 0x132 <myPrintf>
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3ac:	88 ee       	ldi	r24, 0xE8	; 232
 3ae:	93 e0       	ldi	r25, 0x03	; 3
 3b0:	05 c0       	rjmp	.+10     	; 0x3bc <__vector_2+0x84>
 3b2:	e0 e9       	ldi	r30, 0x90	; 144
 3b4:	f1 e0       	ldi	r31, 0x01	; 1
 3b6:	31 97       	sbiw	r30, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <__vector_2+0x7e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3bc:	00 97       	sbiw	r24, 0x00	; 0
 3be:	c9 f7       	brne	.-14     	; 0x3b2 <__vector_2+0x7a>
	_delay_ms(100);
}
 3c0:	ff 91       	pop	r31
 3c2:	ef 91       	pop	r30
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0b be       	out	0x3b, r0	; 59
 3dc:	0f 90       	pop	r0
 3de:	0f be       	out	0x3f, r0	; 63
 3e0:	0f 90       	pop	r0
 3e2:	1f 90       	pop	r1
 3e4:	18 95       	reti

000003e6 <__vector_5>:

ISR(INT4_vect) {
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	0b b6       	in	r0, 0x3b	; 59
 3f2:	0f 92       	push	r0
 3f4:	2f 93       	push	r18
 3f6:	3f 93       	push	r19
 3f8:	4f 93       	push	r20
 3fa:	5f 93       	push	r21
 3fc:	6f 93       	push	r22
 3fe:	7f 93       	push	r23
 400:	8f 93       	push	r24
 402:	9f 93       	push	r25
 404:	af 93       	push	r26
 406:	bf 93       	push	r27
 408:	ef 93       	push	r30
 40a:	ff 93       	push	r31
	cli();
 40c:	f8 94       	cli
	if(ICR1) {
 40e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 412:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 416:	89 2b       	or	r24, r25
 418:	39 f0       	breq	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		on_off = OFF;
 41a:	82 e0       	ldi	r24, 0x02	; 2
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <on_off+0x1>
 422:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <on_off>
 426:	06 c0       	rjmp	.+12     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
	}
	else {
		on_off = ON;
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <on_off+0x1>
 430:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <on_off>
	}
	EIFR |= 0x10;
 434:	8c b3       	in	r24, 0x1c	; 28
 436:	80 61       	ori	r24, 0x10	; 16
 438:	8c bb       	out	0x1c, r24	; 28
	sei();
 43a:	78 94       	sei
	myPrintf("04 Clicked \n");
 43c:	88 e2       	ldi	r24, 0x28	; 40
 43e:	92 e0       	ldi	r25, 0x02	; 2
 440:	9f 93       	push	r25
 442:	8f 93       	push	r24
 444:	76 de       	rcall	.-788    	; 0x132 <myPrintf>
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 44a:	88 ee       	ldi	r24, 0xE8	; 232
 44c:	93 e0       	ldi	r25, 0x03	; 3
 44e:	05 c0       	rjmp	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	e0 e9       	ldi	r30, 0x90	; 144
 452:	f1 e0       	ldi	r31, 0x01	; 1
 454:	31 97       	sbiw	r30, 0x01	; 1
 456:	f1 f7       	brne	.-4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 458:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 45a:	00 97       	sbiw	r24, 0x00	; 0
 45c:	c9 f7       	brne	.-14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
	_delay_ms(100);
}
 45e:	ff 91       	pop	r31
 460:	ef 91       	pop	r30
 462:	bf 91       	pop	r27
 464:	af 91       	pop	r26
 466:	9f 91       	pop	r25
 468:	8f 91       	pop	r24
 46a:	7f 91       	pop	r23
 46c:	6f 91       	pop	r22
 46e:	5f 91       	pop	r21
 470:	4f 91       	pop	r20
 472:	3f 91       	pop	r19
 474:	2f 91       	pop	r18
 476:	0f 90       	pop	r0
 478:	0b be       	out	0x3b, r0	; 59
 47a:	0f 90       	pop	r0
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	0f 90       	pop	r0
 480:	1f 90       	pop	r1
 482:	18 95       	reti

00000484 <main>:

int main(void)
{
	/* Replace with your application code */
	
	cli();
 484:	f8 94       	cli
	DDRD = 0x00;
 486:	1a b8       	out	0x0a, r1	; 10
	DDRC = 0x01;
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	97 b9       	out	0x07, r25	; 7
	DDRB = 0x00;
 48c:	14 b8       	out	0x04, r1	; 4
	PORTB = 0x00;
 48e:	15 b8       	out	0x05, r1	; 5
	EICRA = 0x0F;
 490:	8f e0       	ldi	r24, 0x0F	; 15
 492:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = 0x03;
 496:	83 e0       	ldi	r24, 0x03	; 3
 498:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	UBRR1H = (unsigned char) (BAUD_9600 >> 8);
 49c:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
	UBRR1L = (unsigned char) BAUD_9600;
 4a0:	87 e6       	ldi	r24, 0x67	; 103
 4a2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
	UCSR1A = 0x00;
 4a6:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
	UCSR1B = (1 << TXEN1) | (1 << RXEN1);
 4aa:	e9 ec       	ldi	r30, 0xC9	; 201
 4ac:	f0 e0       	ldi	r31, 0x00	; 0
 4ae:	88 e1       	ldi	r24, 0x18	; 24
 4b0:	80 83       	st	Z, r24
	UCSR1B |= (1 << RXCIE1);
 4b2:	80 81       	ld	r24, Z
 4b4:	80 68       	ori	r24, 0x80	; 128
 4b6:	80 83       	st	Z, r24
	UCSR1C = (1 << UCSZ11) | (1 << UCSZ10);
 4b8:	86 e0       	ldi	r24, 0x06	; 6
 4ba:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
	
	// Falling edge trigger
	EIMSK |= 0x13;
 4be:	8d b3       	in	r24, 0x1d	; 29
 4c0:	83 61       	ori	r24, 0x13	; 19
 4c2:	8d bb       	out	0x1d, r24	; 29
	// Interrupt enable
	EIFR |= 0x13;
 4c4:	8c b3       	in	r24, 0x1c	; 28
 4c6:	83 61       	ori	r24, 0x13	; 19
 4c8:	8c bb       	out	0x1c, r24	; 28
	PORTC = 0x01;
 4ca:	98 b9       	out	0x08, r25	; 8
	
	sei();
 4cc:	78 94       	sei
	
	stop(); // 잔여값 지우기?
 4ce:	c5 de       	rcall	.-630    	; 0x25a <stop>
	
	while (1)
	{
		if(on_off == ON) {
 4d0:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <on_off>
 4d4:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <on_off+0x1>
 4d8:	81 30       	cpi	r24, 0x01	; 1
 4da:	91 05       	cpc	r25, r1
 4dc:	81 f4       	brne	.+32     	; 0x4fe <main+0x7a>
			play(note);
 4de:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <__data_end>
 4e2:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <__data_end+0x1>
 4e6:	6d de       	rcall	.-806    	; 0x1c2 <play>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4e8:	88 ee       	ldi	r24, 0xE8	; 232
 4ea:	93 e0       	ldi	r25, 0x03	; 3
 4ec:	05 c0       	rjmp	.+10     	; 0x4f8 <main+0x74>
 4ee:	e0 e9       	ldi	r30, 0x90	; 144
 4f0:	f1 e0       	ldi	r31, 0x01	; 1
 4f2:	31 97       	sbiw	r30, 0x01	; 1
 4f4:	f1 f7       	brne	.-4      	; 0x4f2 <main+0x6e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4f6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4f8:	00 97       	sbiw	r24, 0x00	; 0
 4fa:	c9 f7       	brne	.-14     	; 0x4ee <main+0x6a>
 4fc:	e9 cf       	rjmp	.-46     	; 0x4d0 <main+0x4c>
			_delay_ms(100);
		}
		else if(on_off == OFF) {
 4fe:	02 97       	sbiw	r24, 0x02	; 2
			stop();
 500:	39 f7       	brne	.-50     	; 0x4d0 <main+0x4c>
 502:	ab de       	rcall	.-682    	; 0x25a <stop>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 504:	88 ee       	ldi	r24, 0xE8	; 232
 506:	93 e0       	ldi	r25, 0x03	; 3
 508:	05 c0       	rjmp	.+10     	; 0x514 <main+0x90>
 50a:	e0 e9       	ldi	r30, 0x90	; 144
 50c:	f1 e0       	ldi	r31, 0x01	; 1
 50e:	31 97       	sbiw	r30, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <main+0x8a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 512:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 514:	00 97       	sbiw	r24, 0x00	; 0
 516:	c9 f7       	brne	.-14     	; 0x50a <main+0x86>
 518:	db cf       	rjmp	.-74     	; 0x4d0 <main+0x4c>

0000051a <__divmodsi4>:
 51a:	05 2e       	mov	r0, r21
 51c:	97 fb       	bst	r25, 7
 51e:	16 f4       	brtc	.+4      	; 0x524 <__divmodsi4+0xa>
 520:	00 94       	com	r0
 522:	0f d0       	rcall	.+30     	; 0x542 <__negsi2>
 524:	57 fd       	sbrc	r21, 7
 526:	05 d0       	rcall	.+10     	; 0x532 <__divmodsi4_neg2>
 528:	23 d0       	rcall	.+70     	; 0x570 <__udivmodsi4>
 52a:	07 fc       	sbrc	r0, 7
 52c:	02 d0       	rcall	.+4      	; 0x532 <__divmodsi4_neg2>
 52e:	46 f4       	brtc	.+16     	; 0x540 <__divmodsi4_exit>
 530:	08 c0       	rjmp	.+16     	; 0x542 <__negsi2>

00000532 <__divmodsi4_neg2>:
 532:	50 95       	com	r21
 534:	40 95       	com	r20
 536:	30 95       	com	r19
 538:	21 95       	neg	r18
 53a:	3f 4f       	sbci	r19, 0xFF	; 255
 53c:	4f 4f       	sbci	r20, 0xFF	; 255
 53e:	5f 4f       	sbci	r21, 0xFF	; 255

00000540 <__divmodsi4_exit>:
 540:	08 95       	ret

00000542 <__negsi2>:
 542:	90 95       	com	r25
 544:	80 95       	com	r24
 546:	70 95       	com	r23
 548:	61 95       	neg	r22
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	08 95       	ret

00000552 <__umulhisi3>:
 552:	a2 9f       	mul	r26, r18
 554:	b0 01       	movw	r22, r0
 556:	b3 9f       	mul	r27, r19
 558:	c0 01       	movw	r24, r0
 55a:	a3 9f       	mul	r26, r19
 55c:	70 0d       	add	r23, r0
 55e:	81 1d       	adc	r24, r1
 560:	11 24       	eor	r1, r1
 562:	91 1d       	adc	r25, r1
 564:	b2 9f       	mul	r27, r18
 566:	70 0d       	add	r23, r0
 568:	81 1d       	adc	r24, r1
 56a:	11 24       	eor	r1, r1
 56c:	91 1d       	adc	r25, r1
 56e:	08 95       	ret

00000570 <__udivmodsi4>:
 570:	a1 e2       	ldi	r26, 0x21	; 33
 572:	1a 2e       	mov	r1, r26
 574:	aa 1b       	sub	r26, r26
 576:	bb 1b       	sub	r27, r27
 578:	fd 01       	movw	r30, r26
 57a:	0d c0       	rjmp	.+26     	; 0x596 <__udivmodsi4_ep>

0000057c <__udivmodsi4_loop>:
 57c:	aa 1f       	adc	r26, r26
 57e:	bb 1f       	adc	r27, r27
 580:	ee 1f       	adc	r30, r30
 582:	ff 1f       	adc	r31, r31
 584:	a2 17       	cp	r26, r18
 586:	b3 07       	cpc	r27, r19
 588:	e4 07       	cpc	r30, r20
 58a:	f5 07       	cpc	r31, r21
 58c:	20 f0       	brcs	.+8      	; 0x596 <__udivmodsi4_ep>
 58e:	a2 1b       	sub	r26, r18
 590:	b3 0b       	sbc	r27, r19
 592:	e4 0b       	sbc	r30, r20
 594:	f5 0b       	sbc	r31, r21

00000596 <__udivmodsi4_ep>:
 596:	66 1f       	adc	r22, r22
 598:	77 1f       	adc	r23, r23
 59a:	88 1f       	adc	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	1a 94       	dec	r1
 5a0:	69 f7       	brne	.-38     	; 0x57c <__udivmodsi4_loop>
 5a2:	60 95       	com	r22
 5a4:	70 95       	com	r23
 5a6:	80 95       	com	r24
 5a8:	90 95       	com	r25
 5aa:	9b 01       	movw	r18, r22
 5ac:	ac 01       	movw	r20, r24
 5ae:	bd 01       	movw	r22, r26
 5b0:	cf 01       	movw	r24, r30
 5b2:	08 95       	ret

000005b4 <vsprintf>:
 5b4:	0f 93       	push	r16
 5b6:	1f 93       	push	r17
 5b8:	cf 93       	push	r28
 5ba:	df 93       	push	r29
 5bc:	cd b7       	in	r28, 0x3d	; 61
 5be:	de b7       	in	r29, 0x3e	; 62
 5c0:	2e 97       	sbiw	r28, 0x0e	; 14
 5c2:	0f b6       	in	r0, 0x3f	; 63
 5c4:	f8 94       	cli
 5c6:	de bf       	out	0x3e, r29	; 62
 5c8:	0f be       	out	0x3f, r0	; 63
 5ca:	cd bf       	out	0x3d, r28	; 61
 5cc:	8c 01       	movw	r16, r24
 5ce:	86 e0       	ldi	r24, 0x06	; 6
 5d0:	8c 83       	std	Y+4, r24	; 0x04
 5d2:	1a 83       	std	Y+2, r17	; 0x02
 5d4:	09 83       	std	Y+1, r16	; 0x01
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	9f e7       	ldi	r25, 0x7F	; 127
 5da:	9e 83       	std	Y+6, r25	; 0x06
 5dc:	8d 83       	std	Y+5, r24	; 0x05
 5de:	ce 01       	movw	r24, r28
 5e0:	01 96       	adiw	r24, 0x01	; 1
 5e2:	10 d0       	rcall	.+32     	; 0x604 <vfprintf>
 5e4:	ef 81       	ldd	r30, Y+7	; 0x07
 5e6:	f8 85       	ldd	r31, Y+8	; 0x08
 5e8:	e0 0f       	add	r30, r16
 5ea:	f1 1f       	adc	r31, r17
 5ec:	10 82       	st	Z, r1
 5ee:	2e 96       	adiw	r28, 0x0e	; 14
 5f0:	0f b6       	in	r0, 0x3f	; 63
 5f2:	f8 94       	cli
 5f4:	de bf       	out	0x3e, r29	; 62
 5f6:	0f be       	out	0x3f, r0	; 63
 5f8:	cd bf       	out	0x3d, r28	; 61
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	1f 91       	pop	r17
 600:	0f 91       	pop	r16
 602:	08 95       	ret

00000604 <vfprintf>:
 604:	2f 92       	push	r2
 606:	3f 92       	push	r3
 608:	4f 92       	push	r4
 60a:	5f 92       	push	r5
 60c:	6f 92       	push	r6
 60e:	7f 92       	push	r7
 610:	8f 92       	push	r8
 612:	9f 92       	push	r9
 614:	af 92       	push	r10
 616:	bf 92       	push	r11
 618:	cf 92       	push	r12
 61a:	df 92       	push	r13
 61c:	ef 92       	push	r14
 61e:	ff 92       	push	r15
 620:	0f 93       	push	r16
 622:	1f 93       	push	r17
 624:	cf 93       	push	r28
 626:	df 93       	push	r29
 628:	cd b7       	in	r28, 0x3d	; 61
 62a:	de b7       	in	r29, 0x3e	; 62
 62c:	2b 97       	sbiw	r28, 0x0b	; 11
 62e:	0f b6       	in	r0, 0x3f	; 63
 630:	f8 94       	cli
 632:	de bf       	out	0x3e, r29	; 62
 634:	0f be       	out	0x3f, r0	; 63
 636:	cd bf       	out	0x3d, r28	; 61
 638:	6c 01       	movw	r12, r24
 63a:	7b 01       	movw	r14, r22
 63c:	8a 01       	movw	r16, r20
 63e:	fc 01       	movw	r30, r24
 640:	17 82       	std	Z+7, r1	; 0x07
 642:	16 82       	std	Z+6, r1	; 0x06
 644:	83 81       	ldd	r24, Z+3	; 0x03
 646:	81 ff       	sbrs	r24, 1
 648:	bf c1       	rjmp	.+894    	; 0x9c8 <vfprintf+0x3c4>
 64a:	ce 01       	movw	r24, r28
 64c:	01 96       	adiw	r24, 0x01	; 1
 64e:	3c 01       	movw	r6, r24
 650:	f6 01       	movw	r30, r12
 652:	93 81       	ldd	r25, Z+3	; 0x03
 654:	f7 01       	movw	r30, r14
 656:	93 fd       	sbrc	r25, 3
 658:	85 91       	lpm	r24, Z+
 65a:	93 ff       	sbrs	r25, 3
 65c:	81 91       	ld	r24, Z+
 65e:	7f 01       	movw	r14, r30
 660:	88 23       	and	r24, r24
 662:	09 f4       	brne	.+2      	; 0x666 <vfprintf+0x62>
 664:	ad c1       	rjmp	.+858    	; 0x9c0 <vfprintf+0x3bc>
 666:	85 32       	cpi	r24, 0x25	; 37
 668:	39 f4       	brne	.+14     	; 0x678 <vfprintf+0x74>
 66a:	93 fd       	sbrc	r25, 3
 66c:	85 91       	lpm	r24, Z+
 66e:	93 ff       	sbrs	r25, 3
 670:	81 91       	ld	r24, Z+
 672:	7f 01       	movw	r14, r30
 674:	85 32       	cpi	r24, 0x25	; 37
 676:	21 f4       	brne	.+8      	; 0x680 <vfprintf+0x7c>
 678:	b6 01       	movw	r22, r12
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	d6 d1       	rcall	.+940    	; 0xa2a <fputc>
 67e:	e8 cf       	rjmp	.-48     	; 0x650 <vfprintf+0x4c>
 680:	91 2c       	mov	r9, r1
 682:	21 2c       	mov	r2, r1
 684:	31 2c       	mov	r3, r1
 686:	ff e1       	ldi	r31, 0x1F	; 31
 688:	f3 15       	cp	r31, r3
 68a:	d8 f0       	brcs	.+54     	; 0x6c2 <vfprintf+0xbe>
 68c:	8b 32       	cpi	r24, 0x2B	; 43
 68e:	79 f0       	breq	.+30     	; 0x6ae <vfprintf+0xaa>
 690:	38 f4       	brcc	.+14     	; 0x6a0 <vfprintf+0x9c>
 692:	80 32       	cpi	r24, 0x20	; 32
 694:	79 f0       	breq	.+30     	; 0x6b4 <vfprintf+0xb0>
 696:	83 32       	cpi	r24, 0x23	; 35
 698:	a1 f4       	brne	.+40     	; 0x6c2 <vfprintf+0xbe>
 69a:	23 2d       	mov	r18, r3
 69c:	20 61       	ori	r18, 0x10	; 16
 69e:	1d c0       	rjmp	.+58     	; 0x6da <vfprintf+0xd6>
 6a0:	8d 32       	cpi	r24, 0x2D	; 45
 6a2:	61 f0       	breq	.+24     	; 0x6bc <vfprintf+0xb8>
 6a4:	80 33       	cpi	r24, 0x30	; 48
 6a6:	69 f4       	brne	.+26     	; 0x6c2 <vfprintf+0xbe>
 6a8:	23 2d       	mov	r18, r3
 6aa:	21 60       	ori	r18, 0x01	; 1
 6ac:	16 c0       	rjmp	.+44     	; 0x6da <vfprintf+0xd6>
 6ae:	83 2d       	mov	r24, r3
 6b0:	82 60       	ori	r24, 0x02	; 2
 6b2:	38 2e       	mov	r3, r24
 6b4:	e3 2d       	mov	r30, r3
 6b6:	e4 60       	ori	r30, 0x04	; 4
 6b8:	3e 2e       	mov	r3, r30
 6ba:	2a c0       	rjmp	.+84     	; 0x710 <vfprintf+0x10c>
 6bc:	f3 2d       	mov	r31, r3
 6be:	f8 60       	ori	r31, 0x08	; 8
 6c0:	1d c0       	rjmp	.+58     	; 0x6fc <vfprintf+0xf8>
 6c2:	37 fc       	sbrc	r3, 7
 6c4:	2d c0       	rjmp	.+90     	; 0x720 <vfprintf+0x11c>
 6c6:	20 ed       	ldi	r18, 0xD0	; 208
 6c8:	28 0f       	add	r18, r24
 6ca:	2a 30       	cpi	r18, 0x0A	; 10
 6cc:	40 f0       	brcs	.+16     	; 0x6de <vfprintf+0xda>
 6ce:	8e 32       	cpi	r24, 0x2E	; 46
 6d0:	b9 f4       	brne	.+46     	; 0x700 <vfprintf+0xfc>
 6d2:	36 fc       	sbrc	r3, 6
 6d4:	75 c1       	rjmp	.+746    	; 0x9c0 <vfprintf+0x3bc>
 6d6:	23 2d       	mov	r18, r3
 6d8:	20 64       	ori	r18, 0x40	; 64
 6da:	32 2e       	mov	r3, r18
 6dc:	19 c0       	rjmp	.+50     	; 0x710 <vfprintf+0x10c>
 6de:	36 fe       	sbrs	r3, 6
 6e0:	06 c0       	rjmp	.+12     	; 0x6ee <vfprintf+0xea>
 6e2:	8a e0       	ldi	r24, 0x0A	; 10
 6e4:	98 9e       	mul	r9, r24
 6e6:	20 0d       	add	r18, r0
 6e8:	11 24       	eor	r1, r1
 6ea:	92 2e       	mov	r9, r18
 6ec:	11 c0       	rjmp	.+34     	; 0x710 <vfprintf+0x10c>
 6ee:	ea e0       	ldi	r30, 0x0A	; 10
 6f0:	2e 9e       	mul	r2, r30
 6f2:	20 0d       	add	r18, r0
 6f4:	11 24       	eor	r1, r1
 6f6:	22 2e       	mov	r2, r18
 6f8:	f3 2d       	mov	r31, r3
 6fa:	f0 62       	ori	r31, 0x20	; 32
 6fc:	3f 2e       	mov	r3, r31
 6fe:	08 c0       	rjmp	.+16     	; 0x710 <vfprintf+0x10c>
 700:	8c 36       	cpi	r24, 0x6C	; 108
 702:	21 f4       	brne	.+8      	; 0x70c <vfprintf+0x108>
 704:	83 2d       	mov	r24, r3
 706:	80 68       	ori	r24, 0x80	; 128
 708:	38 2e       	mov	r3, r24
 70a:	02 c0       	rjmp	.+4      	; 0x710 <vfprintf+0x10c>
 70c:	88 36       	cpi	r24, 0x68	; 104
 70e:	41 f4       	brne	.+16     	; 0x720 <vfprintf+0x11c>
 710:	f7 01       	movw	r30, r14
 712:	93 fd       	sbrc	r25, 3
 714:	85 91       	lpm	r24, Z+
 716:	93 ff       	sbrs	r25, 3
 718:	81 91       	ld	r24, Z+
 71a:	7f 01       	movw	r14, r30
 71c:	81 11       	cpse	r24, r1
 71e:	b3 cf       	rjmp	.-154    	; 0x686 <vfprintf+0x82>
 720:	98 2f       	mov	r25, r24
 722:	9f 7d       	andi	r25, 0xDF	; 223
 724:	95 54       	subi	r25, 0x45	; 69
 726:	93 30       	cpi	r25, 0x03	; 3
 728:	28 f4       	brcc	.+10     	; 0x734 <vfprintf+0x130>
 72a:	0c 5f       	subi	r16, 0xFC	; 252
 72c:	1f 4f       	sbci	r17, 0xFF	; 255
 72e:	9f e3       	ldi	r25, 0x3F	; 63
 730:	99 83       	std	Y+1, r25	; 0x01
 732:	0d c0       	rjmp	.+26     	; 0x74e <vfprintf+0x14a>
 734:	83 36       	cpi	r24, 0x63	; 99
 736:	31 f0       	breq	.+12     	; 0x744 <vfprintf+0x140>
 738:	83 37       	cpi	r24, 0x73	; 115
 73a:	71 f0       	breq	.+28     	; 0x758 <vfprintf+0x154>
 73c:	83 35       	cpi	r24, 0x53	; 83
 73e:	09 f0       	breq	.+2      	; 0x742 <vfprintf+0x13e>
 740:	55 c0       	rjmp	.+170    	; 0x7ec <vfprintf+0x1e8>
 742:	20 c0       	rjmp	.+64     	; 0x784 <vfprintf+0x180>
 744:	f8 01       	movw	r30, r16
 746:	80 81       	ld	r24, Z
 748:	89 83       	std	Y+1, r24	; 0x01
 74a:	0e 5f       	subi	r16, 0xFE	; 254
 74c:	1f 4f       	sbci	r17, 0xFF	; 255
 74e:	88 24       	eor	r8, r8
 750:	83 94       	inc	r8
 752:	91 2c       	mov	r9, r1
 754:	53 01       	movw	r10, r6
 756:	12 c0       	rjmp	.+36     	; 0x77c <vfprintf+0x178>
 758:	28 01       	movw	r4, r16
 75a:	f2 e0       	ldi	r31, 0x02	; 2
 75c:	4f 0e       	add	r4, r31
 75e:	51 1c       	adc	r5, r1
 760:	f8 01       	movw	r30, r16
 762:	a0 80       	ld	r10, Z
 764:	b1 80       	ldd	r11, Z+1	; 0x01
 766:	36 fe       	sbrs	r3, 6
 768:	03 c0       	rjmp	.+6      	; 0x770 <vfprintf+0x16c>
 76a:	69 2d       	mov	r22, r9
 76c:	70 e0       	ldi	r23, 0x00	; 0
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x170>
 770:	6f ef       	ldi	r22, 0xFF	; 255
 772:	7f ef       	ldi	r23, 0xFF	; 255
 774:	c5 01       	movw	r24, r10
 776:	4e d1       	rcall	.+668    	; 0xa14 <strnlen>
 778:	4c 01       	movw	r8, r24
 77a:	82 01       	movw	r16, r4
 77c:	f3 2d       	mov	r31, r3
 77e:	ff 77       	andi	r31, 0x7F	; 127
 780:	3f 2e       	mov	r3, r31
 782:	15 c0       	rjmp	.+42     	; 0x7ae <vfprintf+0x1aa>
 784:	28 01       	movw	r4, r16
 786:	22 e0       	ldi	r18, 0x02	; 2
 788:	42 0e       	add	r4, r18
 78a:	51 1c       	adc	r5, r1
 78c:	f8 01       	movw	r30, r16
 78e:	a0 80       	ld	r10, Z
 790:	b1 80       	ldd	r11, Z+1	; 0x01
 792:	36 fe       	sbrs	r3, 6
 794:	03 c0       	rjmp	.+6      	; 0x79c <vfprintf+0x198>
 796:	69 2d       	mov	r22, r9
 798:	70 e0       	ldi	r23, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <vfprintf+0x19c>
 79c:	6f ef       	ldi	r22, 0xFF	; 255
 79e:	7f ef       	ldi	r23, 0xFF	; 255
 7a0:	c5 01       	movw	r24, r10
 7a2:	2d d1       	rcall	.+602    	; 0x9fe <strnlen_P>
 7a4:	4c 01       	movw	r8, r24
 7a6:	f3 2d       	mov	r31, r3
 7a8:	f0 68       	ori	r31, 0x80	; 128
 7aa:	3f 2e       	mov	r3, r31
 7ac:	82 01       	movw	r16, r4
 7ae:	33 fc       	sbrc	r3, 3
 7b0:	19 c0       	rjmp	.+50     	; 0x7e4 <vfprintf+0x1e0>
 7b2:	82 2d       	mov	r24, r2
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	88 16       	cp	r8, r24
 7b8:	99 06       	cpc	r9, r25
 7ba:	a0 f4       	brcc	.+40     	; 0x7e4 <vfprintf+0x1e0>
 7bc:	b6 01       	movw	r22, r12
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	33 d1       	rcall	.+614    	; 0xa2a <fputc>
 7c4:	2a 94       	dec	r2
 7c6:	f5 cf       	rjmp	.-22     	; 0x7b2 <vfprintf+0x1ae>
 7c8:	f5 01       	movw	r30, r10
 7ca:	37 fc       	sbrc	r3, 7
 7cc:	85 91       	lpm	r24, Z+
 7ce:	37 fe       	sbrs	r3, 7
 7d0:	81 91       	ld	r24, Z+
 7d2:	5f 01       	movw	r10, r30
 7d4:	b6 01       	movw	r22, r12
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	28 d1       	rcall	.+592    	; 0xa2a <fputc>
 7da:	21 10       	cpse	r2, r1
 7dc:	2a 94       	dec	r2
 7de:	21 e0       	ldi	r18, 0x01	; 1
 7e0:	82 1a       	sub	r8, r18
 7e2:	91 08       	sbc	r9, r1
 7e4:	81 14       	cp	r8, r1
 7e6:	91 04       	cpc	r9, r1
 7e8:	79 f7       	brne	.-34     	; 0x7c8 <vfprintf+0x1c4>
 7ea:	e1 c0       	rjmp	.+450    	; 0x9ae <vfprintf+0x3aa>
 7ec:	84 36       	cpi	r24, 0x64	; 100
 7ee:	11 f0       	breq	.+4      	; 0x7f4 <vfprintf+0x1f0>
 7f0:	89 36       	cpi	r24, 0x69	; 105
 7f2:	39 f5       	brne	.+78     	; 0x842 <vfprintf+0x23e>
 7f4:	f8 01       	movw	r30, r16
 7f6:	37 fe       	sbrs	r3, 7
 7f8:	07 c0       	rjmp	.+14     	; 0x808 <vfprintf+0x204>
 7fa:	60 81       	ld	r22, Z
 7fc:	71 81       	ldd	r23, Z+1	; 0x01
 7fe:	82 81       	ldd	r24, Z+2	; 0x02
 800:	93 81       	ldd	r25, Z+3	; 0x03
 802:	0c 5f       	subi	r16, 0xFC	; 252
 804:	1f 4f       	sbci	r17, 0xFF	; 255
 806:	08 c0       	rjmp	.+16     	; 0x818 <vfprintf+0x214>
 808:	60 81       	ld	r22, Z
 80a:	71 81       	ldd	r23, Z+1	; 0x01
 80c:	07 2e       	mov	r0, r23
 80e:	00 0c       	add	r0, r0
 810:	88 0b       	sbc	r24, r24
 812:	99 0b       	sbc	r25, r25
 814:	0e 5f       	subi	r16, 0xFE	; 254
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	f3 2d       	mov	r31, r3
 81a:	ff 76       	andi	r31, 0x6F	; 111
 81c:	3f 2e       	mov	r3, r31
 81e:	97 ff       	sbrs	r25, 7
 820:	09 c0       	rjmp	.+18     	; 0x834 <vfprintf+0x230>
 822:	90 95       	com	r25
 824:	80 95       	com	r24
 826:	70 95       	com	r23
 828:	61 95       	neg	r22
 82a:	7f 4f       	sbci	r23, 0xFF	; 255
 82c:	8f 4f       	sbci	r24, 0xFF	; 255
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	f0 68       	ori	r31, 0x80	; 128
 832:	3f 2e       	mov	r3, r31
 834:	2a e0       	ldi	r18, 0x0A	; 10
 836:	30 e0       	ldi	r19, 0x00	; 0
 838:	a3 01       	movw	r20, r6
 83a:	33 d1       	rcall	.+614    	; 0xaa2 <__ultoa_invert>
 83c:	88 2e       	mov	r8, r24
 83e:	86 18       	sub	r8, r6
 840:	44 c0       	rjmp	.+136    	; 0x8ca <vfprintf+0x2c6>
 842:	85 37       	cpi	r24, 0x75	; 117
 844:	31 f4       	brne	.+12     	; 0x852 <vfprintf+0x24e>
 846:	23 2d       	mov	r18, r3
 848:	2f 7e       	andi	r18, 0xEF	; 239
 84a:	b2 2e       	mov	r11, r18
 84c:	2a e0       	ldi	r18, 0x0A	; 10
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	25 c0       	rjmp	.+74     	; 0x89c <vfprintf+0x298>
 852:	93 2d       	mov	r25, r3
 854:	99 7f       	andi	r25, 0xF9	; 249
 856:	b9 2e       	mov	r11, r25
 858:	8f 36       	cpi	r24, 0x6F	; 111
 85a:	c1 f0       	breq	.+48     	; 0x88c <vfprintf+0x288>
 85c:	18 f4       	brcc	.+6      	; 0x864 <vfprintf+0x260>
 85e:	88 35       	cpi	r24, 0x58	; 88
 860:	79 f0       	breq	.+30     	; 0x880 <vfprintf+0x27c>
 862:	ae c0       	rjmp	.+348    	; 0x9c0 <vfprintf+0x3bc>
 864:	80 37       	cpi	r24, 0x70	; 112
 866:	19 f0       	breq	.+6      	; 0x86e <vfprintf+0x26a>
 868:	88 37       	cpi	r24, 0x78	; 120
 86a:	21 f0       	breq	.+8      	; 0x874 <vfprintf+0x270>
 86c:	a9 c0       	rjmp	.+338    	; 0x9c0 <vfprintf+0x3bc>
 86e:	e9 2f       	mov	r30, r25
 870:	e0 61       	ori	r30, 0x10	; 16
 872:	be 2e       	mov	r11, r30
 874:	b4 fe       	sbrs	r11, 4
 876:	0d c0       	rjmp	.+26     	; 0x892 <vfprintf+0x28e>
 878:	fb 2d       	mov	r31, r11
 87a:	f4 60       	ori	r31, 0x04	; 4
 87c:	bf 2e       	mov	r11, r31
 87e:	09 c0       	rjmp	.+18     	; 0x892 <vfprintf+0x28e>
 880:	34 fe       	sbrs	r3, 4
 882:	0a c0       	rjmp	.+20     	; 0x898 <vfprintf+0x294>
 884:	29 2f       	mov	r18, r25
 886:	26 60       	ori	r18, 0x06	; 6
 888:	b2 2e       	mov	r11, r18
 88a:	06 c0       	rjmp	.+12     	; 0x898 <vfprintf+0x294>
 88c:	28 e0       	ldi	r18, 0x08	; 8
 88e:	30 e0       	ldi	r19, 0x00	; 0
 890:	05 c0       	rjmp	.+10     	; 0x89c <vfprintf+0x298>
 892:	20 e1       	ldi	r18, 0x10	; 16
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	02 c0       	rjmp	.+4      	; 0x89c <vfprintf+0x298>
 898:	20 e1       	ldi	r18, 0x10	; 16
 89a:	32 e0       	ldi	r19, 0x02	; 2
 89c:	f8 01       	movw	r30, r16
 89e:	b7 fe       	sbrs	r11, 7
 8a0:	07 c0       	rjmp	.+14     	; 0x8b0 <vfprintf+0x2ac>
 8a2:	60 81       	ld	r22, Z
 8a4:	71 81       	ldd	r23, Z+1	; 0x01
 8a6:	82 81       	ldd	r24, Z+2	; 0x02
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	0c 5f       	subi	r16, 0xFC	; 252
 8ac:	1f 4f       	sbci	r17, 0xFF	; 255
 8ae:	06 c0       	rjmp	.+12     	; 0x8bc <vfprintf+0x2b8>
 8b0:	60 81       	ld	r22, Z
 8b2:	71 81       	ldd	r23, Z+1	; 0x01
 8b4:	80 e0       	ldi	r24, 0x00	; 0
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	0e 5f       	subi	r16, 0xFE	; 254
 8ba:	1f 4f       	sbci	r17, 0xFF	; 255
 8bc:	a3 01       	movw	r20, r6
 8be:	f1 d0       	rcall	.+482    	; 0xaa2 <__ultoa_invert>
 8c0:	88 2e       	mov	r8, r24
 8c2:	86 18       	sub	r8, r6
 8c4:	fb 2d       	mov	r31, r11
 8c6:	ff 77       	andi	r31, 0x7F	; 127
 8c8:	3f 2e       	mov	r3, r31
 8ca:	36 fe       	sbrs	r3, 6
 8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <vfprintf+0x2e4>
 8ce:	23 2d       	mov	r18, r3
 8d0:	2e 7f       	andi	r18, 0xFE	; 254
 8d2:	a2 2e       	mov	r10, r18
 8d4:	89 14       	cp	r8, r9
 8d6:	58 f4       	brcc	.+22     	; 0x8ee <vfprintf+0x2ea>
 8d8:	34 fe       	sbrs	r3, 4
 8da:	0b c0       	rjmp	.+22     	; 0x8f2 <vfprintf+0x2ee>
 8dc:	32 fc       	sbrc	r3, 2
 8de:	09 c0       	rjmp	.+18     	; 0x8f2 <vfprintf+0x2ee>
 8e0:	83 2d       	mov	r24, r3
 8e2:	8e 7e       	andi	r24, 0xEE	; 238
 8e4:	a8 2e       	mov	r10, r24
 8e6:	05 c0       	rjmp	.+10     	; 0x8f2 <vfprintf+0x2ee>
 8e8:	b8 2c       	mov	r11, r8
 8ea:	a3 2c       	mov	r10, r3
 8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <vfprintf+0x2f0>
 8ee:	b8 2c       	mov	r11, r8
 8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <vfprintf+0x2f0>
 8f2:	b9 2c       	mov	r11, r9
 8f4:	a4 fe       	sbrs	r10, 4
 8f6:	0f c0       	rjmp	.+30     	; 0x916 <vfprintf+0x312>
 8f8:	fe 01       	movw	r30, r28
 8fa:	e8 0d       	add	r30, r8
 8fc:	f1 1d       	adc	r31, r1
 8fe:	80 81       	ld	r24, Z
 900:	80 33       	cpi	r24, 0x30	; 48
 902:	21 f4       	brne	.+8      	; 0x90c <vfprintf+0x308>
 904:	9a 2d       	mov	r25, r10
 906:	99 7e       	andi	r25, 0xE9	; 233
 908:	a9 2e       	mov	r10, r25
 90a:	09 c0       	rjmp	.+18     	; 0x91e <vfprintf+0x31a>
 90c:	a2 fe       	sbrs	r10, 2
 90e:	06 c0       	rjmp	.+12     	; 0x91c <vfprintf+0x318>
 910:	b3 94       	inc	r11
 912:	b3 94       	inc	r11
 914:	04 c0       	rjmp	.+8      	; 0x91e <vfprintf+0x31a>
 916:	8a 2d       	mov	r24, r10
 918:	86 78       	andi	r24, 0x86	; 134
 91a:	09 f0       	breq	.+2      	; 0x91e <vfprintf+0x31a>
 91c:	b3 94       	inc	r11
 91e:	a3 fc       	sbrc	r10, 3
 920:	10 c0       	rjmp	.+32     	; 0x942 <vfprintf+0x33e>
 922:	a0 fe       	sbrs	r10, 0
 924:	06 c0       	rjmp	.+12     	; 0x932 <vfprintf+0x32e>
 926:	b2 14       	cp	r11, r2
 928:	80 f4       	brcc	.+32     	; 0x94a <vfprintf+0x346>
 92a:	28 0c       	add	r2, r8
 92c:	92 2c       	mov	r9, r2
 92e:	9b 18       	sub	r9, r11
 930:	0d c0       	rjmp	.+26     	; 0x94c <vfprintf+0x348>
 932:	b2 14       	cp	r11, r2
 934:	58 f4       	brcc	.+22     	; 0x94c <vfprintf+0x348>
 936:	b6 01       	movw	r22, r12
 938:	80 e2       	ldi	r24, 0x20	; 32
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	76 d0       	rcall	.+236    	; 0xa2a <fputc>
 93e:	b3 94       	inc	r11
 940:	f8 cf       	rjmp	.-16     	; 0x932 <vfprintf+0x32e>
 942:	b2 14       	cp	r11, r2
 944:	18 f4       	brcc	.+6      	; 0x94c <vfprintf+0x348>
 946:	2b 18       	sub	r2, r11
 948:	02 c0       	rjmp	.+4      	; 0x94e <vfprintf+0x34a>
 94a:	98 2c       	mov	r9, r8
 94c:	21 2c       	mov	r2, r1
 94e:	a4 fe       	sbrs	r10, 4
 950:	0f c0       	rjmp	.+30     	; 0x970 <vfprintf+0x36c>
 952:	b6 01       	movw	r22, r12
 954:	80 e3       	ldi	r24, 0x30	; 48
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	68 d0       	rcall	.+208    	; 0xa2a <fputc>
 95a:	a2 fe       	sbrs	r10, 2
 95c:	16 c0       	rjmp	.+44     	; 0x98a <vfprintf+0x386>
 95e:	a1 fc       	sbrc	r10, 1
 960:	03 c0       	rjmp	.+6      	; 0x968 <vfprintf+0x364>
 962:	88 e7       	ldi	r24, 0x78	; 120
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	02 c0       	rjmp	.+4      	; 0x96c <vfprintf+0x368>
 968:	88 e5       	ldi	r24, 0x58	; 88
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	b6 01       	movw	r22, r12
 96e:	0c c0       	rjmp	.+24     	; 0x988 <vfprintf+0x384>
 970:	8a 2d       	mov	r24, r10
 972:	86 78       	andi	r24, 0x86	; 134
 974:	51 f0       	breq	.+20     	; 0x98a <vfprintf+0x386>
 976:	a1 fe       	sbrs	r10, 1
 978:	02 c0       	rjmp	.+4      	; 0x97e <vfprintf+0x37a>
 97a:	8b e2       	ldi	r24, 0x2B	; 43
 97c:	01 c0       	rjmp	.+2      	; 0x980 <vfprintf+0x37c>
 97e:	80 e2       	ldi	r24, 0x20	; 32
 980:	a7 fc       	sbrc	r10, 7
 982:	8d e2       	ldi	r24, 0x2D	; 45
 984:	b6 01       	movw	r22, r12
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	50 d0       	rcall	.+160    	; 0xa2a <fputc>
 98a:	89 14       	cp	r8, r9
 98c:	30 f4       	brcc	.+12     	; 0x99a <vfprintf+0x396>
 98e:	b6 01       	movw	r22, r12
 990:	80 e3       	ldi	r24, 0x30	; 48
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	4a d0       	rcall	.+148    	; 0xa2a <fputc>
 996:	9a 94       	dec	r9
 998:	f8 cf       	rjmp	.-16     	; 0x98a <vfprintf+0x386>
 99a:	8a 94       	dec	r8
 99c:	f3 01       	movw	r30, r6
 99e:	e8 0d       	add	r30, r8
 9a0:	f1 1d       	adc	r31, r1
 9a2:	80 81       	ld	r24, Z
 9a4:	b6 01       	movw	r22, r12
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	40 d0       	rcall	.+128    	; 0xa2a <fputc>
 9aa:	81 10       	cpse	r8, r1
 9ac:	f6 cf       	rjmp	.-20     	; 0x99a <vfprintf+0x396>
 9ae:	22 20       	and	r2, r2
 9b0:	09 f4       	brne	.+2      	; 0x9b4 <vfprintf+0x3b0>
 9b2:	4e ce       	rjmp	.-868    	; 0x650 <vfprintf+0x4c>
 9b4:	b6 01       	movw	r22, r12
 9b6:	80 e2       	ldi	r24, 0x20	; 32
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	37 d0       	rcall	.+110    	; 0xa2a <fputc>
 9bc:	2a 94       	dec	r2
 9be:	f7 cf       	rjmp	.-18     	; 0x9ae <vfprintf+0x3aa>
 9c0:	f6 01       	movw	r30, r12
 9c2:	86 81       	ldd	r24, Z+6	; 0x06
 9c4:	97 81       	ldd	r25, Z+7	; 0x07
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <vfprintf+0x3c8>
 9c8:	8f ef       	ldi	r24, 0xFF	; 255
 9ca:	9f ef       	ldi	r25, 0xFF	; 255
 9cc:	2b 96       	adiw	r28, 0x0b	; 11
 9ce:	0f b6       	in	r0, 0x3f	; 63
 9d0:	f8 94       	cli
 9d2:	de bf       	out	0x3e, r29	; 62
 9d4:	0f be       	out	0x3f, r0	; 63
 9d6:	cd bf       	out	0x3d, r28	; 61
 9d8:	df 91       	pop	r29
 9da:	cf 91       	pop	r28
 9dc:	1f 91       	pop	r17
 9de:	0f 91       	pop	r16
 9e0:	ff 90       	pop	r15
 9e2:	ef 90       	pop	r14
 9e4:	df 90       	pop	r13
 9e6:	cf 90       	pop	r12
 9e8:	bf 90       	pop	r11
 9ea:	af 90       	pop	r10
 9ec:	9f 90       	pop	r9
 9ee:	8f 90       	pop	r8
 9f0:	7f 90       	pop	r7
 9f2:	6f 90       	pop	r6
 9f4:	5f 90       	pop	r5
 9f6:	4f 90       	pop	r4
 9f8:	3f 90       	pop	r3
 9fa:	2f 90       	pop	r2
 9fc:	08 95       	ret

000009fe <strnlen_P>:
 9fe:	fc 01       	movw	r30, r24
 a00:	05 90       	lpm	r0, Z+
 a02:	61 50       	subi	r22, 0x01	; 1
 a04:	70 40       	sbci	r23, 0x00	; 0
 a06:	01 10       	cpse	r0, r1
 a08:	d8 f7       	brcc	.-10     	; 0xa00 <strnlen_P+0x2>
 a0a:	80 95       	com	r24
 a0c:	90 95       	com	r25
 a0e:	8e 0f       	add	r24, r30
 a10:	9f 1f       	adc	r25, r31
 a12:	08 95       	ret

00000a14 <strnlen>:
 a14:	fc 01       	movw	r30, r24
 a16:	61 50       	subi	r22, 0x01	; 1
 a18:	70 40       	sbci	r23, 0x00	; 0
 a1a:	01 90       	ld	r0, Z+
 a1c:	01 10       	cpse	r0, r1
 a1e:	d8 f7       	brcc	.-10     	; 0xa16 <strnlen+0x2>
 a20:	80 95       	com	r24
 a22:	90 95       	com	r25
 a24:	8e 0f       	add	r24, r30
 a26:	9f 1f       	adc	r25, r31
 a28:	08 95       	ret

00000a2a <fputc>:
 a2a:	0f 93       	push	r16
 a2c:	1f 93       	push	r17
 a2e:	cf 93       	push	r28
 a30:	df 93       	push	r29
 a32:	fb 01       	movw	r30, r22
 a34:	23 81       	ldd	r18, Z+3	; 0x03
 a36:	21 fd       	sbrc	r18, 1
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <fputc+0x16>
 a3a:	8f ef       	ldi	r24, 0xFF	; 255
 a3c:	9f ef       	ldi	r25, 0xFF	; 255
 a3e:	2c c0       	rjmp	.+88     	; 0xa98 <fputc+0x6e>
 a40:	22 ff       	sbrs	r18, 2
 a42:	16 c0       	rjmp	.+44     	; 0xa70 <fputc+0x46>
 a44:	46 81       	ldd	r20, Z+6	; 0x06
 a46:	57 81       	ldd	r21, Z+7	; 0x07
 a48:	24 81       	ldd	r18, Z+4	; 0x04
 a4a:	35 81       	ldd	r19, Z+5	; 0x05
 a4c:	42 17       	cp	r20, r18
 a4e:	53 07       	cpc	r21, r19
 a50:	44 f4       	brge	.+16     	; 0xa62 <fputc+0x38>
 a52:	a0 81       	ld	r26, Z
 a54:	b1 81       	ldd	r27, Z+1	; 0x01
 a56:	9d 01       	movw	r18, r26
 a58:	2f 5f       	subi	r18, 0xFF	; 255
 a5a:	3f 4f       	sbci	r19, 0xFF	; 255
 a5c:	31 83       	std	Z+1, r19	; 0x01
 a5e:	20 83       	st	Z, r18
 a60:	8c 93       	st	X, r24
 a62:	26 81       	ldd	r18, Z+6	; 0x06
 a64:	37 81       	ldd	r19, Z+7	; 0x07
 a66:	2f 5f       	subi	r18, 0xFF	; 255
 a68:	3f 4f       	sbci	r19, 0xFF	; 255
 a6a:	37 83       	std	Z+7, r19	; 0x07
 a6c:	26 83       	std	Z+6, r18	; 0x06
 a6e:	14 c0       	rjmp	.+40     	; 0xa98 <fputc+0x6e>
 a70:	8b 01       	movw	r16, r22
 a72:	ec 01       	movw	r28, r24
 a74:	fb 01       	movw	r30, r22
 a76:	00 84       	ldd	r0, Z+8	; 0x08
 a78:	f1 85       	ldd	r31, Z+9	; 0x09
 a7a:	e0 2d       	mov	r30, r0
 a7c:	19 95       	eicall
 a7e:	89 2b       	or	r24, r25
 a80:	e1 f6       	brne	.-72     	; 0xa3a <fputc+0x10>
 a82:	d8 01       	movw	r26, r16
 a84:	16 96       	adiw	r26, 0x06	; 6
 a86:	8d 91       	ld	r24, X+
 a88:	9c 91       	ld	r25, X
 a8a:	17 97       	sbiw	r26, 0x07	; 7
 a8c:	01 96       	adiw	r24, 0x01	; 1
 a8e:	17 96       	adiw	r26, 0x07	; 7
 a90:	9c 93       	st	X, r25
 a92:	8e 93       	st	-X, r24
 a94:	16 97       	sbiw	r26, 0x06	; 6
 a96:	ce 01       	movw	r24, r28
 a98:	df 91       	pop	r29
 a9a:	cf 91       	pop	r28
 a9c:	1f 91       	pop	r17
 a9e:	0f 91       	pop	r16
 aa0:	08 95       	ret

00000aa2 <__ultoa_invert>:
 aa2:	fa 01       	movw	r30, r20
 aa4:	aa 27       	eor	r26, r26
 aa6:	28 30       	cpi	r18, 0x08	; 8
 aa8:	51 f1       	breq	.+84     	; 0xafe <__ultoa_invert+0x5c>
 aaa:	20 31       	cpi	r18, 0x10	; 16
 aac:	81 f1       	breq	.+96     	; 0xb0e <__ultoa_invert+0x6c>
 aae:	e8 94       	clt
 ab0:	6f 93       	push	r22
 ab2:	6e 7f       	andi	r22, 0xFE	; 254
 ab4:	6e 5f       	subi	r22, 0xFE	; 254
 ab6:	7f 4f       	sbci	r23, 0xFF	; 255
 ab8:	8f 4f       	sbci	r24, 0xFF	; 255
 aba:	9f 4f       	sbci	r25, 0xFF	; 255
 abc:	af 4f       	sbci	r26, 0xFF	; 255
 abe:	b1 e0       	ldi	r27, 0x01	; 1
 ac0:	3e d0       	rcall	.+124    	; 0xb3e <__ultoa_invert+0x9c>
 ac2:	b4 e0       	ldi	r27, 0x04	; 4
 ac4:	3c d0       	rcall	.+120    	; 0xb3e <__ultoa_invert+0x9c>
 ac6:	67 0f       	add	r22, r23
 ac8:	78 1f       	adc	r23, r24
 aca:	89 1f       	adc	r24, r25
 acc:	9a 1f       	adc	r25, r26
 ace:	a1 1d       	adc	r26, r1
 ad0:	68 0f       	add	r22, r24
 ad2:	79 1f       	adc	r23, r25
 ad4:	8a 1f       	adc	r24, r26
 ad6:	91 1d       	adc	r25, r1
 ad8:	a1 1d       	adc	r26, r1
 ada:	6a 0f       	add	r22, r26
 adc:	71 1d       	adc	r23, r1
 ade:	81 1d       	adc	r24, r1
 ae0:	91 1d       	adc	r25, r1
 ae2:	a1 1d       	adc	r26, r1
 ae4:	20 d0       	rcall	.+64     	; 0xb26 <__ultoa_invert+0x84>
 ae6:	09 f4       	brne	.+2      	; 0xaea <__ultoa_invert+0x48>
 ae8:	68 94       	set
 aea:	3f 91       	pop	r19
 aec:	2a e0       	ldi	r18, 0x0A	; 10
 aee:	26 9f       	mul	r18, r22
 af0:	11 24       	eor	r1, r1
 af2:	30 19       	sub	r19, r0
 af4:	30 5d       	subi	r19, 0xD0	; 208
 af6:	31 93       	st	Z+, r19
 af8:	de f6       	brtc	.-74     	; 0xab0 <__ultoa_invert+0xe>
 afa:	cf 01       	movw	r24, r30
 afc:	08 95       	ret
 afe:	46 2f       	mov	r20, r22
 b00:	47 70       	andi	r20, 0x07	; 7
 b02:	40 5d       	subi	r20, 0xD0	; 208
 b04:	41 93       	st	Z+, r20
 b06:	b3 e0       	ldi	r27, 0x03	; 3
 b08:	0f d0       	rcall	.+30     	; 0xb28 <__ultoa_invert+0x86>
 b0a:	c9 f7       	brne	.-14     	; 0xafe <__ultoa_invert+0x5c>
 b0c:	f6 cf       	rjmp	.-20     	; 0xafa <__ultoa_invert+0x58>
 b0e:	46 2f       	mov	r20, r22
 b10:	4f 70       	andi	r20, 0x0F	; 15
 b12:	40 5d       	subi	r20, 0xD0	; 208
 b14:	4a 33       	cpi	r20, 0x3A	; 58
 b16:	18 f0       	brcs	.+6      	; 0xb1e <__ultoa_invert+0x7c>
 b18:	49 5d       	subi	r20, 0xD9	; 217
 b1a:	31 fd       	sbrc	r19, 1
 b1c:	40 52       	subi	r20, 0x20	; 32
 b1e:	41 93       	st	Z+, r20
 b20:	02 d0       	rcall	.+4      	; 0xb26 <__ultoa_invert+0x84>
 b22:	a9 f7       	brne	.-22     	; 0xb0e <__ultoa_invert+0x6c>
 b24:	ea cf       	rjmp	.-44     	; 0xafa <__ultoa_invert+0x58>
 b26:	b4 e0       	ldi	r27, 0x04	; 4
 b28:	a6 95       	lsr	r26
 b2a:	97 95       	ror	r25
 b2c:	87 95       	ror	r24
 b2e:	77 95       	ror	r23
 b30:	67 95       	ror	r22
 b32:	ba 95       	dec	r27
 b34:	c9 f7       	brne	.-14     	; 0xb28 <__ultoa_invert+0x86>
 b36:	00 97       	sbiw	r24, 0x00	; 0
 b38:	61 05       	cpc	r22, r1
 b3a:	71 05       	cpc	r23, r1
 b3c:	08 95       	ret
 b3e:	9b 01       	movw	r18, r22
 b40:	ac 01       	movw	r20, r24
 b42:	0a 2e       	mov	r0, r26
 b44:	06 94       	lsr	r0
 b46:	57 95       	ror	r21
 b48:	47 95       	ror	r20
 b4a:	37 95       	ror	r19
 b4c:	27 95       	ror	r18
 b4e:	ba 95       	dec	r27
 b50:	c9 f7       	brne	.-14     	; 0xb44 <__ultoa_invert+0xa2>
 b52:	62 0f       	add	r22, r18
 b54:	73 1f       	adc	r23, r19
 b56:	84 1f       	adc	r24, r20
 b58:	95 1f       	adc	r25, r21
 b5a:	a0 1d       	adc	r26, r0
 b5c:	08 95       	ret

00000b5e <_exit>:
 b5e:	f8 94       	cli

00000b60 <__stop_program>:
 b60:	ff cf       	rjmp	.-2      	; 0xb60 <__stop_program>
